{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { GlobalContext } from \"./AppContext\";\nimport { APIKEY } from \"../services/ApiKey\";\nimport emailjs from \"emailjs-com\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { getUserInfo } from \"./HTTPContext\";\n\nconst CommonFuntions = () => {\n  _s();\n\n  let {\n    data,\n    updateData,\n    updateUserDetails,\n    updateUserSettings,\n    updateTemplates\n  } = useContext(GlobalContext);\n\n  const AddExperience = () => {\n    let list = {\n      from: \"\",\n      to: \"\",\n      text: \"\"\n    };\n    data.userSettings[data.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const AddLanguage = () => {\n    data.userSettings[data.sectionIndex].sections.push(\"\");\n    updateData(data);\n  };\n\n  const AddContact = () => {\n    let list = {\n      title: \"\",\n      details: \"\"\n    };\n    data.userSettings[data.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const UpdateContactPhoneNumber = phoneNumber => {\n    data.userSettings[data.sectionIndex].info.phoneNumber = phoneNumber;\n    updateData(data);\n  };\n\n  const UpdateContactEmail = email => {\n    data.userSettings[data.sectionIndex].info.email = email;\n    updateData(data);\n  };\n\n  const AddSkill = () => {\n    let list = {\n      title: \"\",\n      details: \"\"\n    };\n    data.userSettings[data.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const AddEducation = () => {\n    console.log(data);\n    let list = {\n      from: \"\",\n      to: \"\",\n      text: \"\"\n    };\n    data.userSettings[data.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const AddProject = () => {\n    let list = {\n      projectName: \"\",\n      projectDescription: \"\"\n    };\n    data.userSettings[data.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const UpdateLanguage = (e, index) => {\n    data.userSettings[data.sectionIndex].sections[index] = e.target.value;\n    updateData(data);\n  };\n\n  const UpdateProjectName = (e, index) => {\n    data.userSettings[data.sectionIndex].sections[index].projectName = e.target.value;\n    updateData(data);\n  };\n\n  const UpdateProjectDescription = (e, index) => {\n    data.userSettings[data.sectionIndex].sections[index].projectDescription = e.target.value;\n    updateData(data);\n  };\n\n  const ModifyText = event => {\n    data.userSettings[data.sectionIndex].text = event.target.value;\n    updateData(data);\n  };\n\n  const UpdateFromSection = (e, index) => {\n    data.userSettings[data.sectionIndex].sections[index].from = e.target.value;\n    updateData(data);\n    console.log(data);\n  };\n\n  const UpdateToSection = (e, index) => {\n    data.userSettings[data.sectionIndex].sections[index].to = e.target.value;\n    updateData(data);\n  };\n\n  const UpdateTextSection = (e, index) => {\n    data.userSettings[data.sectionIndex].sections[index].text = e.target.value;\n    updateData(data);\n  };\n\n  const DeleteSection = index => {\n    data.userSettings[data.sectionIndex].sections.splice(index, 1);\n    updateData(data);\n  };\n\n  const UpdateTitleSection = (e, index) => {\n    data.userSettings[data.sectionIndex].sections[index].title = e.target.value;\n    updateData(data);\n  };\n\n  const UpdateDetailsSection = (e, index) => {\n    data.userSettings[data.sectionIndex].sections[index].details = e.target.value;\n    updateData(data);\n  };\n\n  const CheckSections = sectionName => {\n    let enable = false;\n    data.userSettings[sectionName].sections.map((section, index) => {\n      if (!enable) {\n        if (section.to !== \"\" && section.from !== \"\" && section.text !== \"\") {\n          enable = true;\n        }\n      }\n    });\n    return enable;\n  };\n\n  const UpdateSettings = settings => {\n    data[\"userSettings\"] = settings;\n    updateData(data);\n  };\n\n  const UpdateUser = userDetails => {\n    data[\"userDetails\"] = userDetails;\n    updateData(data);\n  };\n\n  const CheckProjectsStatus = () => {\n    let enable = false;\n    data.userSettings[\"projects\"].sections.map((section, index) => {\n      if (!enable) {\n        if (section.projectName !== \"\" && section.projectDescription !== \"\") {\n          enable = true;\n        }\n      }\n    });\n    return enable;\n  };\n\n  const CheckContactStatus = () => {\n    return data.userSettings.contact.info.phoneNumber !== \"\" || data.userSettings.contact.info.email !== \"\" || CheckSectionTextStatus(\"contact\");\n  };\n\n  const CheckSectionTextStatus = sectionName => {\n    let enable = false;\n    data.userSettings[sectionName].sections.map((text, index) => {\n      if (!enable && text !== \"\") {\n        enable = true;\n      }\n    });\n    return enable;\n  };\n\n  const Logout = () => {\n    sessionStorage.removeItem(\"OpenCVId\");\n  };\n\n  const PublishTemplate = () => {\n    data.userSettings.published = true;\n    updateData(data);\n  };\n\n  const UnpublishTemplate = () => {\n    data.userSettings.published = false;\n    updateData(data);\n  };\n\n  const UpdateTemplateVersion = index => {\n    data.userSettings.templateIndex = index;\n    updateData(data);\n  };\n\n  const AutoFill = () => {\n    ClearCV();\n    data.userSettings.personal_details.text = \"I recently graduated with a bachelorâ€™s degree in mathematics, majoring in statistics and analytics. I have experience working in the financial sector by way of an internship with a major multinational firm, which has helped me develop technical capabilities in data engineering and science. I have consistently proven my ability to meet deadlines and achieve project objectives, solve mission-critical problems and prioritize crucial tasks while maintaining the high standards expected of my role. I am currently seeking a position in an established data science firm to further my career goals\";\n    data.userSettings.experience.sections.push({\n      from: \"2020-01-01\",\n      to: \"2021-01-01\",\n      text: \"Experience 1\"\n    });\n    data.userSettings.education.sections.push({\n      from: \"2020-01-01\",\n      to: \"2021-01-01\",\n      text: \"Education 1\"\n    });\n    data.userSettings.projects.text = \"This is a description for all my projects\";\n    data.userSettings.projects.sections.push({\n      projectName: \"Project1\",\n      projectDescription: \"Project Description 1\"\n    });\n    data.userSettings.languages.sections.push(\"Arabic\");\n    data.userSettings.languages.sections.push(\"English\");\n    data.userSettings.contact.sections.push({\n      title: \"Facebook\",\n      details: \"www.facebook.com\"\n    });\n    data.userSettings.contact.info.phoneNumber = \"+96170888548\";\n    data.userSettings.contact.info.email = \"xyz@xyz.com\";\n    data.userSettings.skills.sections.push({\n      title: \"Front End Development\",\n      details: \"HTML, CSS ...\"\n    });\n    data.userSettings.skills.sections.push({\n      title: \"Back End Development\",\n      details: \"JAVA, Python ...\"\n    });\n    updateData(data);\n  };\n\n  const GenerateToken = () => {\n    let token = uuidv4();\n    data.userDetails.token = token;\n    updateData(data);\n  };\n\n  const ClearCV = () => {\n    data.userSettings.personal_details.text = \"\";\n    data.userSettings.experience.sections = [];\n    data.userSettings.education.sections = [];\n    data.userSettings.languages.sections = [];\n    data.userSettings.projects.sections = [];\n    data.userSettings.contact.sections = [];\n    data.userSettings.skills.sections = [];\n    data.userSettings.contact.info.phoneNumber = \"\";\n    data.userSettings.contact.info.email = \"\";\n    updateData(data);\n  };\n\n  const SendEmail = toSend => {\n    emailjs.send(APIKEY.SERVICE_ID, APIKEY.TEMPLATE_ID, toSend, APIKEY.USER_ID).then(function (response) {\n      console.log(\"SUCCESS!\", response.status, response.text);\n    }, function (error) {\n      console.log(\"FAILED...\", error);\n    });\n  };\n\n  const InitializeUser = () => {\n    let userID = \"\";\n\n    if (sessionStorage.getItem(\"OpenCVId\") !== \"\" && sessionStorage.getItem(\"OpenCVId\") !== null && data.userDetails.id === \"\") {\n      var _sessionStorage$getIt;\n\n      userID = (_sessionStorage$getIt = sessionStorage.getItem(\"OpenCVId\")) === null || _sessionStorage$getIt === void 0 ? void 0 : _sessionStorage$getIt.toString();\n      getUserInfo(userID).then(response => {\n        updateUserDetails(response.userDetails);\n        let list = [];\n        response.userTemplates.map((t, index) => {\n          list.push(t.id);\n        });\n        updateTemplates(list);\n      });\n    }\n  };\n\n  return {\n    UpdateContactPhoneNumber,\n    UpdateContactEmail,\n    InitializeUser,\n    AddExperience,\n    AddLanguage,\n    AddProject,\n    AddEducation,\n    UpdateLanguage,\n    UpdateProjectName,\n    UpdateProjectDescription,\n    ModifyText,\n    UpdateFromSection,\n    UpdateToSection,\n    UpdateTextSection,\n    DeleteSection,\n    AddContact,\n    UpdateTitleSection,\n    UpdateDetailsSection,\n    CheckSections,\n    CheckProjectsStatus,\n    CheckSectionTextStatus,\n    UpdateSettings,\n    UpdateUser,\n    Logout,\n    PublishTemplate,\n    AutoFill,\n    ClearCV,\n    UpdateTemplateVersion,\n    UnpublishTemplate,\n    SendEmail,\n    GenerateToken,\n    AddSkill,\n    CheckContactStatus\n  };\n};\n\n_s(CommonFuntions, \"aVqgARHYOiHxehBJ39npXmukmN0=\");\n\n_c = CommonFuntions;\nexport default CommonFuntions;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommonFuntions\");","map":{"version":3,"sources":["/home/ma/git/OpenCV/src/services/CommonFunctions.ts"],"names":["useContext","GlobalContext","APIKEY","emailjs","v4","uuidv4","getUserInfo","CommonFuntions","data","updateData","updateUserDetails","updateUserSettings","updateTemplates","AddExperience","list","from","to","text","userSettings","sectionIndex","sections","push","AddLanguage","AddContact","title","details","UpdateContactPhoneNumber","phoneNumber","info","UpdateContactEmail","email","AddSkill","AddEducation","console","log","AddProject","projectName","projectDescription","UpdateLanguage","e","index","target","value","UpdateProjectName","UpdateProjectDescription","ModifyText","event","UpdateFromSection","UpdateToSection","UpdateTextSection","DeleteSection","splice","UpdateTitleSection","UpdateDetailsSection","CheckSections","sectionName","enable","map","section","UpdateSettings","settings","UpdateUser","userDetails","CheckProjectsStatus","CheckContactStatus","contact","CheckSectionTextStatus","Logout","sessionStorage","removeItem","PublishTemplate","published","UnpublishTemplate","UpdateTemplateVersion","templateIndex","AutoFill","ClearCV","personal_details","experience","education","projects","languages","skills","GenerateToken","token","SendEmail","toSend","send","SERVICE_ID","TEMPLATE_ID","USER_ID","then","response","status","error","InitializeUser","userID","getItem","id","toString","userTemplates","t"],"mappings":"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","sourcesContent":["import { useContext } from \"react\";\nimport { GlobalContext } from \"./AppContext\";\nimport { APIKEY } from \"../services/ApiKey\";\nimport emailjs from \"emailjs-com\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { getUserInfo } from \"./HTTPContext\";\n\nconst CommonFuntions = () => {\n  let {\n    data,\n    updateData,\n    updateUserDetails,\n    updateUserSettings,\n    updateTemplates,\n  } = useContext(GlobalContext);\n  const AddExperience = () => {\n    let list = {\n      from: \"\",\n      to: \"\",\n      text: \"\",\n    };\n    data.userSettings[data.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const AddLanguage = () => {\n    data.userSettings[data.sectionIndex].sections.push(\"\");\n    updateData(data);\n  };\n\n  const AddContact = () => {\n    let list = {\n      title: \"\",\n      details: \"\",\n    };\n    data.userSettings[data.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const UpdateContactPhoneNumber = (phoneNumber: string) => {\n    data.userSettings[data.sectionIndex].info.phoneNumber = phoneNumber;\n    updateData(data);\n  };\n\n  const UpdateContactEmail = (email: string) => {\n    data.userSettings[data.sectionIndex].info.email = email;\n    updateData(data);\n  };\n\n  const AddSkill = () => {\n    let list = {\n      title: \"\",\n      details: \"\",\n    };\n    data.userSettings[data.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const AddEducation = () => {\n    console.log(data);\n    let list = {\n      from: \"\",\n      to: \"\",\n      text: \"\",\n    };\n    data.userSettings[data.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n  const AddProject = () => {\n    let list = {\n      projectName: \"\",\n      projectDescription: \"\",\n    };\n    data.userSettings[data.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const UpdateLanguage = (e: any, index: number) => {\n    data.userSettings[data.sectionIndex].sections[index] = e.target.value;\n    updateData(data);\n  };\n\n  const UpdateProjectName = (e: any, index: number) => {\n    data.userSettings[data.sectionIndex].sections[index].projectName =\n      e.target.value;\n    updateData(data);\n  };\n\n  const UpdateProjectDescription = (e: any, index: number) => {\n    data.userSettings[data.sectionIndex].sections[index].projectDescription =\n      e.target.value;\n    updateData(data);\n  };\n\n  const ModifyText = (event: any) => {\n    data.userSettings[data.sectionIndex].text = event.target.value;\n    updateData(data);\n  };\n  const UpdateFromSection = (e: any, index: number) => {\n    data.userSettings[data.sectionIndex].sections[index].from = e.target.value;\n    updateData(data);\n    console.log(data);\n  };\n  const UpdateToSection = (e: any, index: number) => {\n    data.userSettings[data.sectionIndex].sections[index].to = e.target.value;\n    updateData(data);\n  };\n  const UpdateTextSection = (e: any, index: number) => {\n    data.userSettings[data.sectionIndex].sections[index].text = e.target.value;\n    updateData(data);\n  };\n  const DeleteSection = (index: number) => {\n    data.userSettings[data.sectionIndex].sections.splice(index, 1);\n    updateData(data);\n  };\n  const UpdateTitleSection = (e: any, index: number) => {\n    data.userSettings[data.sectionIndex].sections[index].title = e.target.value;\n    updateData(data);\n  };\n  const UpdateDetailsSection = (e: any, index: number) => {\n    data.userSettings[data.sectionIndex].sections[index].details =\n      e.target.value;\n    updateData(data);\n  };\n\n  const CheckSections = (sectionName: string) => {\n    let enable: boolean = false;\n    data.userSettings[sectionName].sections.map((section: any, index: any) => {\n      if (!enable) {\n        if (section.to !== \"\" && section.from !== \"\" && section.text !== \"\") {\n          enable = true;\n        }\n      }\n    });\n    return enable;\n  };\n\n  const UpdateSettings = (settings: any) => {\n    data[\"userSettings\"] = settings;\n    updateData(data);\n  };\n\n  const UpdateUser = (userDetails: any) => {\n    data[\"userDetails\"] = userDetails;\n    updateData(data);\n  };\n\n  const CheckProjectsStatus = () => {\n    let enable: boolean = false;\n    data.userSettings[\"projects\"].sections.map((section: any, index: any) => {\n      if (!enable) {\n        if (section.projectName !== \"\" && section.projectDescription !== \"\") {\n          enable = true;\n        }\n      }\n    });\n    return enable;\n  };\n\n  const CheckContactStatus = () => {\n    return (\n      data.userSettings.contact.info.phoneNumber !== \"\" ||\n      data.userSettings.contact.info.email !== \"\" ||\n      CheckSectionTextStatus(\"contact\")\n    );\n  };\n\n  const CheckSectionTextStatus = (sectionName: string) => {\n    let enable: boolean = false;\n    data.userSettings[sectionName].sections.map((text: any, index: any) => {\n      if (!enable && text !== \"\") {\n        enable = true;\n      }\n    });\n    return enable;\n  };\n\n  const Logout = () => {\n    sessionStorage.removeItem(\"OpenCVId\");\n  };\n\n  const PublishTemplate = () => {\n    data.userSettings.published = true;\n    updateData(data);\n  };\n\n  const UnpublishTemplate = () => {\n    data.userSettings.published = false;\n    updateData(data);\n  };\n\n  const UpdateTemplateVersion = (index: number) => {\n    data.userSettings.templateIndex = index;\n    updateData(data);\n  };\n\n  const AutoFill = () => {\n    ClearCV();\n    data.userSettings.personal_details.text =\n      \"I recently graduated with a bachelorâ€™s degree in mathematics, majoring in statistics and analytics. I have experience working in the financial sector by way of an internship with a major multinational firm, which has helped me develop technical capabilities in data engineering and science. I have consistently proven my ability to meet deadlines and achieve project objectives, solve mission-critical problems and prioritize crucial tasks while maintaining the high standards expected of my role. I am currently seeking a position in an established data science firm to further my career goals\";\n    data.userSettings.experience.sections.push({\n      from: \"2020-01-01\",\n      to: \"2021-01-01\",\n      text: \"Experience 1\",\n    });\n\n    data.userSettings.education.sections.push({\n      from: \"2020-01-01\",\n      to: \"2021-01-01\",\n      text: \"Education 1\",\n    });\n    data.userSettings.projects.text =\n      \"This is a description for all my projects\";\n    data.userSettings.projects.sections.push({\n      projectName: \"Project1\",\n      projectDescription: \"Project Description 1\",\n    });\n    data.userSettings.languages.sections.push(\"Arabic\");\n    data.userSettings.languages.sections.push(\"English\");\n    data.userSettings.contact.sections.push({\n      title: \"Facebook\",\n      details: \"www.facebook.com\",\n    });\n    data.userSettings.contact.info.phoneNumber = \"+96170888548\";\n    data.userSettings.contact.info.email = \"xyz@xyz.com\";\n\n    data.userSettings.skills.sections.push({\n      title: \"Front End Development\",\n      details: \"HTML, CSS ...\",\n    });\n\n    data.userSettings.skills.sections.push({\n      title: \"Back End Development\",\n      details: \"JAVA, Python ...\",\n    });\n\n    updateData(data);\n  };\n\n  const GenerateToken = () => {\n    let token = uuidv4();\n    data.userDetails.token = token;\n    updateData(data);\n  };\n\n  const ClearCV = () => {\n    data.userSettings.personal_details.text = \"\";\n    data.userSettings.experience.sections = [];\n    data.userSettings.education.sections = [];\n    data.userSettings.languages.sections = [];\n    data.userSettings.projects.sections = [];\n    data.userSettings.contact.sections = [];\n    data.userSettings.skills.sections = [];\n    data.userSettings.contact.info.phoneNumber = \"\";\n    data.userSettings.contact.info.email = \"\";\n\n    updateData(data);\n  };\n\n  const SendEmail = (toSend: any) => {\n    emailjs\n      .send(APIKEY.SERVICE_ID, APIKEY.TEMPLATE_ID, toSend, APIKEY.USER_ID)\n      .then(\n        function (response) {\n          console.log(\"SUCCESS!\", response.status, response.text);\n        },\n        function (error) {\n          console.log(\"FAILED...\", error);\n        }\n      );\n  };\n  const InitializeUser = () => {\n    let userID: any = \"\";\n    if (\n      sessionStorage.getItem(\"OpenCVId\") !== \"\" &&\n      sessionStorage.getItem(\"OpenCVId\") !== null &&\n      data.userDetails.id === \"\"\n    ) {\n      userID = sessionStorage.getItem(\"OpenCVId\")?.toString();\n      getUserInfo(userID).then((response) => {\n        updateUserDetails(response.userDetails);\n        let list: string[] = [];\n        response.userTemplates.map((t: any, index) => {\n          list.push(t.id);\n        });\n        updateTemplates(list);\n      });\n    }\n  };\n  return {\n    UpdateContactPhoneNumber,\n    UpdateContactEmail,\n    InitializeUser,\n    AddExperience,\n    AddLanguage,\n    AddProject,\n    AddEducation,\n    UpdateLanguage,\n    UpdateProjectName,\n    UpdateProjectDescription,\n    ModifyText,\n    UpdateFromSection,\n    UpdateToSection,\n    UpdateTextSection,\n    DeleteSection,\n    AddContact,\n    UpdateTitleSection,\n    UpdateDetailsSection,\n    CheckSections,\n    CheckProjectsStatus,\n    CheckSectionTextStatus,\n    UpdateSettings,\n    UpdateUser,\n    Logout,\n    PublishTemplate,\n    AutoFill,\n    ClearCV,\n    UpdateTemplateVersion,\n    UnpublishTemplate,\n    SendEmail,\n    GenerateToken,\n    AddSkill,\n    CheckContactStatus,\n  } as const;\n};\n\nexport default CommonFuntions;\n"]},"metadata":{},"sourceType":"module"}