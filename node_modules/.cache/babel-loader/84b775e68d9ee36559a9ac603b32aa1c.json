{"ast":null,"code":"var _jsxFileName = \"/home/ma/Downloads/AlgoTradersTest/AlgoTraders/src/components/Modal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { GlobalContext } from \"../services/AppContext\";\nimport CommonFuntions from \"./CommonFunctions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Modal = () => {\n  _s();\n\n  const {\n    data,\n    updateData,\n    updateIndex,\n    sectionIndex\n  } = useContext(GlobalContext);\n  const {\n    AddEducation,\n    ModifyText,\n    UpdateFromSection,\n    UpdateToSection,\n    UpdateTextSection,\n    AddExperience,\n    AddLanguage,\n    UpdateLanguage,\n    AddProject,\n    UpdateProjectDescription,\n    UpdateProjectName\n  } = CommonFuntions();\n  const [visible, isVisible] = useState(sectionIndex !== \"\");\n\n  const modifyVisibility = () => {\n    isVisible(false);\n    updateIndex(\"\");\n  };\n\n  useEffect(() => {\n    if (sectionIndex !== \"\") {\n      isVisible(true);\n    }\n  }, [sectionIndex]);\n  return visible ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"absolute w-1/2 h-96 left-1/4 top-1/4 z-10 bg-green-600 overflow-scroll\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-end\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"cursor-pointer\",\n        onClick: () => modifyVisibility(),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), sectionIndex === \"personal_details\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"flex h-52  \",\n        onChange: e => ModifyText(e),\n        placeholder: \"Type your profile\",\n        value: data[sectionIndex].text,\n        rows: 20,\n        cols: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : sectionIndex === \"education\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => AddEducation(),\n        className: \"rounded w-12 h-12\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), data[sectionIndex].sections.map((section, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-col gap-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-x-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => UpdateFromSection(e, index),\n                className: \"w-32\",\n                placeholder: \"from\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"w-32\",\n                placeholder: \"To\",\n                onChange: e => UpdateToSection(e, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"\",\n            placeholder: \"Experience\",\n            onChange: e => UpdateTextSection(e, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : sectionIndex === \"experience\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => AddExperience(),\n        className: \"rounded w-12 h-12\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), data[sectionIndex].sections.map((section, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-col gap-y-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => UpdateFromSection(e, index),\n                className: \"\",\n                placeholder: \"from\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"\",\n                placeholder: \"To\",\n                onChange: e => UpdateToSection(e, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"\",\n              placeholder: \"Experience\",\n              onChange: e => UpdateTextSection(e, index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) : sectionIndex === \"languages\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => AddLanguage(),\n        className: \"rounded w-12 h-12\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), data[sectionIndex].sections.map((text, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-col gap-y-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => UpdateLanguage(e, index),\n                className: \"\",\n                value: text,\n                placeholder: \"Language\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this) : sectionIndex === \"projects\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: e => ModifyText(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 56\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => AddProject(),\n        className: \"rounded w-12 h-12\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), data[sectionIndex].sections.map((section, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-col gap-y-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => UpdateProjectName(e, index),\n              value: section.projectName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"\",\n              placeholder: \"Experience\",\n              onChange: e => UpdateProjectDescription(e, index),\n              children: section.projectDescription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(Modal, \"2kYZvCx2Wfkolq1sHICO9G1k3ys=\");\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/home/ma/Downloads/AlgoTradersTest/AlgoTraders/src/components/Modal.tsx"],"names":["React","useContext","useEffect","useState","GlobalContext","CommonFuntions","Modal","data","updateData","updateIndex","sectionIndex","AddEducation","ModifyText","UpdateFromSection","UpdateToSection","UpdateTextSection","AddExperience","AddLanguage","UpdateLanguage","AddProject","UpdateProjectDescription","UpdateProjectName","visible","isVisible","modifyVisibility","e","text","sections","map","section","index","projectName","projectDescription"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { GlobalContext } from \"../services/AppContext\";\nimport CommonFuntions from \"./CommonFunctions\";\n\nconst Modal = () => {\n  const { data, updateData, updateIndex, sectionIndex } =\n    useContext(GlobalContext);\n  const {\n    AddEducation,\n    ModifyText,\n    UpdateFromSection,\n    UpdateToSection,\n    UpdateTextSection,\n    AddExperience,\n    AddLanguage,\n    UpdateLanguage,\n    AddProject,\n    UpdateProjectDescription,\n    UpdateProjectName,\n  } = CommonFuntions();\n  const [visible, isVisible] = useState(sectionIndex !== \"\");\n  const modifyVisibility = () => {\n    isVisible(false);\n    updateIndex(\"\");\n  };\n  useEffect(() => {\n    if (sectionIndex !== \"\") {\n      isVisible(true);\n    }\n  }, [sectionIndex]);\n\n  return visible ? (\n    <div className=\"absolute w-1/2 h-96 left-1/4 top-1/4 z-10 bg-green-600 overflow-scroll\">\n      <div className=\"flex justify-end\">\n        <span className=\"cursor-pointer\" onClick={() => modifyVisibility()}>\n          X\n        </span>\n      </div>\n      {sectionIndex === \"personal_details\" ? (\n        <div>\n          <textarea\n            className={\"flex h-52  \"}\n            onChange={(e) => ModifyText(e)}\n            placeholder=\"Type your profile\"\n            value={data[sectionIndex].text}\n            rows={20}\n            cols={5}\n          />\n        </div>\n      ) : sectionIndex === \"education\" ? (\n        <div>\n          <button onClick={() => AddEducation()} className=\"rounded w-12 h-12\">\n            Add\n          </button>\n          {data[sectionIndex].sections.map((section: any, index: any) => {\n            return (\n              <div className=\"flex-col gap-y-6\">\n                <div className=\"flex gap-x-3\">\n                  <div>\n                    <input\n                      onChange={(e) => UpdateFromSection(e, index)}\n                      className=\"w-32\"\n                      placeholder=\"from\"\n                    />\n                  </div>\n                  <div>\n                    <input\n                      className=\"w-32\"\n                      placeholder=\"To\"\n                      onChange={(e) => UpdateToSection(e, index)}\n                    />\n                  </div>\n                </div>\n                <br />\n                <textarea\n                  className=\"\"\n                  placeholder=\"Experience\"\n                  onChange={(e) => UpdateTextSection(e, index)}\n                />\n              </div>\n            );\n          })}\n        </div>\n      ) : sectionIndex === \"experience\" ? (\n        <div>\n          <button onClick={() => AddExperience()} className=\"rounded w-12 h-12\">\n            Add\n          </button>\n          {data[sectionIndex].sections.map((section: any, index: any) => {\n            return (\n              <div className=\"flex-col gap-y-3\">\n                <div className=\"flex\">\n                  <div>\n                    <input\n                      onChange={(e) => UpdateFromSection(e, index)}\n                      className=\"\"\n                      placeholder=\"from\"\n                    />\n                  </div>\n                  <div>\n                    <input\n                      className=\"\"\n                      placeholder=\"To\"\n                      onChange={(e) => UpdateToSection(e, index)}\n                    />\n                  </div>\n                </div>\n                <div>\n                  <textarea\n                    className=\"\"\n                    placeholder=\"Experience\"\n                    onChange={(e) => UpdateTextSection(e, index)}\n                  />\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      ) : sectionIndex === \"languages\" ? (\n        <div>\n          <button onClick={() => AddLanguage()} className=\"rounded w-12 h-12\">\n            Add\n          </button>\n          {data[sectionIndex].sections.map((text: any, index: any) => {\n            return (\n              <div className=\"flex-col gap-y-3\">\n                <div className=\"flex\">\n                  <div>\n                    <input\n                      onChange={(e) => UpdateLanguage(e, index)}\n                      className=\"\"\n                      value={text}\n                      placeholder=\"Language\"\n                    />\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      ) : sectionIndex === \"projects\" ? (\n        <div className=\"flex-col\">\n          <textarea onChange={(e) => ModifyText(e)} /> <br />\n          <button onClick={() => AddProject()} className=\"rounded w-12 h-12\">\n            Add\n          </button>\n          {data[sectionIndex].sections.map((section: any, index: any) => {\n            return (\n              <div className=\"flex-col gap-y-3\">\n                <div>\n                  <input\n                    onChange={(e) => UpdateProjectName(e, index)}\n                    value={section.projectName}\n                  ></input>\n                </div>\n                <div>\n                  <textarea\n                    className=\"\"\n                    placeholder=\"Experience\"\n                    onChange={(e) => UpdateProjectDescription(e, index)}\n                  >\n                    {section.projectDescription}\n                  </textarea>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <></>\n      )}\n    </div>\n  ) : (\n    <></>\n  );\n};\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}