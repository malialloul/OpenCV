{"ast":null,"code":"var _jsxFileName = \"/home/ma/Downloads/AlgoTradersTest/AlgoTraders/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport AppContext from \"./services/AppContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [setting1value, setSetting1value] = useState('initialValue1');\n  const [setting2value, setSetting2value] = useState(false);\n  const userSettings = {\n    setting1name: setting1value,\n    setting2name: setting2value,\n    setSetting1value\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: userSettings\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n};\n\n_s(App, \"uSdZnlj2/tJyHDiQyLnqZvcqrik=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ma/Downloads/AlgoTradersTest/AlgoTraders/src/App.tsx"],"names":["useState","AppContext","App","setting1value","setSetting1value","setting2value","setSetting2value","userSettings","setting1name","setting2name"],"mappings":";;;AAEA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,UAAP,MAAuB,uBAAvB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCJ,QAAQ,CAAC,eAAD,CAAlD;AACA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,KAAD,CAAlD;AAEA,QAAMO,YAAY,GAAG;AACnBC,IAAAA,YAAY,EAAEL,aADK;AAEnBM,IAAAA,YAAY,EAAEJ,aAFK;AAGnBD,IAAAA;AAHmB,GAArB;AAKA,sBAAO,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAEG;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD,CAZD;;GAAML,G;;KAAAA,G;AAcN,eAAeA,GAAf","sourcesContent":["import Settings from \"./components/templates/Settings\";\nimport Template from \"./components/templates/Template\";\nimport { useState } from \"react\";\nimport { configData } from \"./constants\";\nimport AppContext from \"./services/AppContext\";\n\nconst App = () => {\n  const [setting1value, setSetting1value] = useState('initialValue1');\n  const [setting2value, setSetting2value] = useState(false);\n \n  const userSettings = {\n    setting1name: setting1value,\n    setting2name: setting2value,\n    setSetting1value,\n  };\n  return <AppContext.Provider value={userSettings}>\n    {/* All other components are wrapped by the AppContext.Provider */}\n  </AppContext.Provider>\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}