{"ast":null,"code":"var _jsxFileName = \"/home/ma/git/OpenCV/src/pages/SignUp.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { addUser, getUsers, addUserSettings } from \"../services/HTTPContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = ({ ...props\n}) => {\n  _s();\n\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [messageError, setMessageError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  const signUp = () => {\n    if (userName === \"\" || password === \"\" || confirmPassword === \"\") {\n      setMessageError(\"Please fill all fields\"); //to be modified\n    } else if (password.length > 8) {\n      setMessageError(\"Password length should be greater than 8\");\n    } else if (password !== confirmPassword) {\n      setMessageError(\"Passwords don't match\");\n    } else {\n      getUsers().then(response => {\n        let list = response.filter(user => user.email === email);\n\n        if (list.length === 0) {\n          addUser(userName, password, email).then(user => {\n            addUserSettings(user.id);\n          });\n          setSuccessMessage(\"User Created Successfully\");\n        } else {\n          setMessageError(\"This email already in use. User another one\");\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" rounded flex justify-center items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500\",\n          children: messageError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-green-500\",\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"rounded p-3 bg-white border-b-2\",\n            placeholder: \"UserName\",\n            type: \"text\",\n            onChange: e => setUserName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"rounded p-3 bg-white border-b-2\",\n            placeholder: \"Password\",\n            type: \"password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"rounded p-3 bg-white border-b-2\",\n            placeholder: \"Email\",\n            type: \"email\",\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"rounded p-3 bg-white border-b-2\",\n            placeholder: \"Confirm Password\",\n            type: \"password\",\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => signUp(),\n            className: \"rounded-full text-white p-3 w-full  bg-indigo-500\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUp, \"VP7U2Bza47JWeMITtpJRyHZ7N98=\");\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/home/ma/git/OpenCV/src/pages/SignUp.tsx"],"names":["React","useState","addUser","getUsers","addUserSettings","SignUp","props","userName","setUserName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","messageError","setMessageError","successMessage","setSuccessMessage","signUp","length","then","response","list","filter","user","id","e","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useContext } from \"react\";\nimport { useState } from \"react\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { GlobalContext } from \"../services/AppContext\";\nimport { addUser, getUsers, addUserSettings } from \"../services/HTTPContext\";\nimport { APIKEY } from \"../services/ApiKey\";\n\nconst SignUp = ({ ...props }) => {\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [messageError, setMessageError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  const signUp = () => {\n    if (userName === \"\" || password === \"\" || confirmPassword === \"\") {\n      setMessageError(\"Please fill all fields\");\n      //to be modified\n    } else if (password.length > 8) {\n      setMessageError(\"Password length should be greater than 8\");\n    } else if (password !== confirmPassword) {\n      setMessageError(\"Passwords don't match\");\n    } else {\n      getUsers().then((response: any) => {\n        let list = response.filter((user: any) => user.email === email);\n        if (list.length === 0) {\n\n          addUser(userName, password, email).then((user: any) => {\n            addUserSettings(user.id);\n          });\n          setSuccessMessage(\"User Created Successfully\")\n        } else {\n          setMessageError(\"This email already in use. User another one\");\n        }\n      });\n    }\n  };\n\n  return (\n    <div>\n      <div className=\" rounded flex justify-center items-center\">\n        <div className=\"flex-col\">\n          <div className=\"text-red-500\">{messageError}</div>\n          <div className=\"text-green-500\">{successMessage}</div>\n\n          <div>\n            <input\n              className=\"rounded p-3 bg-white border-b-2\"\n              placeholder=\"UserName\"\n              type=\"text\"\n              onChange={(e) => setUserName(e.target.value)}\n            />\n          </div>\n          <div>\n            <input\n              className=\"rounded p-3 bg-white border-b-2\"\n              placeholder=\"Password\"\n              type=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n          <div>\n            <input\n              className=\"rounded p-3 bg-white border-b-2\"\n              placeholder=\"Email\"\n              type=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div>\n            <input\n              className=\"rounded p-3 bg-white border-b-2\"\n              placeholder=\"Confirm Password\"\n              type=\"password\"\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n          </div>\n          <div className=\"p-3\">\n            <button\n              onClick={() => signUp()}\n              className=\"rounded-full text-white p-3 w-full  bg-indigo-500\"\n            >\n              Submit\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}