{"ast":null,"code":"var _jsxFileName = \"/home/ma/git/OpenCV/src/pages/Signin.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { useState } from \"react\";\nimport { GlobalContext } from \"../services/AppContext\";\nimport { getUsers, getUserInfo } from \"../services/HTTPContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = ({ ...props\n}) => {\n  _s();\n\n  let {\n    updateUserSettings,\n    updateUserDetails,\n    updateTemplates\n  } = useContext(GlobalContext);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [messageError, setMessageError] = useState(\"\");\n\n  const signIn = () => {\n    if (email === \"\" || password === \"\") {\n      setMessageError(\"Please fill all fields\");\n    } else {\n      getUsers().then(response => {\n        let list = response.filter(user => user.email === email && user.password === password);\n\n        if (list.length !== 0) {\n          getUserInfo(list[0].id).then(info => {\n            console.log(info);\n            let list = [];\n            info.userTemplates.map((t, index) => {\n              list.push(t.id);\n            });\n            updateTemplates(list);\n            updateUserDetails(info.userDetails);\n          }).then(final => {\n            sessionStorage.setItem(\"OpenCVId\", list[0].id);\n            props.history.push(\"/dashboard\");\n          });\n        } else {\n          setMessageError(\"User Not Found\");\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" rounded flex justify-center items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-red-500\",\n            children: messageError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"rounded p-3 bg-white border-b-2\",\n            placeholder: \"Email\",\n            type: \"email\",\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"rounded p-3 bg-white border-b-2\",\n            placeholder: \"Password\",\n            type: \"password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => signIn(),\n            className: \"rounded-full text-white p-3 w-full  bg-indigo-500\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"q0SkAAHiNmShp7/BaqaKoljkwYg=\");\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/home/ma/git/OpenCV/src/pages/Signin.tsx"],"names":["React","useContext","useState","GlobalContext","getUsers","getUserInfo","SignIn","props","updateUserSettings","updateUserDetails","updateTemplates","email","setEmail","password","setPassword","messageError","setMessageError","signIn","then","response","list","filter","user","length","id","info","console","log","userTemplates","map","t","index","push","userDetails","final","sessionStorage","setItem","history","e","target","value"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { useState } from \"react\";\nimport { GlobalContext } from \"../services/AppContext\";\nimport { getUsers, getUserInfo } from \"../services/HTTPContext\";\nimport CommonFuntions from \"../services/CommonFunctions\";\n\nconst SignIn = ({ ...props }) => {\n  let { updateUserSettings, updateUserDetails, updateTemplates } =\n    useContext(GlobalContext);\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [messageError, setMessageError] = useState(\"\");\n  const signIn = () => {\n    if (email === \"\" || password === \"\") {\n      setMessageError(\"Please fill all fields\");\n    } else {\n      getUsers().then((response) => {\n        let list = response.filter(\n          (user: any) =>\n            user.email === email && user.password === password\n        );\n        if (list.length !== 0) {\n          getUserInfo(list[0].id)\n            .then((info) => {\n              console.log(info);\n              let list: string[] = [];\n              info.userTemplates.map((t: any, index) => {\n                list.push(t.id);\n              });\n              updateTemplates(list);\n              updateUserDetails(info.userDetails);\n            })\n            .then((final) => {\n              sessionStorage.setItem(\"OpenCVId\", list[0].id);\n              props.history.push(\"/dashboard\");\n            });\n        } else {\n          setMessageError(\"User Not Found\");\n        }\n      });\n    }\n  };\n\n  return (\n    <div>\n      <div className=\" rounded flex justify-center items-center\">\n        <div className=\"flex-col\">\n          <div>\n            <div className=\"text-red-500\">{messageError}</div>\n            <input\n              className=\"rounded p-3 bg-white border-b-2\"\n              placeholder=\"Email\"\n              type=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div>\n            <input\n              className=\"rounded p-3 bg-white border-b-2\"\n              placeholder=\"Password\"\n              type=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n\n          <div className=\"p-3\">\n            <button\n              onClick={() => signIn()}\n              className=\"rounded-full text-white p-3 w-full  bg-indigo-500\"\n            >\n              Submit\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}