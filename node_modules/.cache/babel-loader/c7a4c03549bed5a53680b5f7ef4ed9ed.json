{"ast":null,"code":"import { v4 as uuidv4 } from \"uuid\";\nexport const addUser = async (username, password) => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id: uuidv4(),\n      username: username,\n      password: password\n    })\n  };\n  return await fetch(\"http://localhost:8000/users/\", requestOptions).then(response => response.json());\n};\nexport const getUsers = async () => {\n  return await fetch(\"http://localhost:8000/users\").then(response => response.json());\n};\nexport const getUserDetails = async userId => {\n  return await fetch(\"http://localhost:8000/users/\" + userId).then(response => response.json());\n};\nexport const getUserSettings = async userId => {\n  return await fetch(\"http://localhost:8000/settings/\" + userId).then(response => response.json());\n};\nexport const getUserInfo = async userId => {\n  let user = {\n    userDetails: {},\n    userSettings: {}\n  };\n  getUserDetails(userId).then(response => {\n    user.userDetails = response;\n  });\n  getUserSettings(userId).then(response => {\n    user.userSettings = response;\n  });\n  return user;\n};","map":{"version":3,"sources":["/home/ma/git/OpenCV/src/services/HTTPContext.ts"],"names":["v4","uuidv4","addUser","username","password","requestOptions","method","headers","Accept","body","JSON","stringify","id","fetch","then","response","json","getUsers","getUserDetails","userId","getUserSettings","getUserInfo","user","userDetails","userSettings"],"mappings":"AACA,SAASA,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAEA,OAAO,MAAMC,OAAO,GAAG,OAAOC,QAAP,EAAyBC,QAAzB,KAA8C;AACnE,QAAMC,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,MADa;AAErBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB;AAFT,KAFY;AAMrBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,EAAE,EAAEX,MAAM,EADS;AAEnBE,MAAAA,QAAQ,EAAEA,QAFS;AAGnBC,MAAAA,QAAQ,EAAEA;AAHS,KAAf;AANe,GAAvB;AAYA,SAAO,MAAMS,KAAK,CAAC,8BAAD,EAAiCR,cAAjC,CAAL,CAAsDS,IAAtD,CACVC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADH,CAAb;AAGD,CAhBM;AAkBP,OAAO,MAAMC,QAAQ,GAAG,YAAY;AAClC,SAAO,MAAMJ,KAAK,CAAC,6BAAD,CAAL,CAAqCC,IAArC,CAA2CC,QAAD,IACrDA,QAAQ,CAACC,IAAT,EADW,CAAb;AAGD,CAJM;AAMP,OAAO,MAAME,cAAc,GAAG,MAAOC,MAAP,IAA0B;AACtD,SAAO,MAAMN,KAAK,CAAC,iCAAiCM,MAAlC,CAAL,CAA+CL,IAA/C,CAAqDC,QAAD,IAC/DA,QAAQ,CAACC,IAAT,EADW,CAAb;AAGD,CAJM;AAMP,OAAO,MAAMI,eAAe,GAAG,MAAOD,MAAP,IAA0B;AACvD,SAAO,MAAMN,KAAK,CAAC,oCAAoCM,MAArC,CAAL,CAAkDL,IAAlD,CACVC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADH,CAAb;AAGD,CAJM;AAMP,OAAO,MAAMK,WAAW,GAAG,MAAOF,MAAP,IAA0B;AACnD,MAAIG,IAAI,GAAG;AACTC,IAAAA,WAAW,EAAE,EADJ;AAETC,IAAAA,YAAY,EAAE;AAFL,GAAX;AAKAN,EAAAA,cAAc,CAACC,MAAD,CAAd,CAAuBL,IAAvB,CAA6BC,QAAD,IAAc;AACxCO,IAAAA,IAAI,CAACC,WAAL,GAAmBR,QAAnB;AACD,GAFD;AAGAK,EAAAA,eAAe,CAACD,MAAD,CAAf,CAAwBL,IAAxB,CAA8BC,QAAD,IAAc;AACzCO,IAAAA,IAAI,CAACE,YAAL,GAAoBT,QAApB;AACD,GAFD;AAGA,SAAOO,IAAP;AACD,CAbM","sourcesContent":["import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport const addUser = async (username: string, password: string) => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      id: uuidv4(),\n      username: username,\n      password: password,\n    }),\n  };\n  return await fetch(\"http://localhost:8000/users/\", requestOptions).then(\n    (response) => response.json()\n  );\n};\n\nexport const getUsers = async () => {\n  return await fetch(\"http://localhost:8000/users\").then((response) =>\n    response.json()\n  );\n};\n\nexport const getUserDetails = async (userId: string) => {\n  return await fetch(\"http://localhost:8000/users/\" + userId).then((response) =>\n    response.json()\n  );\n};\n\nexport const getUserSettings = async (userId: string) => {\n  return await fetch(\"http://localhost:8000/settings/\" + userId).then(\n    (response) => response.json()\n  );\n};\n\nexport const getUserInfo = async (userId: string) => {\n  let user = {\n    userDetails: {},\n    userSettings: {},\n  };\n\n  getUserDetails(userId).then((response) => {\n    user.userDetails = response;\n  });\n  getUserSettings(userId).then((response) => {\n    user.userSettings = response;\n  });\n  return user;\n};\n"]},"metadata":{},"sourceType":"module"}