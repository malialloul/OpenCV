{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { GlobalContext } from \"./AppContext\";\nimport { APIKEY } from \"../services/ApiKey\";\nimport emailjs from \"emailjs-com\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { getUserInfo } from \"./HTTPContext\";\n\nconst CommonFuntions = () => {\n  _s();\n\n  let {\n    data,\n    updateData,\n    updateUserDetails,\n    updateTemplates\n  } = useContext(GlobalContext);\n\n  const AddExperience = () => {\n    let list = {\n      from: \"\",\n      to: \"\",\n      text: \"\"\n    };\n    data.settings[data.builderSectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const AddLanguage = () => {\n    data.settings[data.builderSectionIndex].sections.push(\"\");\n    updateData(data);\n  };\n\n  const AddPersonalInfo = () => {\n    data.settings[data.builderSectionIndex].sections.push(\"\");\n    updateData(data);\n  };\n\n  const UpdatePersonalInfoPhoneNumber = phoneNumber => {\n    data.settings[data.builderSectionIndex].info.phoneNumber = phoneNumber;\n    updateData(data);\n  };\n\n  const UpdatePersonalInfoName = name => {\n    data.settings[data.builderSectionIndex].info.name = name;\n    updateData(data);\n  };\n\n  const UpdatePersonalInfoEmail = email => {\n    data.settings[data.builderSectionIndex].info.email = email;\n    updateData(data);\n  };\n\n  const AddSkill = () => {\n    let list = {\n      title: \"\",\n      details: \"\"\n    };\n    data.settings[data.builderSectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const AddEducation = () => {\n    console.log(data);\n    let list = {\n      from: \"\",\n      to: \"\",\n      text: \"\"\n    };\n    data.settings[data.builderSectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const AddProject = () => {\n    let list = {\n      projectName: \"\",\n      projectDescription: \"\"\n    };\n    data.settings[data.builderSectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const UpdateLanguage = (e, index) => {\n    data.settings[data.builderSectionIndex].sections[index] = e.target.value;\n    updateData(data);\n  };\n\n  const UpdateProjectName = (e, index) => {\n    data.settings[data.builderSectionIndex].sections[index].projectName = e.target.value;\n    updateData(data);\n  };\n\n  const UpdateProjectDescription = (e, index) => {\n    data.settings[data.builderSectionIndex].sections[index].projectDescription = e.target.value;\n    updateData(data);\n  };\n\n  const ModifyText = event => {\n    data.settings[data.builderSectionIndex].text = event.target.value;\n    updateData(data);\n  };\n\n  const UpdateFromSection = (e, index) => {\n    data.settings[data.builderSectionIndex].sections[index].from = e.target.value;\n    updateData(data);\n    console.log(data);\n  };\n\n  const UpdateToSection = (e, index) => {\n    data.settings[data.builderSectionIndex].sections[index].to = e.target.value;\n    updateData(data);\n  };\n\n  const UpdateTextSection = (e, index) => {\n    data.settings[data.builderSectionIndex].sections[index].text = e.target.value;\n    updateData(data);\n  };\n\n  const DeleteSection = index => {\n    data.settings[data.builderSectionIndex].sections.splice(index, 1);\n    updateData(data);\n  };\n\n  const UpdateTitleSection = (e, index) => {\n    data.settings[data.builderSectionIndex].sections[index].title = e.target.value;\n    updateData(data);\n  };\n\n  const UpdateDetailsSection = (e, index) => {\n    data.settings[data.builderSectionIndex].sections[index].details = e.target.value;\n    updateData(data);\n  };\n\n  const CheckSections = sectionName => {\n    let enable = false;\n    data.settings[sectionName].sections.map((section, index) => {\n      if (!enable) {\n        if (section.to !== \"\" && section.from !== \"\" && section.text !== \"\") {\n          enable = true;\n        }\n      }\n    });\n    return enable;\n  };\n\n  const UpdateSettings = settings => {\n    data[\"settings\"] = settings;\n    updateData(data);\n  };\n\n  const UpdateUser = userDetails => {\n    data[\"userDetails\"] = userDetails;\n    updateData(data);\n  };\n\n  const CheckProjectsStatus = () => {\n    let enable = false;\n    data.settings[\"projects\"].sections.map((section, index) => {\n      if (!enable) {\n        if (section.projectName !== \"\" && section.projectDescription !== \"\") {\n          enable = true;\n        }\n      }\n    });\n    return enable;\n  };\n\n  const CheckPersonalInfoStatus = () => {\n    return data.settings.personal_info.info.phoneNumber !== \"\" && data.settings.personal_info.info.email !== \"\" && data.settings.personal_info.info.name !== \"\";\n  };\n\n  const CheckSectionTextStatus = sectionName => {\n    let enable = false;\n    data.settings[sectionName].sections.map((text, index) => {\n      if (!enable && text !== \"\") {\n        enable = true;\n      }\n    });\n    return enable;\n  };\n\n  const CheckPersonalInfoSections = () => {\n    return data.settings[\"personal_info\"].sections.filter(item => item === \"\").length !== 0;\n  };\n\n  const Logout = () => {\n    sessionStorage.removeItem(\"OpenCVId\");\n  };\n\n  const PublishTemplate = () => {\n    data.settings.published = true;\n    updateData(data);\n  };\n\n  const UnpublishTemplate = () => {\n    data.settings.published = false;\n    updateData(data);\n  };\n\n  const UpdateTemplateVersion = index => {\n    data.settings.templateIndex = index;\n    sessionStorage.setItem(\"templateIndex\", index + \"\");\n    updateData(data);\n  };\n\n  const AutoFill = () => {\n    ClearCV();\n    data.settings.personal_details.text = \"I recently graduated with a bachelorâ€™s degree in mathematics, majoring in statistics and analytics. I have experience working in the financial sector by way of an internship with a major multinational firm, which has helped me develop technical capabilities in data engineering and science. I have consistently proven my ability to meet deadlines and achieve project objectives, solve mission-critical problems and prioritize crucial tasks while maintaining the high standards expected of my role. I am currently seeking a position in an established data science firm to further my career goals\";\n    data.settings.experience.sections.push({\n      from: \"2020-01-01\",\n      to: \"2021-01-01\",\n      text: \"Experience 1\"\n    });\n    data.settings.education.sections.push({\n      from: \"2020-01-01\",\n      to: \"2021-01-01\",\n      text: \"Education 1\"\n    });\n    data.settings.projects.text = \"This is a description for all my projects\";\n    data.settings.projects.sections.push({\n      projectName: \"Project1\",\n      projectDescription: \"Project Description 1\"\n    });\n    data.settings.languages.sections.push(\"Arabic\");\n    data.settings.languages.sections.push(\"English\");\n    data.settings.personal_info.sections.push(\"www.facebook.com\");\n    data.settings.personal_info.info.phoneNumber = \"+96170888548\";\n    data.settings.personal_info.info.email = \"xyz@xyz.com\";\n    data.settings.personal_info.info.name = \"Your name\";\n    data.settings.skills.sections.push({\n      title: \"Front End Development\",\n      details: \"HTML, CSS ...\"\n    });\n    data.settings.skills.sections.push({\n      title: \"Back End Development\",\n      details: \"JAVA, Python ...\"\n    });\n    updateData(data);\n  };\n\n  const GenerateToken = () => {\n    let token = uuidv4();\n    data.userDetails.token = token;\n    updateData(data);\n  };\n\n  const ClearCV = () => {\n    data.settings.personal_details.text = \"\";\n    data.settings.experience.sections = [];\n    data.settings.education.sections = [];\n    data.settings.languages.sections = [];\n    data.settings.projects.sections = [];\n    data.settings.personal_info.sections = [];\n    data.settings.skills.sections = [];\n    data.settings.personal_info.info.phoneNumber = \"\";\n    data.settings.personal_info.info.email = \"\";\n    data.settings.personal_info.info.name = \"\";\n    updateData(data);\n  };\n\n  const SendEmail = toSend => {\n    emailjs.send(APIKEY.SERVICE_ID, APIKEY.TEMPLATE_ID, toSend, APIKEY.USER_ID).then(function (response) {\n      console.log(\"SUCCESS!\", response.status, response.text);\n    }, function (error) {\n      console.log(\"FAILED...\", error);\n    });\n  };\n\n  const InitializeUser = () => {\n    let userID = \"\";\n\n    if (sessionStorage.getItem(\"OpenCVId\") !== \"\" && sessionStorage.getItem(\"OpenCVId\") !== null && data.userDetails.id === \"\") {\n      var _sessionStorage$getIt;\n\n      userID = (_sessionStorage$getIt = sessionStorage.getItem(\"OpenCVId\")) === null || _sessionStorage$getIt === void 0 ? void 0 : _sessionStorage$getIt.toString();\n      getUserInfo(userID).then(response => {\n        updateUserDetails(response.userDetails);\n        let list = [];\n        response.userTemplates.map((t, index) => {\n          list.push(t.id);\n        });\n        updateTemplates(list);\n      });\n    }\n  };\n\n  const UpdatePersonalInfoSection = (e, index) => {\n    data.settings[data.builderSectionIndex].info.sections[index] = e.target.value;\n    updateData(data);\n  };\n\n  const ModifyAddedSection = (sectionName, sectionDetails, settings) => {\n    let index = -1;\n    data.settings.added_sections.forEach((element, i) => {\n      if (element.sectionName.toLowerCase() === data.builderSectionIndex) {\n        index = i;\n      }\n    });\n    data.settings.added_sections[index].sectionDetails = sectionDetails;\n    data.settings.added_sections[index].settings = settings;\n    updateData(data);\n  };\n\n  const ModifyAddedSectionName = sectionName => {\n    let index = -1;\n    data.settings.added_sections.forEach((element, i) => {\n      if (element.sectionName.toLowerCase() === data.penSectionIndex) {\n        index = i;\n      }\n    });\n    console.log(index);\n    data.settings.added_sections[index].sectionName = sectionName;\n    updateData(data);\n  };\n\n  return {\n    ModifyAddedSectionName,\n    ModifyAddedSection,\n    UpdatePersonalInfoPhoneNumber,\n    UpdatePersonalInfoEmail,\n    InitializeUser,\n    AddExperience,\n    AddLanguage,\n    AddProject,\n    AddEducation,\n    UpdateLanguage,\n    UpdateProjectName,\n    UpdateProjectDescription,\n    ModifyText,\n    UpdateFromSection,\n    UpdateToSection,\n    UpdateTextSection,\n    DeleteSection,\n    AddPersonalInfo,\n    UpdateTitleSection,\n    UpdateDetailsSection,\n    CheckSections,\n    CheckProjectsStatus,\n    CheckSectionTextStatus,\n    UpdateSettings,\n    UpdateUser,\n    Logout,\n    PublishTemplate,\n    AutoFill,\n    ClearCV,\n    UpdateTemplateVersion,\n    UnpublishTemplate,\n    SendEmail,\n    GenerateToken,\n    AddSkill,\n    CheckPersonalInfoStatus,\n    UpdatePersonalInfoName,\n    UpdatePersonalInfoSection\n  };\n};\n\n_s(CommonFuntions, \"nmbUbCkqAnDW+Q5cxWK5hYKcEgc=\");\n\n_c = CommonFuntions;\nexport default CommonFuntions;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommonFuntions\");","map":{"version":3,"sources":["/home/ma/git/OpenCV/src/services/CommonFunctions.ts"],"names":["useContext","GlobalContext","APIKEY","emailjs","v4","uuidv4","getUserInfo","CommonFuntions","data","updateData","updateUserDetails","updateTemplates","AddExperience","list","from","to","text","settings","builderSectionIndex","sections","push","AddLanguage","AddPersonalInfo","UpdatePersonalInfoPhoneNumber","phoneNumber","info","UpdatePersonalInfoName","name","UpdatePersonalInfoEmail","email","AddSkill","title","details","AddEducation","console","log","AddProject","projectName","projectDescription","UpdateLanguage","e","index","target","value","UpdateProjectName","UpdateProjectDescription","ModifyText","event","UpdateFromSection","UpdateToSection","UpdateTextSection","DeleteSection","splice","UpdateTitleSection","UpdateDetailsSection","CheckSections","sectionName","enable","map","section","UpdateSettings","UpdateUser","userDetails","CheckProjectsStatus","CheckPersonalInfoStatus","personal_info","CheckSectionTextStatus","CheckPersonalInfoSections","filter","item","length","Logout","sessionStorage","removeItem","PublishTemplate","published","UnpublishTemplate","UpdateTemplateVersion","templateIndex","setItem","AutoFill","ClearCV","personal_details","experience","education","projects","languages","skills","GenerateToken","token","SendEmail","toSend","send","SERVICE_ID","TEMPLATE_ID","USER_ID","then","response","status","error","InitializeUser","userID","getItem","id","toString","userTemplates","t","UpdatePersonalInfoSection","ModifyAddedSection","sectionDetails","added_sections","forEach","element","i","toLowerCase","ModifyAddedSectionName","penSectionIndex"],"mappings":"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","sourcesContent":["import { useContext } from \"react\";\nimport { GlobalContext } from \"./AppContext\";\nimport { APIKEY } from \"../services/ApiKey\";\nimport emailjs from \"emailjs-com\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { getUserInfo } from \"./HTTPContext\";\n\nconst CommonFuntions = () => {\n  let { data, updateData, updateUserDetails, updateTemplates } =\n    useContext(GlobalContext);\n  const AddExperience = () => {\n    let list = {\n      from: \"\",\n      to: \"\",\n      text: \"\",\n    };\n    data.settings[data.builderSectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const AddLanguage = () => {\n    data.settings[data.builderSectionIndex].sections.push(\"\");\n    updateData(data);\n  };\n\n  const AddPersonalInfo = () => {\n    data.settings[data.builderSectionIndex].sections.push(\"\");\n    updateData(data);\n  };\n\n  const UpdatePersonalInfoPhoneNumber = (phoneNumber: string) => {\n    data.settings[data.builderSectionIndex].info.phoneNumber = phoneNumber;\n    updateData(data);\n  };\n  const UpdatePersonalInfoName = (name: string) => {\n    data.settings[data.builderSectionIndex].info.name = name;\n    updateData(data);\n  };\n\n  const UpdatePersonalInfoEmail = (email: string) => {\n    data.settings[data.builderSectionIndex].info.email = email;\n    updateData(data);\n  };\n\n  const AddSkill = () => {\n    let list = {\n      title: \"\",\n      details: \"\",\n    };\n    data.settings[data.builderSectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const AddEducation = () => {\n    console.log(data);\n    let list = {\n      from: \"\",\n      to: \"\",\n      text: \"\",\n    };\n    data.settings[data.builderSectionIndex].sections.push(list);\n    updateData(data);\n  };\n  const AddProject = () => {\n    let list = {\n      projectName: \"\",\n      projectDescription: \"\",\n    };\n    data.settings[data.builderSectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const UpdateLanguage = (e: any, index: number) => {\n    data.settings[data.builderSectionIndex].sections[index] = e.target.value;\n    updateData(data);\n  };\n\n  const UpdateProjectName = (e: any, index: number) => {\n    data.settings[data.builderSectionIndex].sections[index].projectName =\n      e.target.value;\n    updateData(data);\n  };\n\n  const UpdateProjectDescription = (e: any, index: number) => {\n    data.settings[data.builderSectionIndex].sections[index].projectDescription =\n      e.target.value;\n    updateData(data);\n  };\n\n  const ModifyText = (event: any) => {\n    data.settings[data.builderSectionIndex].text = event.target.value;\n    updateData(data);\n  };\n  const UpdateFromSection = (e: any, index: number) => {\n    data.settings[data.builderSectionIndex].sections[index].from =\n      e.target.value;\n    updateData(data);\n    console.log(data);\n  };\n  const UpdateToSection = (e: any, index: number) => {\n    data.settings[data.builderSectionIndex].sections[index].to = e.target.value;\n    updateData(data);\n  };\n  const UpdateTextSection = (e: any, index: number) => {\n    data.settings[data.builderSectionIndex].sections[index].text =\n      e.target.value;\n    updateData(data);\n  };\n  const DeleteSection = (index: number) => {\n    data.settings[data.builderSectionIndex].sections.splice(index, 1);\n    updateData(data);\n  };\n  const UpdateTitleSection = (e: any, index: number) => {\n    data.settings[data.builderSectionIndex].sections[index].title =\n      e.target.value;\n    updateData(data);\n  };\n  const UpdateDetailsSection = (e: any, index: number) => {\n    data.settings[data.builderSectionIndex].sections[index].details =\n      e.target.value;\n    updateData(data);\n  };\n\n  const CheckSections = (sectionName: string) => {\n    let enable: boolean = false;\n    data.settings[sectionName].sections.map((section: any, index: any) => {\n      if (!enable) {\n        if (section.to !== \"\" && section.from !== \"\" && section.text !== \"\") {\n          enable = true;\n        }\n      }\n    });\n    return enable;\n  };\n\n  const UpdateSettings = (settings: any) => {\n    data[\"settings\"] = settings;\n    updateData(data);\n  };\n\n  const UpdateUser = (userDetails: any) => {\n    data[\"userDetails\"] = userDetails;\n    updateData(data);\n  };\n\n  const CheckProjectsStatus = () => {\n    let enable: boolean = false;\n    data.settings[\"projects\"].sections.map((section: any, index: any) => {\n      if (!enable) {\n        if (section.projectName !== \"\" && section.projectDescription !== \"\") {\n          enable = true;\n        }\n      }\n    });\n    return enable;\n  };\n\n  const CheckPersonalInfoStatus = () => {\n    return (\n      data.settings.personal_info.info.phoneNumber !== \"\" &&\n      data.settings.personal_info.info.email !== \"\" &&\n      data.settings.personal_info.info.name !== \"\"\n    );\n  };\n\n  const CheckSectionTextStatus = (sectionName: string) => {\n    let enable: boolean = false;\n    data.settings[sectionName].sections.map((text: any, index: any) => {\n      if (!enable && text !== \"\") {\n        enable = true;\n      }\n    });\n    return enable;\n  };\n\n  const CheckPersonalInfoSections = () => {\n    return (\n      data.settings[\"personal_info\"].sections.filter((item: any) => item === \"\")\n        .length !== 0\n    );\n  };\n\n  const Logout = () => {\n    sessionStorage.removeItem(\"OpenCVId\");\n  };\n\n  const PublishTemplate = () => {\n    data.settings.published = true;\n    updateData(data);\n  };\n\n  const UnpublishTemplate = () => {\n    data.settings.published = false;\n    updateData(data);\n  };\n\n  const UpdateTemplateVersion = (index: number) => {\n    data.settings.templateIndex = index;\n    sessionStorage.setItem(\"templateIndex\", index + \"\");\n    updateData(data);\n  };\n\n  const AutoFill = () => {\n    ClearCV();\n    data.settings.personal_details.text =\n      \"I recently graduated with a bachelorâ€™s degree in mathematics, majoring in statistics and analytics. I have experience working in the financial sector by way of an internship with a major multinational firm, which has helped me develop technical capabilities in data engineering and science. I have consistently proven my ability to meet deadlines and achieve project objectives, solve mission-critical problems and prioritize crucial tasks while maintaining the high standards expected of my role. I am currently seeking a position in an established data science firm to further my career goals\";\n    data.settings.experience.sections.push({\n      from: \"2020-01-01\",\n      to: \"2021-01-01\",\n      text: \"Experience 1\",\n    });\n\n    data.settings.education.sections.push({\n      from: \"2020-01-01\",\n      to: \"2021-01-01\",\n      text: \"Education 1\",\n    });\n    data.settings.projects.text = \"This is a description for all my projects\";\n    data.settings.projects.sections.push({\n      projectName: \"Project1\",\n      projectDescription: \"Project Description 1\",\n    });\n    data.settings.languages.sections.push(\"Arabic\");\n    data.settings.languages.sections.push(\"English\");\n    data.settings.personal_info.sections.push(\"www.facebook.com\");\n    data.settings.personal_info.info.phoneNumber = \"+96170888548\";\n    data.settings.personal_info.info.email = \"xyz@xyz.com\";\n    data.settings.personal_info.info.name = \"Your name\";\n\n    data.settings.skills.sections.push({\n      title: \"Front End Development\",\n      details: \"HTML, CSS ...\",\n    });\n\n    data.settings.skills.sections.push({\n      title: \"Back End Development\",\n      details: \"JAVA, Python ...\",\n    });\n\n    updateData(data);\n  };\n\n  const GenerateToken = () => {\n    let token = uuidv4();\n    data.userDetails.token = token;\n    updateData(data);\n  };\n\n  const ClearCV = () => {\n    data.settings.personal_details.text = \"\";\n    data.settings.experience.sections = [];\n    data.settings.education.sections = [];\n    data.settings.languages.sections = [];\n    data.settings.projects.sections = [];\n    data.settings.personal_info.sections = [];\n    data.settings.skills.sections = [];\n    data.settings.personal_info.info.phoneNumber = \"\";\n    data.settings.personal_info.info.email = \"\";\n    data.settings.personal_info.info.name = \"\";\n\n    updateData(data);\n  };\n\n  const SendEmail = (toSend: any) => {\n    emailjs\n      .send(APIKEY.SERVICE_ID, APIKEY.TEMPLATE_ID, toSend, APIKEY.USER_ID)\n      .then(\n        function (response) {\n          console.log(\"SUCCESS!\", response.status, response.text);\n        },\n        function (error) {\n          console.log(\"FAILED...\", error);\n        }\n      );\n  };\n  const InitializeUser = () => {\n    let userID: any = \"\";\n    if (\n      sessionStorage.getItem(\"OpenCVId\") !== \"\" &&\n      sessionStorage.getItem(\"OpenCVId\") !== null &&\n      data.userDetails.id === \"\"\n    ) {\n      userID = sessionStorage.getItem(\"OpenCVId\")?.toString();\n      getUserInfo(userID).then((response) => {\n        updateUserDetails(response.userDetails);\n        let list: string[] = [];\n        response.userTemplates.map((t: any, index) => {\n          list.push(t.id);\n        });\n        updateTemplates(list);\n      });\n    }\n  };\n  const UpdatePersonalInfoSection = (e: any, index: number) => {\n    data.settings[data.builderSectionIndex].info.sections[index] =\n      e.target.value;\n    updateData(data);\n  };\n  const ModifyAddedSection = (\n    sectionName: string,\n    sectionDetails: string,\n    settings: any\n  ) => {\n    let index = -1;\n\n    data.settings.added_sections.forEach((element: any, i: number) => {\n      if (element.sectionName.toLowerCase() === data.builderSectionIndex) {\n        index = i;\n      }\n    });\n\n    data.settings.added_sections[index].sectionDetails = sectionDetails;\n    data.settings.added_sections[index].settings = settings;\n    updateData(data);\n  };\n\n  const ModifyAddedSectionName = (sectionName: string) => {\n    let index = -1;\n\n    data.settings.added_sections.forEach((element: any, i: number) => {\n      if (element.sectionName.toLowerCase() === data.penSectionIndex) {\n        index = i;\n      }\n    });\n    console.log(index)\n   \n    data.settings.added_sections[index].sectionName = sectionName;\n\n    updateData(data);\n  };\n\n  return {\n    ModifyAddedSectionName,\n    ModifyAddedSection,\n    UpdatePersonalInfoPhoneNumber,\n    UpdatePersonalInfoEmail,\n    InitializeUser,\n    AddExperience,\n    AddLanguage,\n    AddProject,\n    AddEducation,\n    UpdateLanguage,\n    UpdateProjectName,\n    UpdateProjectDescription,\n    ModifyText,\n    UpdateFromSection,\n    UpdateToSection,\n    UpdateTextSection,\n    DeleteSection,\n    AddPersonalInfo,\n    UpdateTitleSection,\n    UpdateDetailsSection,\n    CheckSections,\n    CheckProjectsStatus,\n    CheckSectionTextStatus,\n    UpdateSettings,\n    UpdateUser,\n    Logout,\n    PublishTemplate,\n    AutoFill,\n    ClearCV,\n    UpdateTemplateVersion,\n    UnpublishTemplate,\n    SendEmail,\n    GenerateToken,\n    AddSkill,\n    CheckPersonalInfoStatus,\n    UpdatePersonalInfoName,\n    UpdatePersonalInfoSection,\n  } as const;\n};\n\nexport default CommonFuntions;\n"]},"metadata":{},"sourceType":"module"}