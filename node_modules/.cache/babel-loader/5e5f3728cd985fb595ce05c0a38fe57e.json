{"ast":null,"code":"var _jsxFileName = \"/home/ma/git/OpenCV/src/services/AppContext.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"../services/AppReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  data: {\n    personal_details: {\n      text: \"\",\n      settings: {\n        fontSize: \"text-2xl\",\n        textPosition: \"justify-start\",\n        textColor: \"#FFFFFF\"\n      }\n    },\n    education: {\n      sections: [],\n      settings: {\n        fontSize: \"text-lg\",\n        textPosition: \"justify-start\",\n        textColor: \"#FFFFFF\"\n      }\n    },\n    experience: {\n      sections: [],\n      settings: {\n        fontSize: \"text-lg\",\n        textPosition: \"justify-start\",\n        textColor: \"#FFFFFF\"\n      }\n    },\n    projects: {\n      text: \"\",\n      sections: [],\n      settings: {\n        fontSize: \"text-lg\",\n        textPosition: \"justify-start\",\n        textColor: \"#FFFFFF\"\n      }\n    },\n    languages: {\n      sections: [],\n      settings: {\n        fontSize: \"text-lg\",\n        textPosition: \"justify-start\",\n        textColor: \"#FFFFFF\"\n      }\n    },\n    sectionIndex: \"\",\n    settingsModal: false\n  }\n};\nexport const GlobalContext = /*#__PURE__*/createContext(initialState);\n\nconst GlobalProvider = ({ ...props\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  const updateData = item => {\n    dispatch({\n      type: \"UPDATE_DATA\",\n      payload: item\n    });\n  };\n\n  const updateIndex = item => {\n    dispatch({\n      type: \"UPDATE_INDEX\",\n      payload: item\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      data: state.data,\n      updateData,\n      updateIndex,\n      sectionIndex: state.data.sectionIndex,\n      settingsModal: state.data.settingsModal\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GlobalProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GlobalProvider;\nexport default GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["/home/ma/git/OpenCV/src/services/AppContext.tsx"],"names":["React","createContext","useReducer","AppReducer","initialState","data","personal_details","text","settings","fontSize","textPosition","textColor","education","sections","experience","projects","languages","sectionIndex","settingsModal","GlobalContext","GlobalProvider","props","state","dispatch","updateData","item","type","payload","updateIndex","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,gBAAgB,EAAE;AAChBC,MAAAA,IAAI,EAAE,EADU;AAEhBC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE,UADF;AAERC,QAAAA,YAAY,EAAE,eAFN;AAGRC,QAAAA,SAAS,EAAE;AAHH;AAFM,KADd;AAUJC,IAAAA,SAAS,EAAE;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETL,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE,SADF;AAERC,QAAAA,YAAY,EAAE,eAFN;AAGRC,QAAAA,SAAS,EAAE;AAHH;AAFD,KAVP;AAmBJG,IAAAA,UAAU,EAAE;AACVD,MAAAA,QAAQ,EAAE,EADA;AAEVL,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE,SADF;AAERC,QAAAA,YAAY,EAAE,eAFN;AAGRC,QAAAA,SAAS,EAAE;AAHH;AAFA,KAnBR;AA4BJI,IAAAA,QAAQ,EAAE;AACRR,MAAAA,IAAI,EAAE,EADE;AAERM,MAAAA,QAAQ,EAAE,EAFF;AAGRL,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE,SADF;AAERC,QAAAA,YAAY,EAAE,eAFN;AAGRC,QAAAA,SAAS,EAAE;AAHH;AAHF,KA5BN;AAqCJK,IAAAA,SAAS,EAAE;AACTH,MAAAA,QAAQ,EAAE,EADD;AAETL,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE,SADF;AAERC,QAAAA,YAAY,EAAE,eAFN;AAGRC,QAAAA,SAAS,EAAE;AAHH;AAFD,KArCP;AA8CJM,IAAAA,YAAY,EAAE,EA9CV;AA+CJC,IAAAA,aAAa,EAAE;AA/CX;AADa,CAArB;AA0DA,OAAO,MAAMC,aAAa,gBAAGlB,aAAa,CAACG,YAAD,CAAnC;;AAEP,MAAMgB,cAAc,GAAG,CAAC,EAAE,GAAGC;AAAL,CAAD,KAAuB;AAAA;;AAC5C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBrB,UAAU,CAACC,UAAD,EAAaC,YAAb,CAApC;;AACA,QAAMoB,UAAU,GAAIC,IAAD,IAAe;AAChCF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,aADC;AAEPC,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GALD;;AAMA,QAAMG,WAAW,GAAIH,IAAD,IAAe;AACjCF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,cADC;AAEPC,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,sBACE,QAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLpB,MAAAA,IAAI,EAAEiB,KAAK,CAACjB,IADP;AAELmB,MAAAA,UAFK;AAGLI,MAAAA,WAHK;AAILX,MAAAA,YAAY,EAAEK,KAAK,CAACjB,IAAN,CAAWY,YAJpB;AAKLC,MAAAA,aAAa,EAAEI,KAAK,CAACjB,IAAN,CAAWa;AALrB,KADT;AAAA,cASGG,KAAK,CAACQ;AATT;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA5BD;;GAAMT,c;;KAAAA,c;AA6BN,eAAeA,cAAf","sourcesContent":["import React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"../services/AppReducer\";\n\nconst initialState = {\n  data: {\n    personal_details: {\n      text: \"\",\n      settings: {\n        fontSize: \"text-2xl\",\n        textPosition: \"justify-start\",\n        textColor: \"#FFFFFF\",\n      },\n    },\n\n    education: {\n      sections: [],\n      settings: {\n        fontSize: \"text-lg\",\n        textPosition: \"justify-start\",\n        textColor: \"#FFFFFF\",\n      },\n    },\n\n    experience: {\n      sections: [],\n      settings: {\n        fontSize: \"text-lg\",\n        textPosition: \"justify-start\",\n        textColor: \"#FFFFFF\",\n      },\n    },\n\n    projects: {\n      text: \"\",\n      sections: [],\n      settings: {\n        fontSize: \"text-lg\",\n        textPosition: \"justify-start\",\n        textColor: \"#FFFFFF\",\n      },\n    },\n    languages: {\n      sections: [],\n      settings: {\n        fontSize: \"text-lg\",\n        textPosition: \"justify-start\",\n        textColor: \"#FFFFFF\",\n      },\n    },\n\n    sectionIndex: \"\",\n    settingsModal: false\n  },\n} as {\n  data: any;\n  updateData: (item: any) => void;\n  updateIndex: (item: string) => void;\n  sectionIndex: string;\n  settingsModal: boolean\n};\n\nexport const GlobalContext = createContext(initialState);\n\nconst GlobalProvider = ({ ...props }: any) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  const updateData = (item: any) => {\n    dispatch({\n      type: \"UPDATE_DATA\",\n      payload: item,\n    });\n  };\n  const updateIndex = (item: any) => {\n    dispatch({\n      type: \"UPDATE_INDEX\",\n      payload: item,\n    });\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        data: state.data,\n        updateData,\n        updateIndex,\n        sectionIndex: state.data.sectionIndex,\n        settingsModal: state.data.settingsModal\n      }}\n    >\n      {props.children}\n    </GlobalContext.Provider>\n  );\n};\nexport default GlobalProvider;\n"]},"metadata":{},"sourceType":"module"}