{"ast":null,"code":"var _jsxFileName = \"/home/ma/git/OpenCV/src/pages/SignUp.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useContext } from \"react\";\nimport { useState } from \"react\";\nimport { GlobalContext } from \"../services/AppContext\";\nimport CommonFuntions from \"../services/CommonFunctions\";\nimport { getUsers } from \"../services/HTTPContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = ({ ...props\n}) => {\n  _s();\n\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [messageError, setMessageError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const {\n    SendEmail\n  } = CommonFuntions();\n  const {\n    data,\n    updateUserDetails\n  } = useContext(GlobalContext);\n  const {\n    GenerateToken\n  } = CommonFuntions();\n\n  const signUp = () => {\n    if (userName === \"\" || password === \"\" || confirmPassword === \"\") {\n      setMessageError(\"Please fill all fields\"); //to be modified\n    } else if (password.length > 8) {\n      setMessageError(\"Password length should be greater than 8\");\n    } else if (password !== confirmPassword) {\n      setMessageError(\"Passwords don't match\");\n    } else {\n      getUsers().then(response => {\n        let list = response.filter(user => user.email === email);\n\n        if (list.length === 0) {\n          setSuccessMessage(\"User Created Successfully\");\n        } else if (list[0].verified === 0) {\n          setMessageError(\"This email already in use but not verified. User another one\");\n        } else {\n          setMessageError(\"This email already in use. User another one\");\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" rounded flex justify-center items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500\",\n          children: messageError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-green-500\",\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"rounded p-3 bg-white border-b-2\",\n            placeholder: \"UserName\",\n            type: \"text\",\n            name: \"username\",\n            required: true,\n            onChange: e => setUserName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"rounded p-3 bg-white border-b-2\",\n            placeholder: \"Email\",\n            type: \"email\",\n            name: \"email\",\n            required: true,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"rounded p-3 bg-white border-b-2\",\n            placeholder: \"Password\",\n            type: \"password\",\n            required: true,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"rounded p-3 bg-white border-b-2\",\n            placeholder: \"Confirm Password\",\n            type: \"password\",\n            required: true,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"rounded-full text-white p-3 w-full  bg-indigo-500\",\n            onClick: () => signUp(),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUp, \"T4vbW8ZEAsbuoNMNMGgb7b6imYk=\");\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/home/ma/git/OpenCV/src/pages/SignUp.tsx"],"names":["React","useContext","useState","GlobalContext","CommonFuntions","getUsers","SignUp","props","userName","setUserName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","messageError","setMessageError","successMessage","setSuccessMessage","SendEmail","data","updateUserDetails","GenerateToken","signUp","length","then","response","list","filter","user","verified","e","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useContext } from \"react\";\nimport { useState } from \"react\";\nimport { GlobalContext } from \"../services/AppContext\";\nimport CommonFuntions from \"../services/CommonFunctions\";\nimport { addUser, getUsers } from \"../services/HTTPContext\";\n\nconst SignUp = ({ ...props }) => {\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [messageError, setMessageError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const { SendEmail } = CommonFuntions();\n  const { data, updateUserDetails } = useContext(GlobalContext);\n  const { GenerateToken } = CommonFuntions();\n\n  const signUp = () => {\n    if (userName === \"\" || password === \"\" || confirmPassword === \"\") {\n      setMessageError(\"Please fill all fields\");\n      //to be modified\n    } else if (password.length > 8) {\n      setMessageError(\"Password length should be greater than 8\");\n    } else if (password !== confirmPassword) {\n      setMessageError(\"Passwords don't match\");\n    } else {\n      getUsers().then((response: any) => {\n        let list = response.filter((user: any) => user.email === email);\n        if (list.length === 0) {\n         \n         \n          setSuccessMessage(\"User Created Successfully\");\n        } else if (list[0].verified === 0) {\n          setMessageError(\n            \"This email already in use but not verified. User another one\"\n          );\n        } else {\n          setMessageError(\"This email already in use. User another one\");\n        }\n      });\n    }\n  };\n\n  return (\n    <div>\n      <div className=\" rounded flex justify-center items-center\">\n        <div className=\"flex-col\">\n          <div className=\"text-red-500\">{messageError}</div>\n          <div className=\"text-green-500\">{successMessage}</div>\n          <form className=\"text-center\">\n            <input\n              className=\"rounded p-3 bg-white border-b-2\"\n              placeholder=\"UserName\"\n              type=\"text\"\n              name=\"username\"\n              required\n              onChange={(e) => setUserName(e.target.value)}\n            />\n            <input\n              className=\"rounded p-3 bg-white border-b-2\"\n              placeholder=\"Email\"\n              type=\"email\"\n              name=\"email\"\n              required\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <input\n              className=\"rounded p-3 bg-white border-b-2\"\n              placeholder=\"Password\"\n              type=\"password\"\n              required\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <input\n              className=\"rounded p-3 bg-white border-b-2\"\n              placeholder=\"Confirm Password\"\n              type=\"password\"\n              required\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n            <br />\n            <button\n              type=\"submit\"\n              className=\"rounded-full text-white p-3 w-full  bg-indigo-500\"\n              onClick={() => signUp()}\n            >\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}