{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { GlobalContext } from \"../services/AppContext\";\n\nconst CommonFuntions = () => {\n  _s();\n\n  let {\n    data,\n    updateData\n  } = useContext(GlobalContext);\n\n  const AddExperience = () => {\n    let list = {\n      from: \"\",\n      to: \"\",\n      text: \"\"\n    };\n    data.user_settings[data.userSettings.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const AddLanguage = () => {\n    data.user_settings[data.userSettings.sectionIndex].sections.push(\"\");\n    updateData(data);\n  };\n\n  const AddContact = () => {\n    let list = {\n      title: \"\",\n      details: \"\"\n    };\n    data.user_settings[data.userSettings.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const AddEducation = () => {\n    let list = {\n      from: \"\",\n      to: \"\",\n      text: \"\"\n    };\n    data.user_settings[data.userSettings.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const AddProject = () => {\n    let list = {\n      projectName: \"\",\n      projectDescription: \"\"\n    };\n    data.user_settings[data.userSettings.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const UpdateLanguage = (e, index) => {\n    data.user_settings[data.userSettings.sectionIndex].sections[index] = e.target.value;\n    updateData(data);\n  };\n\n  const UpdateProjectName = (e, index) => {\n    data.user_settings[data.userSettings.sectionIndex].sections[index].projectName = e.target.value;\n    updateData(data);\n  };\n\n  const UpdateProjectDescription = (e, index) => {\n    data.user_settings[data.userSettings.sectionIndex].sections[index].projectDescription = e.target.value;\n    updateData(data);\n  };\n\n  const ModifyText = event => {\n    data.user_settings[data.userSettings.sectionIndex].text = event.target.value;\n    updateData(data);\n  };\n\n  const UpdateFromSection = (e, index) => {\n    data.user_settings[data.userSettings.sectionIndex].sections[index].from = e.target.value;\n    updateData(data);\n    console.log(data);\n  };\n\n  const UpdateToSection = (e, index) => {\n    data.user_settings[data.userSettings.sectionIndex].sections[index].to = e.target.value;\n    updateData(data);\n  };\n\n  const UpdateTextSection = (e, index) => {\n    data.user_settings[data.userSettings.sectionIndex].sections[index].text = e.target.value;\n    updateData(data);\n  };\n\n  const DeleteSection = index => {\n    console.log(index);\n    data.user_settings[data.userSettings.sectionIndex].sections.splice(index, 1);\n    updateData(data);\n  };\n\n  const UpdateContactTitleSection = (e, index) => {\n    data.user_settings[data.userSettings.sectionIndex].sections[index].title = e.target.value;\n    updateData(data);\n  };\n\n  const UpdateContactDetailsSection = (e, index) => {\n    data.user_settings[data.userSettings.sectionIndex].sections[index].details = e.target.value;\n    updateData(data);\n  };\n\n  const CheckSections = sectionName => {\n    let enable = false;\n    data.user_settings[sectionName].sections.map((section, index) => {\n      if (!enable) {\n        if (section.to !== \"\" && section.from !== \"\" && section.text !== \"\") {\n          enable = true;\n        }\n      }\n    });\n    return enable;\n  };\n\n  const UpdateSettings = settings => {\n    data[\"user_settings\"] = settings;\n    updateData(data);\n  };\n\n  const UpdateUser = userDetails => {\n    data[\"user_details\"] = userDetails;\n    console.log(userDetails);\n    updateData(data);\n  };\n\n  const CheckProjectsStatus = () => {\n    let enable = false;\n    data.user_settings[\"projects\"].sections.map((section, index) => {\n      if (!enable) {\n        if (section.projectName !== \"\" && section.projectDescription !== \"\") {\n          enable = true;\n        }\n      }\n    });\n    return enable;\n  };\n\n  const CheckSectionTextStatus = sectionName => {\n    let enable = false;\n    data.user_settings[sectionName].sections.map((text, index) => {\n      if (!enable && text !== \"\") {\n        enable = true;\n      }\n    });\n    return enable;\n  };\n\n  const StoreUserInfo = info => {\n    sessionStorage.setItem(\"info\", JSON.stringify(info));\n  };\n\n  const GetUserInfo = () => {\n    const userInfoStorage = sessionStorage.getItem(\"info\");\n    let userInfo = {\n      id: \"\",\n      username: \"\"\n    };\n\n    if (userInfoStorage !== null) {\n      userInfo = JSON.parse(userInfoStorage);\n    }\n\n    return userInfo;\n  };\n\n  const Logout = () => {\n    sessionStorage.removeItem(\"info\");\n  };\n\n  return {\n    AddExperience,\n    AddLanguage,\n    AddProject,\n    AddEducation,\n    UpdateLanguage,\n    UpdateProjectName,\n    UpdateProjectDescription,\n    ModifyText,\n    UpdateFromSection,\n    UpdateToSection,\n    UpdateTextSection,\n    DeleteSection,\n    AddContact,\n    UpdateContactTitleSection,\n    UpdateContactDetailsSection,\n    CheckSections,\n    CheckProjectsStatus,\n    CheckSectionTextStatus,\n    UpdateSettings,\n    UpdateUser,\n    StoreUserInfo,\n    GetUserInfo,\n    Logout\n  };\n};\n\n_s(CommonFuntions, \"TqU8mOi/mbkgmGEFojepUWZOhyU=\");\n\n_c = CommonFuntions;\nexport default CommonFuntions;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommonFuntions\");","map":{"version":3,"sources":["/home/ma/git/OpenCV/src/components/CommonFunctions.ts"],"names":["useContext","GlobalContext","CommonFuntions","data","updateData","AddExperience","list","from","to","text","user_settings","userSettings","sectionIndex","sections","push","AddLanguage","AddContact","title","details","AddEducation","AddProject","projectName","projectDescription","UpdateLanguage","e","index","target","value","UpdateProjectName","UpdateProjectDescription","ModifyText","event","UpdateFromSection","console","log","UpdateToSection","UpdateTextSection","DeleteSection","splice","UpdateContactTitleSection","UpdateContactDetailsSection","CheckSections","sectionName","enable","map","section","UpdateSettings","settings","UpdateUser","userDetails","CheckProjectsStatus","CheckSectionTextStatus","StoreUserInfo","info","sessionStorage","setItem","JSON","stringify","GetUserInfo","userInfoStorage","getItem","userInfo","id","username","parse","Logout","removeItem"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,MAAI;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAuBJ,UAAU,CAACC,aAAD,CAArC;;AACA,QAAMI,aAAa,GAAG,MAAM;AAC1B,QAAIC,IAAI,GAAG;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,EAAE,EAAE,EAFK;AAGTC,MAAAA,IAAI,EAAE;AAHG,KAAX;AAKAN,IAAAA,IAAI,CAACO,aAAL,CAAmBP,IAAI,CAACQ,YAAL,CAAkBC,YAArC,EAAmDC,QAAnD,CAA4DC,IAA5D,CAAiER,IAAjE;AACAF,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GARD;;AAUA,QAAMY,WAAW,GAAG,MAAM;AACxBZ,IAAAA,IAAI,CAACO,aAAL,CAAmBP,IAAI,CAACQ,YAAL,CAAkBC,YAArC,EAAmDC,QAAnD,CAA4DC,IAA5D,CAAiE,EAAjE;AACAV,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAHD;;AAKA,QAAMa,UAAU,GAAG,MAAM;AACvB,QAAIV,IAAI,GAAG;AACTW,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAX;AAIAf,IAAAA,IAAI,CAACO,aAAL,CAAmBP,IAAI,CAACQ,YAAL,CAAkBC,YAArC,EAAmDC,QAAnD,CAA4DC,IAA5D,CAAiER,IAAjE;AACAF,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAPD;;AASA,QAAMgB,YAAY,GAAG,MAAM;AACzB,QAAIb,IAAI,GAAG;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,EAAE,EAAE,EAFK;AAGTC,MAAAA,IAAI,EAAE;AAHG,KAAX;AAKAN,IAAAA,IAAI,CAACO,aAAL,CAAmBP,IAAI,CAACQ,YAAL,CAAkBC,YAArC,EAAmDC,QAAnD,CAA4DC,IAA5D,CAAiER,IAAjE;AACAF,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GARD;;AASA,QAAMiB,UAAU,GAAG,MAAM;AACvB,QAAId,IAAI,GAAG;AACTe,MAAAA,WAAW,EAAE,EADJ;AAETC,MAAAA,kBAAkB,EAAE;AAFX,KAAX;AAIAnB,IAAAA,IAAI,CAACO,aAAL,CAAmBP,IAAI,CAACQ,YAAL,CAAkBC,YAArC,EAAmDC,QAAnD,CAA4DC,IAA5D,CAAiER,IAAjE;AACAF,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAPD;;AASA,QAAMoB,cAAc,GAAG,CAACC,CAAD,EAASC,KAAT,KAA2B;AAChDtB,IAAAA,IAAI,CAACO,aAAL,CAAmBP,IAAI,CAACQ,YAAL,CAAkBC,YAArC,EAAmDC,QAAnD,CAA4DY,KAA5D,IAAqED,CAAC,CAACE,MAAF,CAASC,KAA9E;AACAvB,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAHD;;AAKA,QAAMyB,iBAAiB,GAAG,CAACJ,CAAD,EAASC,KAAT,KAA2B;AACnDtB,IAAAA,IAAI,CAACO,aAAL,CAAmBP,IAAI,CAACQ,YAAL,CAAkBC,YAArC,EAAmDC,QAAnD,CAA4DY,KAA5D,EAAmEJ,WAAnE,GACEG,CAAC,CAACE,MAAF,CAASC,KADX;AAEAvB,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAJD;;AAMA,QAAM0B,wBAAwB,GAAG,CAACL,CAAD,EAASC,KAAT,KAA2B;AAC1DtB,IAAAA,IAAI,CAACO,aAAL,CAAmBP,IAAI,CAACQ,YAAL,CAAkBC,YAArC,EAAmDC,QAAnD,CAA4DY,KAA5D,EAAmEH,kBAAnE,GACEE,CAAC,CAACE,MAAF,CAASC,KADX;AAEAvB,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAJD;;AAMA,QAAM2B,UAAU,GAAIC,KAAD,IAAgB;AACjC5B,IAAAA,IAAI,CAACO,aAAL,CAAmBP,IAAI,CAACQ,YAAL,CAAkBC,YAArC,EAAmDH,IAAnD,GAA0DsB,KAAK,CAACL,MAAN,CAAaC,KAAvE;AACAvB,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAHD;;AAIA,QAAM6B,iBAAiB,GAAG,CAACR,CAAD,EAASC,KAAT,KAA2B;AACnDtB,IAAAA,IAAI,CAACO,aAAL,CAAmBP,IAAI,CAACQ,YAAL,CAAkBC,YAArC,EAAmDC,QAAnD,CAA4DY,KAA5D,EAAmElB,IAAnE,GAA0EiB,CAAC,CAACE,MAAF,CAASC,KAAnF;AACAvB,IAAAA,UAAU,CAACD,IAAD,CAAV;AACA8B,IAAAA,OAAO,CAACC,GAAR,CAAY/B,IAAZ;AACD,GAJD;;AAKA,QAAMgC,eAAe,GAAG,CAACX,CAAD,EAASC,KAAT,KAA2B;AACjDtB,IAAAA,IAAI,CAACO,aAAL,CAAmBP,IAAI,CAACQ,YAAL,CAAkBC,YAArC,EAAmDC,QAAnD,CAA4DY,KAA5D,EAAmEjB,EAAnE,GAAwEgB,CAAC,CAACE,MAAF,CAASC,KAAjF;AACAvB,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAHD;;AAIA,QAAMiC,iBAAiB,GAAG,CAACZ,CAAD,EAASC,KAAT,KAA2B;AACnDtB,IAAAA,IAAI,CAACO,aAAL,CAAmBP,IAAI,CAACQ,YAAL,CAAkBC,YAArC,EAAmDC,QAAnD,CAA4DY,KAA5D,EAAmEhB,IAAnE,GAA0Ee,CAAC,CAACE,MAAF,CAASC,KAAnF;AACAvB,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAHD;;AAIA,QAAMkC,aAAa,GAAIZ,KAAD,IAAmB;AACvCQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACAtB,IAAAA,IAAI,CAACO,aAAL,CAAmBP,IAAI,CAACQ,YAAL,CAAkBC,YAArC,EAAmDC,QAAnD,CAA4DyB,MAA5D,CAAmEb,KAAnE,EAA0E,CAA1E;AACArB,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAJD;;AAKA,QAAMoC,yBAAyB,GAAG,CAACf,CAAD,EAASC,KAAT,KAA2B;AAC3DtB,IAAAA,IAAI,CAACO,aAAL,CAAmBP,IAAI,CAACQ,YAAL,CAAkBC,YAArC,EAAmDC,QAAnD,CAA4DY,KAA5D,EAAmER,KAAnE,GAA2EO,CAAC,CAACE,MAAF,CAASC,KAApF;AACAvB,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAHD;;AAIA,QAAMqC,2BAA2B,GAAG,CAAChB,CAAD,EAASC,KAAT,KAA2B;AAC7DtB,IAAAA,IAAI,CAACO,aAAL,CAAmBP,IAAI,CAACQ,YAAL,CAAkBC,YAArC,EAAmDC,QAAnD,CAA4DY,KAA5D,EAAmEP,OAAnE,GAA6EM,CAAC,CAACE,MAAF,CAASC,KAAtF;AACAvB,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAHD;;AAIA,QAAMsC,aAAa,GAAIC,WAAD,IAAyB;AAC7C,QAAIC,MAAe,GAAG,KAAtB;AACAxC,IAAAA,IAAI,CAACO,aAAL,CAAmBgC,WAAnB,EAAgC7B,QAAhC,CAAyC+B,GAAzC,CAA6C,CAACC,OAAD,EAAepB,KAAf,KAA8B;AACzE,UAAI,CAACkB,MAAL,EAAa;AACX,YAAIE,OAAO,CAACrC,EAAR,KAAe,EAAf,IAAqBqC,OAAO,CAACtC,IAAR,KAAiB,EAAtC,IAA4CsC,OAAO,CAACpC,IAAR,KAAiB,EAAjE,EAAqE;AACnEkC,UAAAA,MAAM,GAAG,IAAT;AACD;AACF;AACF,KAND;AAOA,WAAOA,MAAP;AACD,GAVD;;AAYA,QAAMG,cAAc,GAAIC,QAAD,IAAmB;AACxC5C,IAAAA,IAAI,CAAC,eAAD,CAAJ,GAAwB4C,QAAxB;AACA3C,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAHD;;AAKA,QAAM6C,UAAU,GAAIC,WAAD,IAAsB;AACvC9C,IAAAA,IAAI,CAAC,cAAD,CAAJ,GAAuB8C,WAAvB;AACAhB,IAAAA,OAAO,CAACC,GAAR,CAAYe,WAAZ;AAEA7C,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GALD;;AAOA,QAAM+C,mBAAmB,GAAG,MAAM;AAChC,QAAIP,MAAe,GAAG,KAAtB;AACAxC,IAAAA,IAAI,CAACO,aAAL,CAAmB,UAAnB,EAA+BG,QAA/B,CAAwC+B,GAAxC,CAA4C,CAACC,OAAD,EAAepB,KAAf,KAA8B;AACxE,UAAI,CAACkB,MAAL,EAAa;AACX,YAAIE,OAAO,CAACxB,WAAR,KAAwB,EAAxB,IAA8BwB,OAAO,CAACvB,kBAAR,KAA+B,EAAjE,EAAqE;AACnEqB,UAAAA,MAAM,GAAG,IAAT;AACD;AACF;AACF,KAND;AAOA,WAAOA,MAAP;AACD,GAVD;;AAYA,QAAMQ,sBAAsB,GAAIT,WAAD,IAAyB;AACtD,QAAIC,MAAe,GAAG,KAAtB;AACAxC,IAAAA,IAAI,CAACO,aAAL,CAAmBgC,WAAnB,EAAgC7B,QAAhC,CAAyC+B,GAAzC,CAA6C,CAACnC,IAAD,EAAYgB,KAAZ,KAA2B;AACtE,UAAI,CAACkB,MAAD,IAAWlC,IAAI,KAAK,EAAxB,EAA4B;AAC1BkC,QAAAA,MAAM,GAAG,IAAT;AACD;AACF,KAJD;AAKA,WAAOA,MAAP;AACD,GARD;;AAUA,QAAMS,aAAa,GAAIC,IAAD,IAAe;AACnCC,IAAAA,cAAc,CAACC,OAAf,CAAuB,MAAvB,EAA+BC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAA/B;AACD,GAFD;;AAIA,QAAMK,WAAW,GAAG,MAAM;AACxB,UAAMC,eAAe,GAAGL,cAAc,CAACM,OAAf,CAAuB,MAAvB,CAAxB;AACA,QAAIC,QAAQ,GAAG;AAAEC,MAAAA,EAAE,EAAE,EAAN;AAAUC,MAAAA,QAAQ,EAAE;AAApB,KAAf;;AACA,QAAIJ,eAAe,KAAK,IAAxB,EAA8B;AAC5BE,MAAAA,QAAQ,GAAGL,IAAI,CAACQ,KAAL,CAAWL,eAAX,CAAX;AACD;;AAED,WAAOE,QAAP;AACD,GARD;;AAUA,QAAMI,MAAM,GAAG,MAAM;AACnBX,IAAAA,cAAc,CAACY,UAAf,CAA0B,MAA1B;AACD,GAFD;;AAIA,SAAO;AACL7D,IAAAA,aADK;AAELU,IAAAA,WAFK;AAGLK,IAAAA,UAHK;AAILD,IAAAA,YAJK;AAKLI,IAAAA,cALK;AAMLK,IAAAA,iBANK;AAOLC,IAAAA,wBAPK;AAQLC,IAAAA,UARK;AASLE,IAAAA,iBATK;AAULG,IAAAA,eAVK;AAWLC,IAAAA,iBAXK;AAYLC,IAAAA,aAZK;AAaLrB,IAAAA,UAbK;AAcLuB,IAAAA,yBAdK;AAeLC,IAAAA,2BAfK;AAgBLC,IAAAA,aAhBK;AAiBLS,IAAAA,mBAjBK;AAkBLC,IAAAA,sBAlBK;AAmBLL,IAAAA,cAnBK;AAoBLE,IAAAA,UApBK;AAqBLI,IAAAA,aArBK;AAsBLM,IAAAA,WAtBK;AAuBLO,IAAAA;AAvBK,GAAP;AAyBD,CApLD;;GAAM/D,c;;KAAAA,c;AAsLN,eAAeA,cAAf","sourcesContent":["import { useContext } from \"react\";\nimport { GlobalContext } from \"../services/AppContext\";\n\nconst CommonFuntions = () => {\n  let { data, updateData } = useContext(GlobalContext);\n  const AddExperience = () => {\n    let list = {\n      from: \"\",\n      to: \"\",\n      text: \"\",\n    };\n    data.user_settings[data.userSettings.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const AddLanguage = () => {\n    data.user_settings[data.userSettings.sectionIndex].sections.push(\"\");\n    updateData(data);\n  };\n\n  const AddContact = () => {\n    let list = {\n      title: \"\",\n      details: \"\",\n    };\n    data.user_settings[data.userSettings.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const AddEducation = () => {\n    let list = {\n      from: \"\",\n      to: \"\",\n      text: \"\",\n    };\n    data.user_settings[data.userSettings.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n  const AddProject = () => {\n    let list = {\n      projectName: \"\",\n      projectDescription: \"\",\n    };\n    data.user_settings[data.userSettings.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const UpdateLanguage = (e: any, index: number) => {\n    data.user_settings[data.userSettings.sectionIndex].sections[index] = e.target.value;\n    updateData(data);\n  };\n\n  const UpdateProjectName = (e: any, index: number) => {\n    data.user_settings[data.userSettings.sectionIndex].sections[index].projectName =\n      e.target.value;\n    updateData(data);\n  };\n\n  const UpdateProjectDescription = (e: any, index: number) => {\n    data.user_settings[data.userSettings.sectionIndex].sections[index].projectDescription =\n      e.target.value;\n    updateData(data);\n  };\n\n  const ModifyText = (event: any) => {\n    data.user_settings[data.userSettings.sectionIndex].text = event.target.value;\n    updateData(data);\n  };\n  const UpdateFromSection = (e: any, index: number) => {\n    data.user_settings[data.userSettings.sectionIndex].sections[index].from = e.target.value;\n    updateData(data);\n    console.log(data);\n  };\n  const UpdateToSection = (e: any, index: number) => {\n    data.user_settings[data.userSettings.sectionIndex].sections[index].to = e.target.value;\n    updateData(data);\n  };\n  const UpdateTextSection = (e: any, index: number) => {\n    data.user_settings[data.userSettings.sectionIndex].sections[index].text = e.target.value;\n    updateData(data);\n  };\n  const DeleteSection = (index: number) => {\n    console.log(index);\n    data.user_settings[data.userSettings.sectionIndex].sections.splice(index, 1);\n    updateData(data);\n  };\n  const UpdateContactTitleSection = (e: any, index: number) => {\n    data.user_settings[data.userSettings.sectionIndex].sections[index].title = e.target.value;\n    updateData(data);\n  };\n  const UpdateContactDetailsSection = (e: any, index: number) => {\n    data.user_settings[data.userSettings.sectionIndex].sections[index].details = e.target.value;\n    updateData(data);\n  };\n  const CheckSections = (sectionName: string) => {\n    let enable: boolean = false;\n    data.user_settings[sectionName].sections.map((section: any, index: any) => {\n      if (!enable) {\n        if (section.to !== \"\" && section.from !== \"\" && section.text !== \"\") {\n          enable = true;\n        }\n      }\n    });\n    return enable;\n  };\n\n  const UpdateSettings = (settings: any) => {\n    data[\"user_settings\"] = settings;\n    updateData(data);\n  };\n\n  const UpdateUser = (userDetails: any) => {\n    data[\"user_details\"] = userDetails;\n    console.log(userDetails);\n\n    updateData(data);\n  };\n\n  const CheckProjectsStatus = () => {\n    let enable: boolean = false;\n    data.user_settings[\"projects\"].sections.map((section: any, index: any) => {\n      if (!enable) {\n        if (section.projectName !== \"\" && section.projectDescription !== \"\") {\n          enable = true;\n        }\n      }\n    });\n    return enable;\n  };\n\n  const CheckSectionTextStatus = (sectionName: string) => {\n    let enable: boolean = false;\n    data.user_settings[sectionName].sections.map((text: any, index: any) => {\n      if (!enable && text !== \"\") {\n        enable = true;\n      }\n    });\n    return enable;\n  };\n\n  const StoreUserInfo = (info: any) => {\n    sessionStorage.setItem(\"info\", JSON.stringify(info));\n  };\n\n  const GetUserInfo = () => {\n    const userInfoStorage = sessionStorage.getItem(\"info\");\n    let userInfo = { id: \"\", username: \"\" };\n    if (userInfoStorage !== null) {\n      userInfo = JSON.parse(userInfoStorage);\n    }\n\n    return userInfo;\n  };\n\n  const Logout = () => {\n    sessionStorage.removeItem(\"info\");\n  };\n\n  return {\n    AddExperience,\n    AddLanguage,\n    AddProject,\n    AddEducation,\n    UpdateLanguage,\n    UpdateProjectName,\n    UpdateProjectDescription,\n    ModifyText,\n    UpdateFromSection,\n    UpdateToSection,\n    UpdateTextSection,\n    DeleteSection,\n    AddContact,\n    UpdateContactTitleSection,\n    UpdateContactDetailsSection,\n    CheckSections,\n    CheckProjectsStatus,\n    CheckSectionTextStatus,\n    UpdateSettings,\n    UpdateUser,\n    StoreUserInfo,\n    GetUserInfo,\n    Logout,\n  } as const;\n};\n\nexport default CommonFuntions;\n"]},"metadata":{},"sourceType":"module"}