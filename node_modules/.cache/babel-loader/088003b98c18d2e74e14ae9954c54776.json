{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { GlobalContext } from \"./AppContext\";\nimport { APIKEY } from \"../services/ApiKey\";\nimport emailjs from \"emailjs-com\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst CommonFuntions = () => {\n  _s();\n\n  let {\n    data,\n    updateData\n  } = useContext(GlobalContext);\n\n  const AddExperience = () => {\n    let list = {\n      from: \"\",\n      to: \"\",\n      text: \"\"\n    };\n    data.userSettings[data.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const AddLanguage = () => {\n    data.userSettings[data.sectionIndex].sections.push(\"\");\n    updateData(data);\n  };\n\n  const AddContact = () => {\n    let list = {\n      title: \"\",\n      details: \"\"\n    };\n    data.userSettings[data.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const AddSkill = () => {\n    let list = {\n      title: \"\",\n      details: \"\"\n    };\n    data.userSettings[data.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const AddEducation = () => {\n    console.log(data);\n    let list = {\n      from: \"\",\n      to: \"\",\n      text: \"\"\n    };\n    data.userSettings[data.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const AddProject = () => {\n    let list = {\n      projectName: \"\",\n      projectDescription: \"\"\n    };\n    data.userSettings[data.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const UpdateLanguage = (e, index) => {\n    data.userSettings[data.sectionIndex].sections[index] = e.target.value;\n    updateData(data);\n  };\n\n  const UpdateProjectName = (e, index) => {\n    data.userSettings[data.sectionIndex].sections[index].projectName = e.target.value;\n    updateData(data);\n  };\n\n  const UpdateProjectDescription = (e, index) => {\n    data.userSettings[data.sectionIndex].sections[index].projectDescription = e.target.value;\n    updateData(data);\n  };\n\n  const ModifyText = event => {\n    data.userSettings[data.sectionIndex].text = event.target.value;\n    updateData(data);\n  };\n\n  const UpdateFromSection = (e, index) => {\n    data.userSettings[data.sectionIndex].sections[index].from = e.target.value;\n    updateData(data);\n    console.log(data);\n  };\n\n  const UpdateToSection = (e, index) => {\n    data.userSettings[data.sectionIndex].sections[index].to = e.target.value;\n    updateData(data);\n  };\n\n  const UpdateTextSection = (e, index) => {\n    data.userSettings[data.sectionIndex].sections[index].text = e.target.value;\n    updateData(data);\n  };\n\n  const DeleteSection = index => {\n    data.userSettings[data.sectionIndex].sections.splice(index, 1);\n    updateData(data);\n  };\n\n  const UpdateTitleSection = (e, index) => {\n    data.userSettings[data.sectionIndex].sections[index].title = e.target.value;\n    updateData(data);\n  };\n\n  const UpdateDetailsSection = (e, index) => {\n    data.userSettings[data.sectionIndex].sections[index].details = e.target.value;\n    updateData(data);\n  };\n\n  const CheckSections = sectionName => {\n    let enable = false;\n    data.userSettings[sectionName].sections.map((section, index) => {\n      if (!enable) {\n        if (section.to !== \"\" && section.from !== \"\" && section.text !== \"\") {\n          enable = true;\n        }\n      }\n    });\n    return enable;\n  };\n\n  const UpdateSettings = settings => {\n    data[\"userSettings\"] = settings;\n    updateData(data);\n  };\n\n  const UpdateUser = userDetails => {\n    data[\"userDetails\"] = userDetails;\n    updateData(data);\n  };\n\n  const CheckProjectsStatus = () => {\n    let enable = false;\n    data.userSettings[\"projects\"].sections.map((section, index) => {\n      if (!enable) {\n        if (section.projectName !== \"\" && section.projectDescription !== \"\") {\n          enable = true;\n        }\n      }\n    });\n    return enable;\n  };\n\n  const CheckSectionTextStatus = sectionName => {\n    let enable = false;\n    data.userSettings[sectionName].sections.map((text, index) => {\n      if (!enable && text !== \"\") {\n        enable = true;\n      }\n    });\n    return enable;\n  };\n\n  const StoreUserInfo = info => {\n    sessionStorage.setItem(\"info\", JSON.stringify(info));\n  };\n\n  const Logout = () => {\n    sessionStorage.removeItem(\"info\");\n  };\n\n  const PublishTemplate = () => {\n    data.userSettings.published = true;\n    updateData(data);\n    StoreUserInfo(data);\n  };\n\n  const UnpublishTemplate = () => {\n    data.userSettings.published = false;\n    updateData(data);\n    StoreUserInfo(data);\n  };\n\n  const UpdateTemplateVersion = index => {\n    data.userSettings.templateIndex = index;\n    updateData(data);\n  };\n\n  const AutoFill = () => {\n    ClearCV();\n    data.userSettings.personal_details.text = \"I recently graduated with a bachelorâ€™s degree in mathematics, majoring in statistics and analytics. I have experience working in the financial sector by way of an internship with a major multinational firm, which has helped me develop technical capabilities in data engineering and science. I have consistently proven my ability to meet deadlines and achieve project objectives, solve mission-critical problems and prioritize crucial tasks while maintaining the high standards expected of my role. I am currently seeking a position in an established data science firm to further my career goals\";\n    data.userSettings.experience.sections.push({\n      from: \"2020-01-01\",\n      to: \"2021-01-01\",\n      text: \"Experience 1\"\n    });\n    data.userSettings.education.sections.push({\n      from: \"2020-01-01\",\n      to: \"2021-01-01\",\n      text: \"Education 1\"\n    });\n    data.userSettings.projects.text = \"This is a description for all my projects\";\n    data.userSettings.projects.sections.push({\n      projectName: \"Project1\",\n      projectDescription: \"Project Description 1\"\n    });\n    data.userSettings.languages.sections.push(\"Arabic\");\n    data.userSettings.languages.sections.push(\"English\");\n    data.userSettings.contact.sections.push({\n      title: \"Facebook\",\n      details: \"www.facebook.com\"\n    });\n    data.userSettings.skills.sections.push({\n      title: \"Front End Development\",\n      details: \"HTML, CSS ...\"\n    });\n    data.userSettings.skills.sections.push({\n      title: \"Back End Development\",\n      details: \"JAVA, Python ...\"\n    });\n    updateData(data);\n  };\n\n  const GenerateToken = () => {\n    let token = uuidv4();\n    data.userDetails.token = token;\n    updateData(data);\n  };\n\n  const ClearCV = () => {\n    data.userSettings.personal_details.text = \"\";\n    data.userSettings.experience.sections = [];\n    data.userSettings.education.sections = [];\n    data.userSettings.languages.sections = [];\n    data.userSettings.projects.sections = [];\n    data.userSettings.contact.sections = [];\n    data.userSettings.skills.sections = [];\n    updateData(data);\n  };\n\n  const SendEmail = toSend => {\n    emailjs.send(APIKEY.SERVICE_ID, APIKEY.TEMPLATE_ID, toSend, APIKEY.USER_ID).then(function (response) {\n      console.log(\"SUCCESS!\", response.status, response.text);\n    }, function (error) {\n      console.log(\"FAILED...\", error);\n    });\n  };\n\n  return {\n    AddExperience,\n    AddLanguage,\n    AddProject,\n    AddEducation,\n    UpdateLanguage,\n    UpdateProjectName,\n    UpdateProjectDescription,\n    ModifyText,\n    UpdateFromSection,\n    UpdateToSection,\n    UpdateTextSection,\n    DeleteSection,\n    AddContact,\n    UpdateTitleSection,\n    UpdateDetailsSection,\n    CheckSections,\n    CheckProjectsStatus,\n    CheckSectionTextStatus,\n    UpdateSettings,\n    UpdateUser,\n    StoreUserInfo,\n    Logout,\n    PublishTemplate,\n    AutoFill,\n    ClearCV,\n    UpdateTemplateVersion,\n    UnpublishTemplate,\n    SendEmail,\n    GenerateToken,\n    AddSkill\n  };\n};\n\n_s(CommonFuntions, \"TqU8mOi/mbkgmGEFojepUWZOhyU=\");\n\n_c = CommonFuntions;\nexport default CommonFuntions;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommonFuntions\");","map":{"version":3,"sources":["/home/ma/git/OpenCV/src/services/CommonFunctions.ts"],"names":["useContext","GlobalContext","APIKEY","emailjs","v4","uuidv4","CommonFuntions","data","updateData","AddExperience","list","from","to","text","userSettings","sectionIndex","sections","push","AddLanguage","AddContact","title","details","AddSkill","AddEducation","console","log","AddProject","projectName","projectDescription","UpdateLanguage","e","index","target","value","UpdateProjectName","UpdateProjectDescription","ModifyText","event","UpdateFromSection","UpdateToSection","UpdateTextSection","DeleteSection","splice","UpdateTitleSection","UpdateDetailsSection","CheckSections","sectionName","enable","map","section","UpdateSettings","settings","UpdateUser","userDetails","CheckProjectsStatus","CheckSectionTextStatus","StoreUserInfo","info","sessionStorage","setItem","JSON","stringify","Logout","removeItem","PublishTemplate","published","UnpublishTemplate","UpdateTemplateVersion","templateIndex","AutoFill","ClearCV","personal_details","experience","education","projects","languages","contact","skills","GenerateToken","token","SendEmail","toSend","send","SERVICE_ID","TEMPLATE_ID","USER_ID","then","response","status","error"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,MAAI;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAuBR,UAAU,CAACC,aAAD,CAArC;;AACA,QAAMQ,aAAa,GAAG,MAAM;AAC1B,QAAIC,IAAI,GAAG;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,EAAE,EAAE,EAFK;AAGTC,MAAAA,IAAI,EAAE;AAHG,KAAX;AAKAN,IAAAA,IAAI,CAACO,YAAL,CAAkBP,IAAI,CAACQ,YAAvB,EAAqCC,QAArC,CAA8CC,IAA9C,CAAmDP,IAAnD;AACAF,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GARD;;AAUA,QAAMW,WAAW,GAAG,MAAM;AACxBX,IAAAA,IAAI,CAACO,YAAL,CAAkBP,IAAI,CAACQ,YAAvB,EAAqCC,QAArC,CAA8CC,IAA9C,CAAmD,EAAnD;AACAT,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAHD;;AAKA,QAAMY,UAAU,GAAG,MAAM;AACvB,QAAIT,IAAI,GAAG;AACTU,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAX;AAIAd,IAAAA,IAAI,CAACO,YAAL,CAAkBP,IAAI,CAACQ,YAAvB,EAAqCC,QAArC,CAA8CC,IAA9C,CAAmDP,IAAnD;AACAF,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAPD;;AASA,QAAMe,QAAQ,GAAG,MAAM;AACrB,QAAIZ,IAAI,GAAG;AACTU,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAX;AAIAd,IAAAA,IAAI,CAACO,YAAL,CAAkBP,IAAI,CAACQ,YAAvB,EAAqCC,QAArC,CAA8CC,IAA9C,CAAmDP,IAAnD;AACAF,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAPD;;AASA,QAAMgB,YAAY,GAAG,MAAM;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAZ;AACA,QAAIG,IAAI,GAAG;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,EAAE,EAAE,EAFK;AAGTC,MAAAA,IAAI,EAAE;AAHG,KAAX;AAKAN,IAAAA,IAAI,CAACO,YAAL,CAAkBP,IAAI,CAACQ,YAAvB,EAAqCC,QAArC,CAA8CC,IAA9C,CAAmDP,IAAnD;AACAF,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GATD;;AAUA,QAAMmB,UAAU,GAAG,MAAM;AACvB,QAAIhB,IAAI,GAAG;AACTiB,MAAAA,WAAW,EAAE,EADJ;AAETC,MAAAA,kBAAkB,EAAE;AAFX,KAAX;AAIArB,IAAAA,IAAI,CAACO,YAAL,CAAkBP,IAAI,CAACQ,YAAvB,EAAqCC,QAArC,CAA8CC,IAA9C,CAAmDP,IAAnD;AACAF,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAPD;;AASA,QAAMsB,cAAc,GAAG,CAACC,CAAD,EAASC,KAAT,KAA2B;AAChDxB,IAAAA,IAAI,CAACO,YAAL,CAAkBP,IAAI,CAACQ,YAAvB,EAAqCC,QAArC,CAA8Ce,KAA9C,IAAuDD,CAAC,CAACE,MAAF,CAASC,KAAhE;AACAzB,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAHD;;AAKA,QAAM2B,iBAAiB,GAAG,CAACJ,CAAD,EAASC,KAAT,KAA2B;AACnDxB,IAAAA,IAAI,CAACO,YAAL,CAAkBP,IAAI,CAACQ,YAAvB,EAAqCC,QAArC,CAA8Ce,KAA9C,EAAqDJ,WAArD,GACEG,CAAC,CAACE,MAAF,CAASC,KADX;AAEAzB,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAJD;;AAMA,QAAM4B,wBAAwB,GAAG,CAACL,CAAD,EAASC,KAAT,KAA2B;AAC1DxB,IAAAA,IAAI,CAACO,YAAL,CAAkBP,IAAI,CAACQ,YAAvB,EAAqCC,QAArC,CAA8Ce,KAA9C,EAAqDH,kBAArD,GACEE,CAAC,CAACE,MAAF,CAASC,KADX;AAEAzB,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAJD;;AAMA,QAAM6B,UAAU,GAAIC,KAAD,IAAgB;AACjC9B,IAAAA,IAAI,CAACO,YAAL,CAAkBP,IAAI,CAACQ,YAAvB,EAAqCF,IAArC,GAA4CwB,KAAK,CAACL,MAAN,CAAaC,KAAzD;AACAzB,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAHD;;AAIA,QAAM+B,iBAAiB,GAAG,CAACR,CAAD,EAASC,KAAT,KAA2B;AACnDxB,IAAAA,IAAI,CAACO,YAAL,CAAkBP,IAAI,CAACQ,YAAvB,EAAqCC,QAArC,CAA8Ce,KAA9C,EAAqDpB,IAArD,GAA4DmB,CAAC,CAACE,MAAF,CAASC,KAArE;AACAzB,IAAAA,UAAU,CAACD,IAAD,CAAV;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAZ;AACD,GAJD;;AAKA,QAAMgC,eAAe,GAAG,CAACT,CAAD,EAASC,KAAT,KAA2B;AACjDxB,IAAAA,IAAI,CAACO,YAAL,CAAkBP,IAAI,CAACQ,YAAvB,EAAqCC,QAArC,CAA8Ce,KAA9C,EAAqDnB,EAArD,GAA0DkB,CAAC,CAACE,MAAF,CAASC,KAAnE;AACAzB,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAHD;;AAIA,QAAMiC,iBAAiB,GAAG,CAACV,CAAD,EAASC,KAAT,KAA2B;AACnDxB,IAAAA,IAAI,CAACO,YAAL,CAAkBP,IAAI,CAACQ,YAAvB,EAAqCC,QAArC,CAA8Ce,KAA9C,EAAqDlB,IAArD,GAA4DiB,CAAC,CAACE,MAAF,CAASC,KAArE;AACAzB,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAHD;;AAIA,QAAMkC,aAAa,GAAIV,KAAD,IAAmB;AACvCxB,IAAAA,IAAI,CAACO,YAAL,CAAkBP,IAAI,CAACQ,YAAvB,EAAqCC,QAArC,CAA8C0B,MAA9C,CAAqDX,KAArD,EAA4D,CAA5D;AACAvB,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAHD;;AAIA,QAAMoC,kBAAkB,GAAG,CAACb,CAAD,EAASC,KAAT,KAA2B;AACpDxB,IAAAA,IAAI,CAACO,YAAL,CAAkBP,IAAI,CAACQ,YAAvB,EAAqCC,QAArC,CAA8Ce,KAA9C,EAAqDX,KAArD,GAA6DU,CAAC,CAACE,MAAF,CAASC,KAAtE;AACAzB,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAHD;;AAIA,QAAMqC,oBAAoB,GAAG,CAACd,CAAD,EAASC,KAAT,KAA2B;AACtDxB,IAAAA,IAAI,CAACO,YAAL,CAAkBP,IAAI,CAACQ,YAAvB,EAAqCC,QAArC,CAA8Ce,KAA9C,EAAqDV,OAArD,GACES,CAAC,CAACE,MAAF,CAASC,KADX;AAEAzB,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAJD;;AAMA,QAAMsC,aAAa,GAAIC,WAAD,IAAyB;AAC7C,QAAIC,MAAe,GAAG,KAAtB;AACAxC,IAAAA,IAAI,CAACO,YAAL,CAAkBgC,WAAlB,EAA+B9B,QAA/B,CAAwCgC,GAAxC,CAA4C,CAACC,OAAD,EAAelB,KAAf,KAA8B;AACxE,UAAI,CAACgB,MAAL,EAAa;AACX,YAAIE,OAAO,CAACrC,EAAR,KAAe,EAAf,IAAqBqC,OAAO,CAACtC,IAAR,KAAiB,EAAtC,IAA4CsC,OAAO,CAACpC,IAAR,KAAiB,EAAjE,EAAqE;AACnEkC,UAAAA,MAAM,GAAG,IAAT;AACD;AACF;AACF,KAND;AAOA,WAAOA,MAAP;AACD,GAVD;;AAYA,QAAMG,cAAc,GAAIC,QAAD,IAAmB;AACxC5C,IAAAA,IAAI,CAAC,cAAD,CAAJ,GAAuB4C,QAAvB;AACA3C,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAHD;;AAKA,QAAM6C,UAAU,GAAIC,WAAD,IAAsB;AACvC9C,IAAAA,IAAI,CAAC,aAAD,CAAJ,GAAsB8C,WAAtB;AACA7C,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAHD;;AAKA,QAAM+C,mBAAmB,GAAG,MAAM;AAChC,QAAIP,MAAe,GAAG,KAAtB;AACAxC,IAAAA,IAAI,CAACO,YAAL,CAAkB,UAAlB,EAA8BE,QAA9B,CAAuCgC,GAAvC,CAA2C,CAACC,OAAD,EAAelB,KAAf,KAA8B;AACvE,UAAI,CAACgB,MAAL,EAAa;AACX,YAAIE,OAAO,CAACtB,WAAR,KAAwB,EAAxB,IAA8BsB,OAAO,CAACrB,kBAAR,KAA+B,EAAjE,EAAqE;AACnEmB,UAAAA,MAAM,GAAG,IAAT;AACD;AACF;AACF,KAND;AAOA,WAAOA,MAAP;AACD,GAVD;;AAYA,QAAMQ,sBAAsB,GAAIT,WAAD,IAAyB;AACtD,QAAIC,MAAe,GAAG,KAAtB;AACAxC,IAAAA,IAAI,CAACO,YAAL,CAAkBgC,WAAlB,EAA+B9B,QAA/B,CAAwCgC,GAAxC,CAA4C,CAACnC,IAAD,EAAYkB,KAAZ,KAA2B;AACrE,UAAI,CAACgB,MAAD,IAAWlC,IAAI,KAAK,EAAxB,EAA4B;AAC1BkC,QAAAA,MAAM,GAAG,IAAT;AACD;AACF,KAJD;AAKA,WAAOA,MAAP;AACD,GARD;;AAUA,QAAMS,aAAa,GAAIC,IAAD,IAAe;AACnCC,IAAAA,cAAc,CAACC,OAAf,CAAuB,MAAvB,EAA+BC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAA/B;AACD,GAFD;;AAMA,QAAMK,MAAM,GAAG,MAAM;AACnBJ,IAAAA,cAAc,CAACK,UAAf,CAA0B,MAA1B;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC5BzD,IAAAA,IAAI,CAACO,YAAL,CAAkBmD,SAAlB,GAA8B,IAA9B;AACAzD,IAAAA,UAAU,CAACD,IAAD,CAAV;AACAiD,IAAAA,aAAa,CAACjD,IAAD,CAAb;AACD,GAJD;;AAMA,QAAM2D,iBAAiB,GAAG,MAAM;AAC9B3D,IAAAA,IAAI,CAACO,YAAL,CAAkBmD,SAAlB,GAA8B,KAA9B;AACAzD,IAAAA,UAAU,CAACD,IAAD,CAAV;AACAiD,IAAAA,aAAa,CAACjD,IAAD,CAAb;AACD,GAJD;;AAMA,QAAM4D,qBAAqB,GAAIpC,KAAD,IAAmB;AAC/CxB,IAAAA,IAAI,CAACO,YAAL,CAAkBsD,aAAlB,GAAkCrC,KAAlC;AACAvB,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAHD;;AAKA,QAAM8D,QAAQ,GAAG,MAAM;AACrBC,IAAAA,OAAO;AACP/D,IAAAA,IAAI,CAACO,YAAL,CAAkByD,gBAAlB,CAAmC1D,IAAnC,GACE,olBADF;AAEAN,IAAAA,IAAI,CAACO,YAAL,CAAkB0D,UAAlB,CAA6BxD,QAA7B,CAAsCC,IAAtC,CAA2C;AACzCN,MAAAA,IAAI,EAAE,YADmC;AAEzCC,MAAAA,EAAE,EAAE,YAFqC;AAGzCC,MAAAA,IAAI,EAAE;AAHmC,KAA3C;AAMAN,IAAAA,IAAI,CAACO,YAAL,CAAkB2D,SAAlB,CAA4BzD,QAA5B,CAAqCC,IAArC,CAA0C;AACxCN,MAAAA,IAAI,EAAE,YADkC;AAExCC,MAAAA,EAAE,EAAE,YAFoC;AAGxCC,MAAAA,IAAI,EAAE;AAHkC,KAA1C;AAKAN,IAAAA,IAAI,CAACO,YAAL,CAAkB4D,QAAlB,CAA2B7D,IAA3B,GACE,2CADF;AAEAN,IAAAA,IAAI,CAACO,YAAL,CAAkB4D,QAAlB,CAA2B1D,QAA3B,CAAoCC,IAApC,CAAyC;AACvCU,MAAAA,WAAW,EAAE,UAD0B;AAEvCC,MAAAA,kBAAkB,EAAE;AAFmB,KAAzC;AAIArB,IAAAA,IAAI,CAACO,YAAL,CAAkB6D,SAAlB,CAA4B3D,QAA5B,CAAqCC,IAArC,CAA0C,QAA1C;AACAV,IAAAA,IAAI,CAACO,YAAL,CAAkB6D,SAAlB,CAA4B3D,QAA5B,CAAqCC,IAArC,CAA0C,SAA1C;AACAV,IAAAA,IAAI,CAACO,YAAL,CAAkB8D,OAAlB,CAA0B5D,QAA1B,CAAmCC,IAAnC,CAAwC;AACtCG,MAAAA,KAAK,EAAE,UAD+B;AAEtCC,MAAAA,OAAO,EAAE;AAF6B,KAAxC;AAKAd,IAAAA,IAAI,CAACO,YAAL,CAAkB+D,MAAlB,CAAyB7D,QAAzB,CAAkCC,IAAlC,CAAuC;AACrCG,MAAAA,KAAK,EAAE,uBAD8B;AAErCC,MAAAA,OAAO,EAAE;AAF4B,KAAvC;AAKAd,IAAAA,IAAI,CAACO,YAAL,CAAkB+D,MAAlB,CAAyB7D,QAAzB,CAAkCC,IAAlC,CAAuC;AACrCG,MAAAA,KAAK,EAAE,sBAD8B;AAErCC,MAAAA,OAAO,EAAE;AAF4B,KAAvC;AAKAb,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAvCD;;AAyCA,QAAMuE,aAAa,GAAG,MAAM;AAC1B,QAAIC,KAAK,GAAG1E,MAAM,EAAlB;AACAE,IAAAA,IAAI,CAAC8C,WAAL,CAAiB0B,KAAjB,GAAyBA,KAAzB;AACAvE,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAJD;;AAMA,QAAM+D,OAAO,GAAG,MAAM;AACpB/D,IAAAA,IAAI,CAACO,YAAL,CAAkByD,gBAAlB,CAAmC1D,IAAnC,GAA0C,EAA1C;AACAN,IAAAA,IAAI,CAACO,YAAL,CAAkB0D,UAAlB,CAA6BxD,QAA7B,GAAwC,EAAxC;AACAT,IAAAA,IAAI,CAACO,YAAL,CAAkB2D,SAAlB,CAA4BzD,QAA5B,GAAuC,EAAvC;AACAT,IAAAA,IAAI,CAACO,YAAL,CAAkB6D,SAAlB,CAA4B3D,QAA5B,GAAuC,EAAvC;AACAT,IAAAA,IAAI,CAACO,YAAL,CAAkB4D,QAAlB,CAA2B1D,QAA3B,GAAsC,EAAtC;AACAT,IAAAA,IAAI,CAACO,YAAL,CAAkB8D,OAAlB,CAA0B5D,QAA1B,GAAqC,EAArC;AACAT,IAAAA,IAAI,CAACO,YAAL,CAAkB+D,MAAlB,CAAyB7D,QAAzB,GAAoC,EAApC;AAEAR,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAVD;;AAYA,QAAMyE,SAAS,GAAIC,MAAD,IAAiB;AACjC9E,IAAAA,OAAO,CACJ+E,IADH,CACQhF,MAAM,CAACiF,UADf,EAC2BjF,MAAM,CAACkF,WADlC,EAC+CH,MAD/C,EACuD/E,MAAM,CAACmF,OAD9D,EAEGC,IAFH,CAGI,UAAUC,QAAV,EAAoB;AAClB/D,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB8D,QAAQ,CAACC,MAAjC,EAAyCD,QAAQ,CAAC1E,IAAlD;AACD,KALL,EAMI,UAAU4E,KAAV,EAAiB;AACfjE,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBgE,KAAzB;AACD,KARL;AAUD,GAXD;;AAaA,SAAO;AACLhF,IAAAA,aADK;AAELS,IAAAA,WAFK;AAGLQ,IAAAA,UAHK;AAILH,IAAAA,YAJK;AAKLM,IAAAA,cALK;AAMLK,IAAAA,iBANK;AAOLC,IAAAA,wBAPK;AAQLC,IAAAA,UARK;AASLE,IAAAA,iBATK;AAULC,IAAAA,eAVK;AAWLC,IAAAA,iBAXK;AAYLC,IAAAA,aAZK;AAaLtB,IAAAA,UAbK;AAcLwB,IAAAA,kBAdK;AAeLC,IAAAA,oBAfK;AAgBLC,IAAAA,aAhBK;AAiBLS,IAAAA,mBAjBK;AAkBLC,IAAAA,sBAlBK;AAmBLL,IAAAA,cAnBK;AAoBLE,IAAAA,UApBK;AAqBLI,IAAAA,aArBK;AAsBLM,IAAAA,MAtBK;AAuBLE,IAAAA,eAvBK;AAwBLK,IAAAA,QAxBK;AAyBLC,IAAAA,OAzBK;AA0BLH,IAAAA,qBA1BK;AA2BLD,IAAAA,iBA3BK;AA4BLc,IAAAA,SA5BK;AA6BLF,IAAAA,aA7BK;AA8BLxD,IAAAA;AA9BK,GAAP;AAgCD,CArRD;;GAAMhB,c;;KAAAA,c;AAuRN,eAAeA,cAAf","sourcesContent":["import { useContext } from \"react\";\nimport { GlobalContext } from \"./AppContext\";\nimport { APIKEY } from \"../services/ApiKey\";\nimport emailjs from \"emailjs-com\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst CommonFuntions = () => {\n  let { data, updateData } = useContext(GlobalContext);\n  const AddExperience = () => {\n    let list = {\n      from: \"\",\n      to: \"\",\n      text: \"\",\n    };\n    data.userSettings[data.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const AddLanguage = () => {\n    data.userSettings[data.sectionIndex].sections.push(\"\");\n    updateData(data);\n  };\n\n  const AddContact = () => {\n    let list = {\n      title: \"\",\n      details: \"\",\n    };\n    data.userSettings[data.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const AddSkill = () => {\n    let list = {\n      title: \"\",\n      details: \"\",\n    };\n    data.userSettings[data.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const AddEducation = () => {\n    console.log(data);\n    let list = {\n      from: \"\",\n      to: \"\",\n      text: \"\",\n    };\n    data.userSettings[data.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n  const AddProject = () => {\n    let list = {\n      projectName: \"\",\n      projectDescription: \"\",\n    };\n    data.userSettings[data.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const UpdateLanguage = (e: any, index: number) => {\n    data.userSettings[data.sectionIndex].sections[index] = e.target.value;\n    updateData(data);\n  };\n\n  const UpdateProjectName = (e: any, index: number) => {\n    data.userSettings[data.sectionIndex].sections[index].projectName =\n      e.target.value;\n    updateData(data);\n  };\n\n  const UpdateProjectDescription = (e: any, index: number) => {\n    data.userSettings[data.sectionIndex].sections[index].projectDescription =\n      e.target.value;\n    updateData(data);\n  };\n\n  const ModifyText = (event: any) => {\n    data.userSettings[data.sectionIndex].text = event.target.value;\n    updateData(data);\n  };\n  const UpdateFromSection = (e: any, index: number) => {\n    data.userSettings[data.sectionIndex].sections[index].from = e.target.value;\n    updateData(data);\n    console.log(data);\n  };\n  const UpdateToSection = (e: any, index: number) => {\n    data.userSettings[data.sectionIndex].sections[index].to = e.target.value;\n    updateData(data);\n  };\n  const UpdateTextSection = (e: any, index: number) => {\n    data.userSettings[data.sectionIndex].sections[index].text = e.target.value;\n    updateData(data);\n  };\n  const DeleteSection = (index: number) => {\n    data.userSettings[data.sectionIndex].sections.splice(index, 1);\n    updateData(data);\n  };\n  const UpdateTitleSection = (e: any, index: number) => {\n    data.userSettings[data.sectionIndex].sections[index].title = e.target.value;\n    updateData(data);\n  };\n  const UpdateDetailsSection = (e: any, index: number) => {\n    data.userSettings[data.sectionIndex].sections[index].details =\n      e.target.value;\n    updateData(data);\n  };\n\n  const CheckSections = (sectionName: string) => {\n    let enable: boolean = false;\n    data.userSettings[sectionName].sections.map((section: any, index: any) => {\n      if (!enable) {\n        if (section.to !== \"\" && section.from !== \"\" && section.text !== \"\") {\n          enable = true;\n        }\n      }\n    });\n    return enable;\n  };\n\n  const UpdateSettings = (settings: any) => {\n    data[\"userSettings\"] = settings;\n    updateData(data);\n  };\n\n  const UpdateUser = (userDetails: any) => {\n    data[\"userDetails\"] = userDetails;\n    updateData(data);\n  };\n\n  const CheckProjectsStatus = () => {\n    let enable: boolean = false;\n    data.userSettings[\"projects\"].sections.map((section: any, index: any) => {\n      if (!enable) {\n        if (section.projectName !== \"\" && section.projectDescription !== \"\") {\n          enable = true;\n        }\n      }\n    });\n    return enable;\n  };\n\n  const CheckSectionTextStatus = (sectionName: string) => {\n    let enable: boolean = false;\n    data.userSettings[sectionName].sections.map((text: any, index: any) => {\n      if (!enable && text !== \"\") {\n        enable = true;\n      }\n    });\n    return enable;\n  };\n\n  const StoreUserInfo = (info: any) => {\n    sessionStorage.setItem(\"info\", JSON.stringify(info));\n  };\n\n  \n\n  const Logout = () => {\n    sessionStorage.removeItem(\"info\");\n  };\n\n  const PublishTemplate = () => {\n    data.userSettings.published = true;\n    updateData(data);\n    StoreUserInfo(data);\n  };\n\n  const UnpublishTemplate = () => {\n    data.userSettings.published = false;\n    updateData(data);\n    StoreUserInfo(data);\n  };\n\n  const UpdateTemplateVersion = (index: number) => {\n    data.userSettings.templateIndex = index;\n    updateData(data);\n  };\n\n  const AutoFill = () => {\n    ClearCV();\n    data.userSettings.personal_details.text =\n      \"I recently graduated with a bachelorâ€™s degree in mathematics, majoring in statistics and analytics. I have experience working in the financial sector by way of an internship with a major multinational firm, which has helped me develop technical capabilities in data engineering and science. I have consistently proven my ability to meet deadlines and achieve project objectives, solve mission-critical problems and prioritize crucial tasks while maintaining the high standards expected of my role. I am currently seeking a position in an established data science firm to further my career goals\";\n    data.userSettings.experience.sections.push({\n      from: \"2020-01-01\",\n      to: \"2021-01-01\",\n      text: \"Experience 1\",\n    });\n\n    data.userSettings.education.sections.push({\n      from: \"2020-01-01\",\n      to: \"2021-01-01\",\n      text: \"Education 1\",\n    });\n    data.userSettings.projects.text =\n      \"This is a description for all my projects\";\n    data.userSettings.projects.sections.push({\n      projectName: \"Project1\",\n      projectDescription: \"Project Description 1\",\n    });\n    data.userSettings.languages.sections.push(\"Arabic\");\n    data.userSettings.languages.sections.push(\"English\");\n    data.userSettings.contact.sections.push({\n      title: \"Facebook\",\n      details: \"www.facebook.com\",\n    });\n\n    data.userSettings.skills.sections.push({\n      title: \"Front End Development\",\n      details: \"HTML, CSS ...\",\n    });\n\n    data.userSettings.skills.sections.push({\n      title: \"Back End Development\",\n      details: \"JAVA, Python ...\",\n    });\n\n    updateData(data);\n  };\n\n  const GenerateToken = () => {\n    let token = uuidv4();\n    data.userDetails.token = token;\n    updateData(data);\n  };\n\n  const ClearCV = () => {\n    data.userSettings.personal_details.text = \"\";\n    data.userSettings.experience.sections = [];\n    data.userSettings.education.sections = [];\n    data.userSettings.languages.sections = [];\n    data.userSettings.projects.sections = [];\n    data.userSettings.contact.sections = [];\n    data.userSettings.skills.sections = [];\n\n    updateData(data);\n  };\n\n  const SendEmail = (toSend: any) => {\n    emailjs\n      .send(APIKEY.SERVICE_ID, APIKEY.TEMPLATE_ID, toSend, APIKEY.USER_ID)\n      .then(\n        function (response) {\n          console.log(\"SUCCESS!\", response.status, response.text);\n        },\n        function (error) {\n          console.log(\"FAILED...\", error);\n        }\n      );\n  };\n\n  return {\n    AddExperience,\n    AddLanguage,\n    AddProject,\n    AddEducation,\n    UpdateLanguage,\n    UpdateProjectName,\n    UpdateProjectDescription,\n    ModifyText,\n    UpdateFromSection,\n    UpdateToSection,\n    UpdateTextSection,\n    DeleteSection,\n    AddContact,\n    UpdateTitleSection,\n    UpdateDetailsSection,\n    CheckSections,\n    CheckProjectsStatus,\n    CheckSectionTextStatus,\n    UpdateSettings,\n    UpdateUser,\n    StoreUserInfo,\n    Logout,\n    PublishTemplate,\n    AutoFill,\n    ClearCV,\n    UpdateTemplateVersion,\n    UnpublishTemplate,\n    SendEmail,\n    GenerateToken,\n    AddSkill,\n  } as const;\n};\n\nexport default CommonFuntions;\n"]},"metadata":{},"sourceType":"module"}