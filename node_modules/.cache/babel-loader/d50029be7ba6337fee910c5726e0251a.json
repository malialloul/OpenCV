{"ast":null,"code":"var _jsxFileName = \"/home/ma/git/OpenCV/src/components/builder/BuilderBody.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { useEffect } from \"react\";\nimport { GlobalContext } from \"../../services/AppContext\";\nimport { getTemplateSettings } from \"../../services/HTTPContext\";\nimport Builder1 from \"../templates/Builder1\";\nimport Builder2 from \"../templates/Builder2\";\nimport Builder3 from \"../templates/Builder3\";\nimport BuilderSettings from \"./BuilderSettings\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BuilderBody = ({ ...props\n}) => {\n  _s();\n\n  const {\n    data,\n    updateSettings\n  } = useContext(GlobalContext);\n  const templateIndex = sessionStorage.getItem(\"templateIndex\");\n  const templateId = sessionStorage.getItem(\"templateId\");\n  useEffect(() => {\n    if (data.settings.templateId === \"\") {\n      getTemplateSettings(templateId || \"\").then(response => {\n        updateSettings(response[0]);\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BuilderSettings, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), templateIndex === \"0\" ? /*#__PURE__*/_jsxDEV(Builder1, {\n      debug: data.settings.personal_details.text !== \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) : templateIndex === \"1\" ? /*#__PURE__*/_jsxDEV(Builder2, {\n      debug: data.settings.personal_details.text !== \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : templateIndex === \"2\" ? /*#__PURE__*/_jsxDEV(Builder3, {\n      debug: data.settings.personal_details.text !== \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true);\n};\n\n_s(BuilderBody, \"+Wtb7/LYgjsdIzzfIz3Vkp1nrGk=\");\n\n_c = BuilderBody;\nexport default BuilderBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"BuilderBody\");","map":{"version":3,"sources":["/home/ma/git/OpenCV/src/components/builder/BuilderBody.tsx"],"names":["React","useContext","useEffect","GlobalContext","getTemplateSettings","Builder1","Builder2","Builder3","BuilderSettings","BuilderBody","props","data","updateSettings","templateIndex","sessionStorage","getItem","templateId","settings","then","response","personal_details","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,mBAAT,QAAoC,4BAApC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;;AAEA,MAAMC,WAAW,GAAG,CAAC,EAAE,GAAGC;AAAL,CAAD,KAAuB;AAAA;;AACzC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAA2BX,UAAU,CAACE,aAAD,CAA3C;AACA,QAAMU,aAAa,GAAGC,cAAc,CAACC,OAAf,CAAuB,eAAvB,CAAtB;AACA,QAAMC,UAAU,GAAGF,cAAc,CAACC,OAAf,CAAuB,YAAvB,CAAnB;AACAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,IAAI,CAACM,QAAL,CAAcD,UAAd,KAA6B,EAAjC,EAAqC;AACnCZ,MAAAA,mBAAmB,CAACY,UAAU,IAAI,EAAf,CAAnB,CAAsCE,IAAtC,CAA4CC,QAAD,IAAc;AACvDP,QAAAA,cAAc,CAACO,QAAQ,CAAC,CAAD,CAAT,CAAd;AACD,OAFD;AAGD;AACF,GANQ,CAAT;AAQA,sBACE;AAAA,4BACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGN,aAAa,KAAK,GAAlB,gBACC,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEF,IAAI,CAACM,QAAL,CAAcG,gBAAd,CAA+BC,IAA/B,KAAwC;AAAzD;AAAA;AAAA;AAAA;AAAA,YADD,GAEGR,aAAa,KAAK,GAAlB,gBACF,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEF,IAAI,CAACM,QAAL,CAAcG,gBAAd,CAA+BC,IAA/B,KAAwC;AAAzD;AAAA;AAAA;AAAA;AAAA,YADE,GAEAR,aAAa,KAAK,GAAlB,gBACF,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEF,IAAI,CAACM,QAAL,CAAcG,gBAAd,CAA+BC,IAA/B,KAAwC;AAAzD;AAAA;AAAA;AAAA;AAAA,YADE,gBAGF,qCATJ;AAAA,kBADF;AAcD,CA1BD;;GAAMZ,W;;KAAAA,W;AA4BN,eAAeA,WAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { useEffect } from \"react\";\nimport { GlobalContext } from \"../../services/AppContext\";\nimport { getTemplateSettings } from \"../../services/HTTPContext\";\nimport Builder1 from \"../templates/Builder1\";\nimport Builder2 from \"../templates/Builder2\";\nimport Builder3 from \"../templates/Builder3\";\nimport BuilderSettings from \"./BuilderSettings\";\n\nconst BuilderBody = ({ ...props }: any) => {\n  const { data, updateSettings } = useContext(GlobalContext);\n  const templateIndex = sessionStorage.getItem(\"templateIndex\");\n  const templateId = sessionStorage.getItem(\"templateId\");\n  useEffect(() => {\n    if (data.settings.templateId === \"\") {\n      getTemplateSettings(templateId || \"\").then((response) => {\n        updateSettings(response[0]);\n      });\n    }\n  });\n\n  return (\n    <>\n      <BuilderSettings />\n      {templateIndex === \"0\" ? (\n        <Builder1 debug={data.settings.personal_details.text !== \"\"} />\n      ) : templateIndex === \"1\" ? (\n        <Builder2 debug={data.settings.personal_details.text !== \"\"} />\n      ) : templateIndex === \"2\" ? (\n        <Builder3 debug={data.settings.personal_details.text !== \"\"} />\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n\nexport default BuilderBody;\n"]},"metadata":{},"sourceType":"module"}