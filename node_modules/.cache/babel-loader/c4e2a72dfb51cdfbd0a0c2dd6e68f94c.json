{"ast":null,"code":"var _jsxFileName = \"/home/ma/git/OpenCV/src/components/builder/BuilderBody.tsx\",\n    _s = $RefreshSig$();\n\nimport classNames from \"classnames\";\nimport React, { useContext } from \"react\";\nimport { GlobalContext } from \"../../services/AppContext\";\nimport CommonFuntions from \"../../services/CommonFunctions\";\nimport Settings from \"../properties/Settings\";\nimport Builder1 from \"../templates/Builder1\";\nimport Builder2 from \"../templates/Builder2\";\nimport Builder3 from \"../templates/Builder3\";\nimport BuilderSettings from \"./BuilderSettings\";\nimport TemplateSteps from \"./TemplateSteps\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BuilderBody = ({ ...props\n}) => {\n  _s();\n\n  const {\n    data,\n    updateSettings\n  } = useContext(GlobalContext);\n  const templateIndex = sessionStorage.getItem(\"templateIndex\");\n  const templateId = sessionStorage.getItem(\"templateId\");\n  const {\n    CheckPersonalInfoStatus\n  } = CommonFuntions();\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classNames({\n          \"col-span-10\": data.settingsSectionIndex !== \"\",\n          \"col-span-12\": data.settingsSectionIndex === \"\"\n        }),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative p-3\",\n          children: [/*#__PURE__*/_jsxDEV(TemplateSteps, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BuilderSettings, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), templateIndex === \"0\" ? /*#__PURE__*/_jsxDEV(Builder1, {\n            debug: CheckPersonalInfoStatus()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this) : templateIndex === \"1\" ? /*#__PURE__*/_jsxDEV(Builder2, {\n            debug: CheckPersonalInfoStatus()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this) : templateIndex === \"2\" ? /*#__PURE__*/_jsxDEV(Builder3, {\n            debug: CheckPersonalInfoStatus()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classNames(\"bg-indigo-500\", {\n          \"col-span-2\": data.settingsSectionIndex !== \"\",\n          hidden: data.settingsSectionIndex === \"\"\n        }),\n        children: /*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(BuilderBody, \"R034m7rKdd7cS+gtfrayDcqmHDc=\");\n\n_c = BuilderBody;\nexport default BuilderBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"BuilderBody\");","map":{"version":3,"sources":["/home/ma/git/OpenCV/src/components/builder/BuilderBody.tsx"],"names":["classNames","React","useContext","GlobalContext","CommonFuntions","Settings","Builder1","Builder2","Builder3","BuilderSettings","TemplateSteps","BuilderBody","props","data","updateSettings","templateIndex","sessionStorage","getItem","templateId","CheckPersonalInfoStatus","console","log","settingsSectionIndex","hidden"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;;AAEA,MAAMC,WAAW,GAAG,CAAC,EAAE,GAAGC;AAAL,CAAD,KAAuB;AAAA;;AACzC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAA2BZ,UAAU,CAACC,aAAD,CAA3C;AACA,QAAMY,aAAa,GAAGC,cAAc,CAACC,OAAf,CAAuB,eAAvB,CAAtB;AACA,QAAMC,UAAU,GAAGF,cAAc,CAACC,OAAf,CAAuB,YAAvB,CAAnB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAA8Bf,cAAc,EAAlD;AACAgB,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AAIA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAEb,UAAU,CAAC;AACpB,yBAAea,IAAI,CAACS,oBAAL,KAA8B,EADzB;AAEpB,yBAAeT,IAAI,CAACS,oBAAL,KAA8B;AAFzB,SAAD,CADvB;AAAA,+BAME;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAGE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA,kBAJF,EAKGP,aAAa,KAAK,GAAlB,gBACC,QAAC,QAAD;AAAU,YAAA,KAAK,EAAEI,uBAAuB;AAAxC;AAAA;AAAA;AAAA;AAAA,kBADD,GAEGJ,aAAa,KAAK,GAAlB,gBACF,QAAC,QAAD;AAAU,YAAA,KAAK,EAAEI,uBAAuB;AAAxC;AAAA;AAAA;AAAA;AAAA,kBADE,GAEAJ,aAAa,KAAK,GAAlB,gBACF,QAAC,QAAD;AAAU,YAAA,KAAK,EAAEI,uBAAuB;AAAxC;AAAA;AAAA;AAAA;AAAA,kBADE,gBAGF,qCAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,cADF,eAwBE;AACE,QAAA,SAAS,EAAEnB,UAAU,CAAC,eAAD,EAAkB;AACrC,wBAAca,IAAI,CAACS,oBAAL,KAA8B,EADP;AAErCC,UAAAA,MAAM,EAAEV,IAAI,CAACS,oBAAL,KAA8B;AAFD,SAAlB,CADvB;AAAA,+BAME,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAqCD,CA9CD;;GAAMX,W;;KAAAA,W;AAgDN,eAAeA,WAAf","sourcesContent":["import classNames from \"classnames\";\nimport React, { useContext } from \"react\";\nimport { useEffect } from \"react\";\nimport { GlobalContext } from \"../../services/AppContext\";\nimport CommonFuntions from \"../../services/CommonFunctions\";\nimport { getTemplateSettings } from \"../../services/HTTPContext\";\nimport Settings from \"../properties/Settings\";\nimport Builder1 from \"../templates/Builder1\";\nimport Builder2 from \"../templates/Builder2\";\nimport Builder3 from \"../templates/Builder3\";\nimport BuilderSettings from \"./BuilderSettings\";\nimport TemplateSteps from \"./TemplateSteps\";\n\nconst BuilderBody = ({ ...props }: any) => {\n  const { data, updateSettings } = useContext(GlobalContext);\n  const templateIndex = sessionStorage.getItem(\"templateIndex\");\n  const templateId = sessionStorage.getItem(\"templateId\");\n  const { CheckPersonalInfoStatus } = CommonFuntions();\n  console.log(data);\n\n  \n\n  return (\n    <>\n      <div className=\"grid grid-cols-12\">\n        <div\n          className={classNames({\n            \"col-span-10\": data.settingsSectionIndex !== \"\",\n            \"col-span-12\": data.settingsSectionIndex === \"\",\n          })}\n        >\n          <div className=\"relative p-3\">\n            <TemplateSteps />\n\n            <BuilderSettings />\n            <br />\n            {templateIndex === \"0\" ? (\n              <Builder1 debug={CheckPersonalInfoStatus()} />\n            ) : templateIndex === \"1\" ? (\n              <Builder2 debug={CheckPersonalInfoStatus()} />\n            ) : templateIndex === \"2\" ? (\n              <Builder3 debug={CheckPersonalInfoStatus()} />\n            ) : (\n              <></>\n            )}\n          </div>\n        </div>\n\n        <div\n          className={classNames(\"bg-indigo-500\", {\n            \"col-span-2\": data.settingsSectionIndex !== \"\",\n            hidden: data.settingsSectionIndex === \"\",\n          })}\n        >\n          <Settings />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default BuilderBody;\n"]},"metadata":{},"sourceType":"module"}