{"ast":null,"code":"var _jsxFileName = \"/home/ma/git/OpenCV/src/components/dashboard/DashboardBody.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useContext } from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GlobalContext } from \"../../services/AppContext\";\nimport CommonFuntions from \"../../services/CommonFunctions\";\nimport { getUserTemplates } from \"../../services/HTTPContext\";\nimport Modal from \"../Modal\";\nimport Builder1 from \"../templates/Builder1\";\nimport Builder2 from \"../templates/Builder2\";\nimport Builder3 from \"../templates/Builder3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DashboardBody = () => {\n  _s();\n\n  const {\n    InitializeUser\n  } = CommonFuntions();\n  InitializeUser();\n  const {\n    data\n  } = useContext(GlobalContext);\n  const [userTemplates, setUserTemplates] = useState([]);\n  useEffect(() => {\n    getUserTemplates(data.userDetails.id).then(response => {\n      setUserTemplates(response);\n    });\n  });\n  const [visible, setVisible] = useState(false);\n  const [modalTemplate, setModalTemplate] = useState(\"\");\n\n  const trClicked = index => {\n    setModalTemplate(index);\n    setVisible(true);\n  };\n\n  const [editVisible, setEditVisible] = useState(false);\n  const details = {\n    templateID: \"\",\n    templateName: \"\",\n    templateIndex: \"\"\n  };\n  const [templateDetails, setTemplateDetails] = useState(details);\n\n  const editClicked = (templateID, templateName, templateIndex) => {\n    const templateDetails = {\n      templateID: templateID,\n      templateName: templateName,\n      templateIndex: templateIndex\n    };\n    setTemplateDetails(templateDetails);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center\",\n      children: userTemplates.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"border-separate border border-indigo-500 w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border border-indigo-500 text-center\",\n              children: \"Template Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border border-indigo-500 text-center\",\n              children: \"Template Index\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border border-indigo-500 text-center \",\n              rowSpan: 2,\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: userTemplates.map((template, index) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              onClick: () => trClicked(template.templateIndex),\n              className: \"hover:bg-gray-500 cursor-pointer\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border border-indigo-500 \",\n                children: template.templateName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border border-indigo-500 text-center\",\n                children: [\"Template \", parseInt(template.templateIndex) + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border border-indigo-500\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex gap-x-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => editClicked(template.id, template.templateIndex, template.templateName),\n                    className: \"p-3 w-1/2 bg-indigo-500 text-white\",\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"p-3 w-1/2 bg-red-500 text-white\",\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: \"No CVs Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/home\",\n            className: \"no-underline text-white\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-indigo-500 text-white p-3\",\n              children: \"Create CV\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      Header: \"Template \" + (parseInt(modalTemplate) + 1),\n      Body: modalTemplate === \"0\" ? /*#__PURE__*/_jsxDEV(Builder1, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this) : modalTemplate === \"1\" ? /*#__PURE__*/_jsxDEV(Builder2, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Builder3, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this),\n      visible: visible,\n      onClick: () => setVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DashboardBody, \"Z2gTwUX9vDfV/Hlq6MHYZumme3I=\");\n\n_c = DashboardBody;\nexport default DashboardBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardBody\");","map":{"version":3,"sources":["/home/ma/git/OpenCV/src/components/dashboard/DashboardBody.tsx"],"names":["React","useContext","useState","useEffect","Link","GlobalContext","CommonFuntions","getUserTemplates","Modal","Builder1","Builder2","Builder3","DashboardBody","InitializeUser","data","userTemplates","setUserTemplates","userDetails","id","then","response","visible","setVisible","modalTemplate","setModalTemplate","trClicked","index","editVisible","setEditVisible","details","templateID","templateName","templateIndex","templateDetails","setTemplateDetails","editClicked","length","map","template","parseInt"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAqBP,cAAc,EAAzC;AACAO,EAAAA,cAAc;AACd,QAAM;AAAEC,IAAAA;AAAF,MAAWb,UAAU,CAACI,aAAD,CAA3B;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,EAAD,CAAlD;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,gBAAgB,CAACO,IAAI,CAACG,WAAL,CAAiBC,EAAlB,CAAhB,CAAsCC,IAAtC,CAA4CC,QAAD,IAAc;AACvDJ,MAAAA,gBAAgB,CAACI,QAAD,CAAhB;AACD,KAFD;AAGD,GAJQ,CAAT;AAKA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACqB,aAAD,EAAgBC,gBAAhB,IAAoCtB,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMuB,SAAS,GAAIC,KAAD,IAAmB;AACnCF,IAAAA,gBAAgB,CAACE,KAAD,CAAhB;AACAJ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAHD;;AAIA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgC1B,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM2B,OAAO,GAAG;AACdC,IAAAA,UAAU,EAAE,EADE;AAEdC,IAAAA,YAAY,EAAE,EAFA;AAGdC,IAAAA,aAAa,EAAE;AAHD,GAAhB;AAKA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwChC,QAAQ,CAAC2B,OAAD,CAAtD;;AACA,QAAMM,WAAW,GAAG,CAClBL,UADkB,EAElBC,YAFkB,EAGlBC,aAHkB,KAIf;AACH,UAAMC,eAAe,GAAG;AACtBH,MAAAA,UAAU,EAAEA,UADU;AAEtBC,MAAAA,YAAY,EAAEA,YAFQ;AAGtBC,MAAAA,aAAa,EAAEA;AAHO,KAAxB;AAKAE,IAAAA,kBAAkB,CAACD,eAAD,CAAlB;AACD,GAXD;;AAaA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,gBACGlB,aAAa,CAACqB,MAAd,GAAuB,CAAvB,gBACC;AAAO,QAAA,SAAS,EAAC,iDAAjB;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,sCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAI,cAAA,SAAS,EAAC,sCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAQE;AACE,cAAA,SAAS,EAAC,uCADZ;AAEE,cAAA,OAAO,EAAE,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAkBE;AAAA,oBACGrB,aAAa,CAACsB,GAAd,CAAkB,CAACC,QAAD,EAAgBZ,KAAhB,KAAkC;AACnD,gCACE;AACE,cAAA,OAAO,EAAE,MAAMD,SAAS,CAACa,QAAQ,CAACN,aAAV,CAD1B;AAEE,cAAA,SAAS,EAAC,kCAFZ;AAAA,sCAKE;AAAI,gBAAA,SAAS,EAAC,2BAAd;AAAA,0BACGM,QAAQ,CAACP;AADZ;AAAA;AAAA;AAAA;AAAA,sBALF,eAQE;AAAI,gBAAA,SAAS,EAAC,sCAAd;AAAA,wCACYQ,QAAQ,CAACD,QAAQ,CAACN,aAAV,CAAR,GAAmC,CAD/C;AAAA;AAAA;AAAA;AAAA;AAAA,sBARF,eAYE;AAAI,gBAAA,SAAS,EAAC,0BAAd;AAAA,uCACE;AAAK,kBAAA,SAAS,EAAC,cAAf;AAAA,0CACE;AAAQ,oBAAA,OAAO,EAAE,MAAMG,WAAW,CAACG,QAAQ,CAACpB,EAAV,EAAcoB,QAAQ,CAACN,aAAvB,EAAqCM,QAAQ,CAACP,YAA9C,CAAlC;AAA+F,oBAAA,SAAS,EAAC,oCAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE;AAAQ,oBAAA,SAAS,EAAC,iCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAZF;AAAA,eAGOL,KAHP;AAAA;AAAA;AAAA;AAAA,oBADF;AAyBD,WA1BA;AADH;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAkDC;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,OAAT;AAAiB,YAAA,SAAS,EAAC,yBAA3B;AAAA,mCACE;AAAQ,cAAA,SAAS,EAAC,8BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAnDJ;AAAA;AAAA;AAAA;AAAA,YADF,eAgEE,QAAC,KAAD;AACE,MAAA,MAAM,EAAE,eAAea,QAAQ,CAAChB,aAAD,CAAR,GAA0B,CAAzC,CADV;AAEE,MAAA,IAAI,EACFA,aAAa,KAAK,GAAlB,gBACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADF,GAEIA,aAAa,KAAK,GAAlB,gBACF,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADE,gBAGF,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cARN;AAWE,MAAA,OAAO,EAAEF,OAXX;AAYE,MAAA,OAAO,EAAE,MAAMC,UAAU,CAAC,KAAD;AAZ3B;AAAA;AAAA;AAAA;AAAA,YAhEF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiFD,CAtHD;;GAAMV,a;;KAAAA,a;AAuHN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport { useContext } from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GlobalContext } from \"../../services/AppContext\";\nimport CommonFuntions from \"../../services/CommonFunctions\";\nimport { getUserTemplates } from \"../../services/HTTPContext\";\nimport Modal from \"../Modal\";\nimport Builder1 from \"../templates/Builder1\";\nimport Builder2 from \"../templates/Builder2\";\nimport Builder3 from \"../templates/Builder3\";\n\nconst DashboardBody = () => {\n  const { InitializeUser } = CommonFuntions();\n  InitializeUser();\n  const { data } = useContext(GlobalContext);\n  const [userTemplates, setUserTemplates] = useState([]);\n  useEffect(() => {\n    getUserTemplates(data.userDetails.id).then((response) => {\n      setUserTemplates(response);\n    });\n  });\n  const [visible, setVisible] = useState(false);\n  const [modalTemplate, setModalTemplate] = useState(\"\");\n\n  const trClicked = (index: string) => {\n    setModalTemplate(index);\n    setVisible(true);\n  };\n  const [editVisible, setEditVisible] = useState(false);\n  const details = {\n    templateID: \"\",\n    templateName: \"\",\n    templateIndex: \"\",\n  };\n  const [templateDetails, setTemplateDetails] = useState(details);\n  const editClicked = (\n    templateID: string,\n    templateName: string,\n    templateIndex: string\n  ) => {\n    const templateDetails = {\n      templateID: templateID,\n      templateName: templateName,\n      templateIndex: templateIndex,\n    };\n    setTemplateDetails(templateDetails);\n  };\n\n  return (\n    <div>\n      <div className=\"flex justify-center\">\n        {userTemplates.length > 0 ? (\n          <table className=\"border-separate border border-indigo-500 w-full\">\n            <thead>\n              <tr>\n                <th className=\"border border-indigo-500 text-center\">\n                  Template Name\n                </th>\n                <th className=\"border border-indigo-500 text-center\">\n                  Template Index\n                </th>\n\n                <th\n                  className=\"border border-indigo-500 text-center \"\n                  rowSpan={2}\n                >\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {userTemplates.map((template: any, index: number) => {\n                return (\n                  <tr\n                    onClick={() => trClicked(template.templateIndex)}\n                    className=\"hover:bg-gray-500 cursor-pointer\"\n                    key={index}\n                  >\n                    <td className=\"border border-indigo-500 \">\n                      {template.templateName}\n                    </td>\n                    <td className=\"border border-indigo-500 text-center\">\n                      Template {parseInt(template.templateIndex) + 1}\n                    </td>\n\n                    <td className=\"border border-indigo-500\">\n                      <div className=\"flex gap-x-2\">\n                        <button onClick={() => editClicked(template.id, template.templateIndex,template.templateName)} className=\"p-3 w-1/2 bg-indigo-500 text-white\">\n                          Edit\n                        </button>\n                        <button className=\"p-3 w-1/2 bg-red-500 text-white\">\n                          Delete\n                        </button>\n                      </div>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        ) : (\n          <div className=\"flex-col\">\n            <div className=\"text-center\">No CVs Found</div>\n            <div className=\"text-center\">\n              <Link to=\"/home\" className=\"no-underline text-white\">\n                <button className=\"bg-indigo-500 text-white p-3\">\n                  Create CV\n                </button>\n              </Link>\n            </div>\n          </div>\n        )}\n      </div>\n      <Modal\n        Header={\"Template \" + (parseInt(modalTemplate) + 1)}\n        Body={\n          modalTemplate === \"0\" ? (\n            <Builder1 />\n          ) : modalTemplate === \"1\" ? (\n            <Builder2 />\n          ) : (\n            <Builder3 />\n          )\n        }\n        visible={visible}\n        onClick={() => setVisible(false)}\n      />\n    </div>\n  );\n};\nexport default DashboardBody;\n"]},"metadata":{},"sourceType":"module"}