{"ast":null,"code":"var _jsxFileName = \"/home/ma/git/OpenCV/src/pages/MyTemplate.tsx\";\nimport React from \"react\";\nimport Builder1 from \"../components/templates/builder/Builder1\";\nimport Builder2 from \"../components/templates/builder/Builder2\";\nimport Builder3 from \"../components/templates/builder/Builder3\";\nimport CommonFuntions from \"../services/CommonFunctions\";\nimport { getUserInfo } from \"../services/HTTPContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyTemplate = ({ ...props\n}) => {\n  const {\n    StoreUserInfo,\n    GetUserInfo,\n    Logout\n  } = CommonFuntions();\n  const id = props.match.params.id;\n  console.log(id);\n  let templateIndex = -1;\n  let published = false;\n  getUserInfo(id).then(response => {\n    if (response.userSettings) {\n      Logout();\n      StoreUserInfo(response);\n    }\n  });\n\n  if (GetUserInfo().userSettings) {\n    published = GetUserInfo().userSettings.published;\n  }\n\n  if (published) {\n    templateIndex = GetUserInfo().userSettings.templateIndex;\n  }\n\n  return published ? templateIndex === 0 ? /*#__PURE__*/_jsxDEV(Builder1, {\n    debug: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this) : templateIndex === 1 ? /*#__PURE__*/_jsxDEV(Builder2, {\n    debug: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this) : templateIndex === 2 ? /*#__PURE__*/_jsxDEV(Builder3, {\n    debug: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n    children: \"This CV is not published yet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n    children: \"This CV is not published yet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MyTemplate;\nexport default MyTemplate;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyTemplate\");","map":{"version":3,"sources":["/home/ma/git/OpenCV/src/pages/MyTemplate.tsx"],"names":["React","Builder1","Builder2","Builder3","CommonFuntions","getUserInfo","MyTemplate","props","StoreUserInfo","GetUserInfo","Logout","id","match","params","console","log","templateIndex","published","then","response","userSettings"],"mappings":";AAAA,OAAOA,KAAP,MAAkC,OAAlC;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,OAAOC,QAAP,MAAqB,0CAArB;AAEA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,SAASC,WAAT,QAA4B,yBAA5B;;;AAEA,MAAMC,UAAU,GAAG,CAAC,EAAE,GAAGC;AAAL,CAAD,KAAuB;AACxC,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,WAAjB;AAA8BC,IAAAA;AAA9B,MAAyCN,cAAc,EAA7D;AACA,QAAMO,EAAE,GAAGJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ;AACA,MAAIK,aAAa,GAAG,CAAC,CAArB;AACA,MAAIC,SAAS,GAAG,KAAhB;AACAZ,EAAAA,WAAW,CAACM,EAAD,CAAX,CAAgBO,IAAhB,CAAsBC,QAAD,IAAc;AACjC,QAAIA,QAAQ,CAACC,YAAb,EAA2B;AACzBV,MAAAA,MAAM;AACNF,MAAAA,aAAa,CAACW,QAAD,CAAb;AACD;AACF,GALD;;AAMA,MAAIV,WAAW,GAAGW,YAAlB,EAAgC;AAC9BH,IAAAA,SAAS,GAAGR,WAAW,GAAGW,YAAd,CAA2BH,SAAvC;AACD;;AACD,MAAIA,SAAJ,EAAe;AACbD,IAAAA,aAAa,GAAGP,WAAW,GAAGW,YAAd,CAA2BJ,aAA3C;AACD;;AACD,SAAOC,SAAS,GACdD,aAAa,KAAK,CAAlB,gBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAjB;AAAA;AAAA;AAAA;AAAA,UADF,GAEIA,aAAa,KAAK,CAAlB,gBACF,QAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAjB;AAAA;AAAA;AAAA;AAAA,UADE,GAEAA,aAAa,KAAK,CAAlB,gBACF,QAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAjB;AAAA;AAAA;AAAA;AAAA,UADE,gBAGF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARY,gBAWd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAXF;AAaD,CA/BD;;KAAMV,U;AAiCN,eAAeA,UAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport Builder1 from \"../components/templates/builder/Builder1\";\nimport Builder2 from \"../components/templates/builder/Builder2\";\nimport Builder3 from \"../components/templates/builder/Builder3\";\nimport { GlobalContext } from \"../services/AppContext\";\nimport CommonFuntions from \"../services/CommonFunctions\";\nimport { getUserInfo } from \"../services/HTTPContext\";\n\nconst MyTemplate = ({ ...props }: any) => {\n  const { StoreUserInfo, GetUserInfo, Logout } = CommonFuntions();\n  const id = props.match.params.id;\n  console.log(id)\n  let templateIndex = -1;\n  let published = false;\n  getUserInfo(id).then((response) => {\n    if (response.userSettings) {\n      Logout();\n      StoreUserInfo(response);\n    }\n  });\n  if (GetUserInfo().userSettings) {\n    published = GetUserInfo().userSettings.published;\n  }\n  if (published) {\n    templateIndex = GetUserInfo().userSettings.templateIndex;\n  }\n  return published ? (\n    templateIndex === 0 ? (\n      <Builder1 debug={true} />\n    ) : templateIndex === 1 ? (\n      <Builder2 debug={true} />\n    ) : templateIndex === 2 ? (\n      <Builder3 debug={true} />\n    ) : (\n      <span>This CV is not published yet</span>\n    )\n  ) : (\n    <span>This CV is not published yet</span>\n  );\n};\n\nexport default MyTemplate;\n"]},"metadata":{},"sourceType":"module"}