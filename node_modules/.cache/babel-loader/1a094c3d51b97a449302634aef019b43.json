{"ast":null,"code":"var _jsxFileName = \"/home/ma/git/OpenCV/src/pages/MyTemplate.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Builder1 from \"../components/templates/builder/Builder1\";\nimport Builder2 from \"../components/templates/builder/Builder2\";\nimport Builder3 from \"../components/templates/builder/Builder3\";\nimport CommonFuntions from \"../services/CommonFunctions\";\nimport { getUserInfo } from \"../services/HTTPContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyTemplate = ({ ...props\n}) => {\n  _s();\n\n  const {\n    StoreUserInfo,\n    GetUserInfo,\n    Logout\n  } = CommonFuntions();\n  let temp = \"\";\n  const [data, setData] = useState(temp);\n  const id = props.match.params.id;\n  let templateIndex = -1;\n  let published = false;\n  getUserInfo(id).then(response => {\n    Logout();\n\n    if (response.userSettings) {\n      setData(response);\n    }\n  });\n\n  if (data.userSettings) {\n    published = data.userSettings.published;\n  }\n\n  if (published) {\n    templateIndex = data.userSettings.templateIndex;\n  }\n\n  return published ? templateIndex === 0 ? /*#__PURE__*/_jsxDEV(Builder1, {\n    debug: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this) : templateIndex === 1 ? /*#__PURE__*/_jsxDEV(Builder2, {\n    debug: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this) : templateIndex === 2 ? /*#__PURE__*/_jsxDEV(Builder3, {\n    debug: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [\"This CV is not published yet or not ready. Try to\", /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => window.location.reload(),\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [\"This CV is not published yet or not ready. Try to\", /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => window.location.reload(),\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyTemplate, \"ogdGzLh2z75s9Si0WYN6hdr9umU=\");\n\n_c = MyTemplate;\nexport default MyTemplate;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyTemplate\");","map":{"version":3,"sources":["/home/ma/git/OpenCV/src/pages/MyTemplate.tsx"],"names":["React","useState","Builder1","Builder2","Builder3","CommonFuntions","getUserInfo","MyTemplate","props","StoreUserInfo","GetUserInfo","Logout","temp","data","setData","id","match","params","templateIndex","published","then","response","userSettings","window","location","reload"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,SAASC,WAAT,QAA4B,yBAA5B;;;AAEA,MAAMC,UAAU,GAAG,CAAC,EAAE,GAAGC;AAAL,CAAD,KAAuB;AAAA;;AACxC,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,WAAjB;AAA8BC,IAAAA;AAA9B,MAAyCN,cAAc,EAA7D;AACA,MAAIO,IAAS,GAAG,EAAhB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAACW,IAAD,CAAhC;AACA,QAAMG,EAAE,GAAGP,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;AACA,MAAIG,aAAa,GAAG,CAAC,CAArB;AACA,MAAIC,SAAS,GAAG,KAAhB;AACAb,EAAAA,WAAW,CAACS,EAAD,CAAX,CAAgBK,IAAhB,CAAsBC,QAAD,IAAc;AACjCV,IAAAA,MAAM;;AAEN,QAAIU,QAAQ,CAACC,YAAb,EAA2B;AACzBR,MAAAA,OAAO,CAACO,QAAD,CAAP;AACD;AACF,GAND;;AAOA,MAAIR,IAAI,CAACS,YAAT,EAAuB;AACrBH,IAAAA,SAAS,GAAGN,IAAI,CAACS,YAAL,CAAkBH,SAA9B;AACD;;AACD,MAAIA,SAAJ,EAAe;AACbD,IAAAA,aAAa,GAAGL,IAAI,CAACS,YAAL,CAAkBJ,aAAlC;AACD;;AACD,SAAOC,SAAS,GACdD,aAAa,KAAK,CAAlB,gBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAjB;AAAA;AAAA;AAAA;AAAA,UADF,GAEIA,aAAa,KAAK,CAAlB,gBACF,QAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAjB;AAAA;AAAA;AAAA;AAAA,UADE,GAEAA,aAAa,KAAK,CAAlB,gBACF,QAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAjB;AAAA;AAAA;AAAA;AAAA,UADE,gBAGF;AAAA,iFAEE;AAAM,MAAA,OAAO,EAAE,MAAMK,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAEgE,GAFhE;AAAA;AAAA;AAAA;AAAA;AAAA,UARY,gBAcd;AAAA,iFAEE;AAAM,MAAA,OAAO,EAAE,MAAMF,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAEgE,GAFhE;AAAA;AAAA;AAAA;AAAA;AAAA,UAdF;AAmBD,CAvCD;;GAAMlB,U;;KAAAA,U;AAyCN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport Builder1 from \"../components/templates/builder/Builder1\";\nimport Builder2 from \"../components/templates/builder/Builder2\";\nimport Builder3 from \"../components/templates/builder/Builder3\";\nimport CommonFuntions from \"../services/CommonFunctions\";\nimport { getUserInfo } from \"../services/HTTPContext\";\n\nconst MyTemplate = ({ ...props }: any) => {\n  const { StoreUserInfo, GetUserInfo, Logout } = CommonFuntions();\n  let temp: any = \"\";\n  const [data, setData] = useState(temp);\n  const id = props.match.params.id;\n  let templateIndex = -1;\n  let published = false;\n  getUserInfo(id).then((response) => {\n    Logout();\n\n    if (response.userSettings) {\n      setData(response);\n    }\n  });\n  if (data.userSettings) {\n    published = data.userSettings.published;\n  }\n  if (published) {\n    templateIndex = data.userSettings.templateIndex;\n  }\n  return published ? (\n    templateIndex === 0 ? (\n      <Builder1 debug={true} />\n    ) : templateIndex === 1 ? (\n      <Builder2 debug={true} />\n    ) : templateIndex === 2 ? (\n      <Builder3 debug={true} />\n    ) : (\n      <span>\n        This CV is not published yet or not ready. Try to\n        <span onClick={() => window.location.reload()}>Refresh</span>{\" \"}\n      </span>\n    )\n  ) : (\n    <span>\n      This CV is not published yet or not ready. Try to\n      <span onClick={() => window.location.reload()}>Refresh</span>{\" \"}\n    </span>\n  );\n};\n\nexport default MyTemplate;\n"]},"metadata":{},"sourceType":"module"}