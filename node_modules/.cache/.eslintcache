[{"/home/ma/git/OpenCV/src/index.tsx":"1","/home/ma/git/OpenCV/src/reportWebVitals.ts":"2","/home/ma/git/OpenCV/src/services/AppContext.tsx":"3","/home/ma/git/OpenCV/src/services/AppReducer.ts":"4","/home/ma/git/OpenCV/src/components/Experience.tsx":"5","/home/ma/git/OpenCV/src/components/PersonalProfile.tsx":"6","/home/ma/git/OpenCV/src/components/Education.tsx":"7","/home/ma/git/OpenCV/src/components/Projects.tsx":"8","/home/ma/git/OpenCV/src/components/Modal.tsx":"9","/home/ma/git/OpenCV/src/components/Languages.tsx":"10","/home/ma/git/OpenCV/src/components/CommonFunctions.ts":"11","/home/ma/git/OpenCV/src/components/Contact.tsx":"12","/home/ma/git/OpenCV/src/components/templates/properties/Configurations.tsx":"13","/home/ma/git/OpenCV/src/components/templates/properties/SideMenu.tsx":"14","/home/ma/git/OpenCV/src/components/templates/properties/Settings.tsx":"15","/home/ma/git/OpenCV/src/components/templates/builder/Builder1.tsx":"16","/home/ma/git/OpenCV/src/components/templates/builder/Builder2.tsx":"17","/home/ma/git/OpenCV/src/Home.tsx":"18","/home/ma/git/OpenCV/src/Builder.tsx":"19","/home/ma/git/OpenCV/src/components/Wrapper.tsx":"20"},{"size":887,"mtime":1630177514479,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":1629493461614,"results":"23","hashOfConfig":"22"},{"size":2548,"mtime":1630178335378,"results":"24","hashOfConfig":"22"},{"size":693,"mtime":1630177398690,"results":"25","hashOfConfig":"22"},{"size":1273,"mtime":1630173737677,"results":"26","hashOfConfig":"22"},{"size":702,"mtime":1630089948359,"results":"27","hashOfConfig":"22"},{"size":1290,"mtime":1630173727248,"results":"28","hashOfConfig":"22"},{"size":1145,"mtime":1630178753884,"results":"29","hashOfConfig":"22"},{"size":529,"mtime":1630087387216,"results":"30","hashOfConfig":"22"},{"size":983,"mtime":1630173765662,"results":"31","hashOfConfig":"22"},{"size":3851,"mtime":1630173688542,"results":"32","hashOfConfig":"22"},{"size":1144,"mtime":1630173803804,"results":"33","hashOfConfig":"22"},{"size":11283,"mtime":1630174073182,"results":"34","hashOfConfig":"22"},{"size":3803,"mtime":1630174083225,"results":"35","hashOfConfig":"22"},{"size":4009,"mtime":1630174068154,"results":"36","hashOfConfig":"22"},{"size":2721,"mtime":1630178164807,"results":"37","hashOfConfig":"22"},{"size":2297,"mtime":1630178308725,"results":"38","hashOfConfig":"22"},{"size":1148,"mtime":1630177483911,"results":"39","hashOfConfig":"22"},{"size":2200,"mtime":1630178089162,"results":"40","hashOfConfig":"22"},{"size":525,"mtime":1630178215280,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1t4fa4u",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ma/git/OpenCV/src/index.tsx",["87","88","89","90"],"/home/ma/git/OpenCV/src/reportWebVitals.ts",[],["91","92"],"/home/ma/git/OpenCV/src/services/AppContext.tsx",["93"],"/home/ma/git/OpenCV/src/services/AppReducer.ts",[],"/home/ma/git/OpenCV/src/components/Experience.tsx",[],"/home/ma/git/OpenCV/src/components/PersonalProfile.tsx",[],"/home/ma/git/OpenCV/src/components/Education.tsx",[],"/home/ma/git/OpenCV/src/components/Projects.tsx",[],"/home/ma/git/OpenCV/src/components/Modal.tsx",["94","95","96","97","98","99"],"import React, { useContext } from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { GlobalContext } from \"../services/AppContext\";\nimport CommonFuntions from \"./CommonFunctions\";\nimport { Button, Modal } from \"react-bootstrap\";\n\nconst MyModal = ({ ...props }) => {\n\n  return (\n    <Modal show={props.visible} onHide={() => props.onClick()}>\n      <Modal.Header closeButton>{props.Header}</Modal.Header>\n      <Modal.Body>{props.Body}</Modal.Body>\n    </Modal>\n  );\n};\nexport default MyModal;\n","/home/ma/git/OpenCV/src/components/Languages.tsx",[],"/home/ma/git/OpenCV/src/components/CommonFunctions.ts",["100","101","102","103"],"import { useContext } from \"react\";\nimport { GlobalContext } from \"../services/AppContext\";\n\nconst CommonFuntions = () => {\n  const { data, updateData, updateIndex, sectionIndex } =\n    useContext(GlobalContext);\n\n  const AddExperience = () => {\n    let list = {\n      from: \"\",\n      to: \"\",\n      text: \"\",\n    };\n    data[sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const AddLanguage = () => {\n    data[sectionIndex].sections.push(\"\");\n    updateData(data);\n  };\n\n  const AddContact = () => {\n    let list = {\n      title: \"\",\n      details: \"\",\n    };\n    data[sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const AddEducation = () => {\n    let list = {\n      from: \"\",\n      to: \"\",\n      text: \"\",\n    };\n    data[sectionIndex].sections.push(list);\n    updateData(data);\n  };\n  const AddProject = () => {\n    let list = {\n      projectName: \"\",\n      projectDescription: \"\",\n    };\n    data[sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const UpdateLanguage = (e: any, index: number) => {\n    data[sectionIndex].sections[index] = e.target.value;\n    updateData(data);\n  };\n\n  const UpdateProjectName = (e: any, index: number) => {\n    data[sectionIndex].sections[index].projectName = e.target.value;\n    updateData(data);\n  };\n\n  const UpdateProjectDescription = (e: any, index: number) => {\n    data[sectionIndex].sections[index].projectDescription = e.target.value;\n    updateData(data);\n  };\n\n  const ModifyText = (event: any) => {\n    data[sectionIndex].text = event.target.value;\n    updateData(data);\n  };\n  const UpdateFromSection = (e: any, index: number) => {\n    data[sectionIndex].sections[index].from = e.target.value;\n    updateData(data);\n    console.log(data);\n  };\n  const UpdateToSection = (e: any, index: number) => {\n    data[sectionIndex].sections[index].to = e.target.value;\n    updateData(data);\n  };\n  const UpdateTextSection = (e: any, index: number) => {\n    data[sectionIndex].sections[index].text = e.target.value;\n    updateData(data);\n  };\n  const DeleteSection = (index: number) => {\n    console.log(index);\n    data[sectionIndex].sections.splice(index, 1);\n    updateData(data);\n  };\n  const UpdateContactTitleSection = (e: any, index: number) => {\n    data[sectionIndex].sections[index].title = e.target.value;\n    updateData(data);\n  };\n  const UpdateContactDetailsSection = (e: any, index: number) => {\n    data[sectionIndex].sections[index].details = e.target.value;\n    updateData(data);\n  };\n  const CheckSections = (sectionName: string) => {\n    let enable: boolean = false;\n    data[sectionName].sections.map((section: any, index: any) => {\n      if (!enable) {\n        if (section.to !== \"\" && section.from !== \"\" && section.text !== \"\") {\n          enable = true;\n        }\n      }\n    });\n    return enable;\n  };\n\n  const CheckProjectsStatus = () => {\n    let enable: boolean = false;\n    data[\"projects\"].sections.map((section: any, index: any) => {\n      if (!enable) {\n        if (section.projectName !== \"\" && section.projectDescription !== \"\") {\n          enable = true;\n        }\n      }\n    });\n    return enable;\n  };\n\n  const CheckSectionTextStatus = (sectionName: string) => {\n    let enable: boolean = false;\n    data[sectionName].sections.map((text: any, index: any) => {\n      if (!enable && text !== \"\") {\n        enable = true;\n      }\n    });\n    return enable;\n  };\n\n  \n\n  return {\n    AddExperience,\n    AddLanguage,\n    AddProject,\n    AddEducation,\n    UpdateLanguage,\n    UpdateProjectName,\n    UpdateProjectDescription,\n    ModifyText,\n    UpdateFromSection,\n    UpdateToSection,\n    UpdateTextSection,\n    DeleteSection,\n    AddContact,\n    UpdateContactTitleSection,\n    UpdateContactDetailsSection,\n    CheckSections,\n    CheckProjectsStatus,\n    CheckSectionTextStatus,\n  } as const;\n};\n\nexport default CommonFuntions;\n","/home/ma/git/OpenCV/src/components/Contact.tsx",[],"/home/ma/git/OpenCV/src/components/templates/properties/Configurations.tsx",["104","105","106"],"import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../../../services/AppContext\";\nimport CommonFuntions from \"../../CommonFunctions\";\nimport Modal from \"../../Modal\";\n\nconst Configurations = () => {\n  const { data, updateData, updateIndex, sectionIndex, updateSettingsModal } =\n    useContext(GlobalContext);\n  const {\n    AddEducation,\n    ModifyText,\n    UpdateFromSection,\n    UpdateToSection,\n    UpdateTextSection,\n    AddExperience,\n    AddLanguage,\n    UpdateLanguage,\n    AddProject,\n    UpdateProjectDescription,\n    UpdateProjectName,\n    DeleteSection,\n    AddContact,\n    UpdateContactTitleSection,\n    UpdateContactDetailsSection,\n  } = CommonFuntions();\n\n  const Header = (\n    <div className=\"flex justify-between gap-x-0.5\">\n      <span> {sectionIndex.toUpperCase().replace(\"_\", \" \")}</span>\n      <span>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-6 w-6 cursor-pointer\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n          onClick={() => updateSettingsModal()}\n        >\n          <path\n            strokeWidth=\"2\"\n            d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"\n          />\n          <path strokeWidth=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n        </svg>\n      </span>\n    </div>\n  );\n\n  const Body = (\n    <div className=\"\">\n      {sectionIndex === \"personal_details\" ? (\n        <div className=\"flex-col\">\n          <div className=\"flex justify-center\">\n            <textarea\n              className={\"flex h-52 w-full \"}\n              onChange={(e) => ModifyText(e)}\n              placeholder=\"Type your profile\"\n              value={data[sectionIndex].text}\n            />\n          </div>\n        </div>\n      ) : sectionIndex === \"education\" ? (\n        <div className=\"flex-col\">\n          <div className=\"flex justify-center\">\n            <button\n              onClick={() => AddEducation()}\n              className=\"rounded h-12 w-full p-2 cursor-pointer bg-indigo-500\"\n            >\n              Add Education\n            </button>\n          </div>\n          <br />\n          <div className=\"flex-wrap justify-center flex items-center\">\n            {data[sectionIndex].sections.map((section: any, index: any) => {\n              return (\n                <div className=\"flex-col w-full gap-y-6 pl-2 pt-5\">\n                  <div className=\"flex justify-center\">\n                    <span>Education {index + 1}</span>\n                  </div>\n                  <div className=\"border-2 p-2 w-full\">\n                    <div className=\"flex-wrap w-full gap-x-3\">\n                      <input\n                        onChange={(e) => UpdateFromSection(e, index)}\n                        className=\"w-1/2 p-2 rounded\"\n                        placeholder=\"from\"\n                        type=\"date\"\n                        value={section.from}\n                      />\n                      <input\n                        className=\"w-1/2 p-2 rounded\"\n                        placeholder=\"To\"\n                        onChange={(e) => UpdateToSection(e, index)}\n                        type=\"date\"\n                        value={section.to}\n                      />\n                    </div>\n                    <br />\n                    <textarea\n                      className=\"rounded w-full p-2\"\n                      placeholder=\"Education\"\n                      onChange={(e) => UpdateTextSection(e, index)}\n                      value={section.text}\n                    />\n                  </div>\n                  <div className=\"flex justify-center\">\n                    <button\n                      onClick={() => DeleteSection(index)}\n                      className=\"p-3 w-full cursor-pointer bg-red-500\"\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      ) : sectionIndex === \"experience\" ? (\n        <div className=\"flex-col\">\n          <div className=\"flex justify-center\">\n            <button\n              onClick={() => AddExperience()}\n              className=\"rounded w-full h-12 p-2 cursor-pointer bg-indigo-500\"\n            >\n              Add Experience\n            </button>\n          </div>\n          <br />\n          <div className=\"flex-wrap justify-center flex items-center\">\n            {data[sectionIndex].sections.map((section: any, index: any) => {\n              return (\n                <div className=\"flex-col gap-y-6 pl-2 pt-5\">\n                  <div className=\"flex justify-center\">\n                    <span>Experience {index + 1}</span>\n                  </div>\n                  <div className=\"border-2 p-2\">\n                    <div className=\"flex-wrap gap-x-3\">\n                      <input\n                        onChange={(e) => UpdateFromSection(e, index)}\n                        className=\"w-1/2 p-2 rounded\"\n                        placeholder=\"from\"\n                        type=\"date\"\n                        value={section.from}\n                      />\n                      <input\n                        className=\"w-1/2 p-2 rounded\"\n                        placeholder=\"To\"\n                        onChange={(e) => UpdateToSection(e, index)}\n                        type=\"date\"\n                        value={section.to}\n                      />\n                    </div>\n                    <br />\n                    <textarea\n                      className=\"rounded w-full p-2\"\n                      placeholder=\"Experience\"\n                      onChange={(e) => UpdateTextSection(e, index)}\n                      value={section.text}\n                    />\n                  </div>\n                  <div className=\"flex justify-center\">\n                    <button\n                      onClick={() => DeleteSection(index)}\n                      className=\"p-3 w-full cursor-pointer bg-red-500\"\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      ) : sectionIndex === \"languages\" ? (\n        <div className=\"flex-col\">\n          <div className=\"flex justify-center\">\n            <button\n              onClick={() => AddLanguage()}\n              className=\"rounded w-full h-12 p-2 cursor-pointer bg-indigo-500\"\n            >\n              Add Language\n            </button>\n          </div>\n          {data[sectionIndex].sections.map((text: any, index: any) => {\n            return (\n              <div key={\"lang\" + index} className=\"flex-col align-middle\">\n                <div className=\"flex items-center\">\n                  <input\n                    onChange={(e) => UpdateLanguage(e, index)}\n                    className=\"p-2 mb-2 mt-2 w-full\"\n                    value={text}\n                    placeholder={\"Language \" + (index + 1)}\n                  />\n                  <div\n                    onClick={() => DeleteSection(index)}\n                    className=\"rounded bg-red-500 cursor-pointer flex justify-center items-center w-10 h-10\"\n                  >\n                    X\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      ) : sectionIndex === \"projects\" ? (\n        <div className=\"flex-col gap-y-2\">\n          <div className=\"flex-col flex justify-center\">\n            <input\n              placeholder=\"Projects Description \"\n              onChange={(e) => ModifyText(e)}\n              className=\"p-2\"\n            />{\" \"}\n            <br />\n            <button\n              onClick={() => AddProject()}\n              className=\"rounded h-12 p-2 cursor-pointer bg-indigo-500\"\n            >\n              Add Project\n            </button>\n          </div>\n          <div className=\"p-3\">\n            {data[sectionIndex].sections.map((section: any, index: any) => {\n              return (\n                <div key={\"project\" + index} className=\"flex-col mt-3\">\n                  <div className=\"flex justify-center\">\n                    <span>Project {index + 1}</span>\n                  </div>\n                  <div className=\"border-2\">\n                    <input\n                      onChange={(e) => UpdateProjectName(e, index)}\n                      placeholder=\"Project Title\"\n                      value={section.projectName}\n                      className=\"p-2 mb-3 w-full\"\n                    ></input>\n                    <textarea\n                      className=\"w-full p-2\"\n                      placeholder={\"Project \" + (index + 1)}\n                      onChange={(e) => UpdateProjectDescription(e, index)}\n                    >\n                      {section.projectDescription}\n                    </textarea>\n                  </div>\n                  <div className=\"flex justify-center\">\n                    <button\n                      onClick={() => DeleteSection(index)}\n                      className=\"p-3 w-full cursor-pointer bg-red-500\"\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      ) : sectionIndex === \"contact\" ? (\n        <div className=\"flex-col\">\n          <div className=\"flex justify-center\">\n            <button\n              onClick={() => AddContact()}\n              className=\"rounded cursor-pointer w-full h-12 p-2 bg-indigo-500\"\n            >\n              Add Contact\n            </button>\n          </div>\n          {data[sectionIndex].sections.map((section: any, index: any) => {\n            return (\n              <div key={\"contact\" + index} className=\"flex-col align-middle\">\n                <div className=\"flex items-center\">\n                  <input\n                    onChange={(e) => UpdateContactTitleSection(e, index)}\n                    className=\"p-2 mb-2 mt-2 w-full\"\n                    value={section.title}\n                    placeholder={\"Contact \" + (index + 1)}\n                  />\n\n                  <input\n                    onChange={(e) => UpdateContactDetailsSection(e, index)}\n                    className=\"p-2 mb-2 mt-2 w-full\"\n                    value={section.details}\n                    placeholder={\"Details\"}\n                  />\n\n                  <div\n                    onClick={() => DeleteSection(index)}\n                    className=\"rounded bg-red-500 flex justify-center cursor-pointer items-center w-10 h-10\"\n                  >\n                    X\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n\n  return { Header, Body } as const;\n};\n\nexport default Configurations;\n","/home/ma/git/OpenCV/src/components/templates/properties/SideMenu.tsx",["107"],"import classNames from \"classnames\";\nimport React, { useContext } from \"react\";\nimport { GlobalContext } from \"../../../services/AppContext\";\nimport CommonFuntions from \"../../CommonFunctions\";\n\nconst SideMenu = () => {\n  const { data, updateData, updateIndex, sectionIndex } =\n    useContext(GlobalContext);\n\n  const { CheckSections, CheckProjectsStatus, CheckSectionTextStatus } =\n    CommonFuntions();\n\n  const updateTemplateIndex = (condition: boolean, sectionName: string) => {\n    if (condition) {\n      updateIndex(sectionName);\n    }\n  };\n  console.log(CheckSections(\"education\"));\n  return (\n    <div className=\"flex-col justify-center items-start p-2 z-0 relative\">\n      <div\n        onClick={() => updateIndex(\"personal_details\")}\n        className={classNames(\"flex-col p-3 cursor-pointer rounded\", {\n          \"hover:bg-gray-200\": sectionIndex !== \"personal_details\",\n          \"bg-gray-200\": sectionIndex === \"personal_details\",\n        })}\n      >\n        <div className={\"flex items-center \"}>\n          <span className=\"\">Personal Profile</span>\n        </div>\n      </div>\n\n      <div\n        onClick={() =>\n          updateTemplateIndex(data.personal_details.text !== \"\", \"education\")\n        }\n        className={classNames(\"flex-col p-3 cursor-pointer rounded\", {\n          \"hover:bg-gray-200\":\n            sectionIndex !== \"education\" && data.personal_details.text !== \"\",\n          \"bg-gray-200\": sectionIndex === \"education\",\n          \"text-gray-500\": data.personal_details.text === \"\",\n        })}\n      >\n        <div className={\"flex items-center \"}>\n          <span className=\"\">Education</span>\n        </div>\n      </div>\n\n      <div\n        onClick={() =>\n          updateTemplateIndex(CheckSections(\"education\"), \"experience\")\n        }\n        className={classNames(\"flex-col p-3 cursor-pointer rounded\", {\n          \"hover:bg-gray-200\":\n            sectionIndex !== \"experience\" && CheckSections(\"education\"),\n          \"bg-gray-200\": sectionIndex === \"experience\",\n          \"text-gray-500\": !CheckSections(\"education\"),\n        })}\n      >\n        <div className={\"flex \"}>\n          <span className=\"\">Experience</span>\n        </div>\n      </div>\n\n      <div\n        onClick={() =>\n          updateTemplateIndex(CheckSections(\"experience\"), \"projects\")\n        }\n        className={classNames(\"flex-col p-3 cursor-pointer rounded\", {\n          \"hover:bg-gray-200\":\n            sectionIndex !== \"projects\" && CheckSections(\"experience\"),\n          \"bg-gray-200\": sectionIndex === \"projects\",\n          \"text-gray-500\": !CheckSections(\"experience\"),\n        })}\n      >\n        <div className={\"flex \"}>\n          <span className=\"\">Projects</span>\n        </div>\n      </div>\n\n      <div\n        onClick={() => updateTemplateIndex(CheckProjectsStatus(), \"languages\")}\n        className={classNames(\"flex-col p-3 cursor-pointer rounded\", {\n          \"hover:bg-gray-200\":\n            sectionIndex !== \"languages\" && CheckProjectsStatus(),\n          \"bg-gray-200\": sectionIndex === \"languages\",\n          \"text-gray-500\": !CheckProjectsStatus(),\n        })}\n      >\n        <div className={\"flex \"}>\n          <span className=\"\">Languages</span>\n        </div>\n      </div>\n\n      <div\n        onClick={() =>\n          updateTemplateIndex(CheckSectionTextStatus(\"languages\"), \"contact\")\n        }\n        className={classNames(\"flex-col p-3 cursor-pointer rounded\", {\n          \"hover:bg-gray-200\":\n            sectionIndex !== \"contact\" && CheckSectionTextStatus(\"languages\"),\n          \"bg-gray-200\": sectionIndex === \"contact\",\n          \"text-gray-500\": !CheckSectionTextStatus(\"languages\"),\n        })}\n      >\n        <div className={\"flex \"}>\n          <span className=\"\">Contact</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SideMenu;\n","/home/ma/git/OpenCV/src/components/templates/properties/Settings.tsx",[],"/home/ma/git/OpenCV/src/components/templates/builder/Builder1.tsx",[],"/home/ma/git/OpenCV/src/components/templates/builder/Builder2.tsx",[],"/home/ma/git/OpenCV/src/Home.tsx",["108"],"/home/ma/git/OpenCV/src/Builder.tsx",["109","110","111","112","113","114","115","116","117","118","119"],"/home/ma/git/OpenCV/src/components/Wrapper.tsx",["120"],{"ruleId":"121","severity":1,"message":"122","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":11},{"ruleId":"121","severity":1,"message":"125","line":9,"column":8,"nodeType":"123","messageId":"124","endLine":9,"endColumn":16},{"ruleId":"121","severity":1,"message":"126","line":10,"column":8,"nodeType":"123","messageId":"124","endLine":10,"endColumn":16},{"ruleId":"121","severity":1,"message":"127","line":11,"column":8,"nodeType":"123","messageId":"124","endLine":11,"endColumn":12},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"121","severity":1,"message":"132","line":89,"column":9,"nodeType":"123","messageId":"124","endLine":89,"endColumn":24},{"ruleId":"121","severity":1,"message":"133","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":27},{"ruleId":"121","severity":1,"message":"134","line":2,"column":10,"nodeType":"123","messageId":"124","endLine":2,"endColumn":19},{"ruleId":"121","severity":1,"message":"135","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":18},{"ruleId":"121","severity":1,"message":"136","line":4,"column":10,"nodeType":"123","messageId":"124","endLine":4,"endColumn":23},{"ruleId":"121","severity":1,"message":"137","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":22},{"ruleId":"121","severity":1,"message":"138","line":6,"column":10,"nodeType":"123","messageId":"124","endLine":6,"endColumn":16},{"ruleId":"121","severity":1,"message":"139","line":5,"column":29,"nodeType":"123","messageId":"124","endLine":5,"endColumn":40},{"ruleId":"140","severity":1,"message":"141","line":97,"column":63,"nodeType":"142","messageId":"143","endLine":97,"endColumn":65},{"ruleId":"140","severity":1,"message":"141","line":109,"column":62,"nodeType":"142","messageId":"143","endLine":109,"endColumn":64},{"ruleId":"140","severity":1,"message":"141","line":121,"column":60,"nodeType":"142","messageId":"143","endLine":121,"endColumn":62},{"ruleId":"121","severity":1,"message":"144","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":13},{"ruleId":"121","severity":1,"message":"145","line":7,"column":17,"nodeType":"123","messageId":"124","endLine":7,"endColumn":27},{"ruleId":"121","severity":1,"message":"139","line":7,"column":29,"nodeType":"123","messageId":"124","endLine":7,"endColumn":40},{"ruleId":"121","severity":1,"message":"145","line":7,"column":17,"nodeType":"123","messageId":"124","endLine":7,"endColumn":27},{"ruleId":"121","severity":1,"message":"133","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":27},{"ruleId":"121","severity":1,"message":"135","line":1,"column":29,"nodeType":"123","messageId":"124","endLine":1,"endColumn":37},{"ruleId":"121","severity":1,"message":"146","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":15},{"ruleId":"121","severity":1,"message":"147","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":17},{"ruleId":"121","severity":1,"message":"148","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":18},{"ruleId":"121","severity":1,"message":"149","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":17},{"ruleId":"121","severity":1,"message":"150","line":7,"column":8,"nodeType":"123","messageId":"124","endLine":7,"endColumn":23},{"ruleId":"121","severity":1,"message":"151","line":8,"column":8,"nodeType":"123","messageId":"124","endLine":8,"endColumn":16},{"ruleId":"121","severity":1,"message":"152","line":14,"column":10,"nodeType":"123","messageId":"124","endLine":14,"endColumn":22},{"ruleId":"121","severity":1,"message":"153","line":20,"column":5,"nodeType":"123","messageId":"124","endLine":20,"endColumn":9},{"ruleId":"121","severity":1,"message":"145","line":21,"column":5,"nodeType":"123","messageId":"124","endLine":21,"endColumn":15},{"ruleId":"121","severity":1,"message":"154","line":26,"column":5,"nodeType":"123","messageId":"124","endLine":26,"endColumn":18},{"ruleId":"121","severity":1,"message":"150","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":23},"@typescript-eslint/no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Builder1' is defined but never used.","'Builder2' is defined but never used.","'Home' is defined but never used.","no-native-reassign",["155"],"no-negated-in-lhs",["156"],"'updateTempIndex' is assigned a value but never used.","'useContext' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'GlobalContext' is defined but never used.","'CommonFuntions' is defined but never used.","'Button' is defined but never used.","'updateIndex' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Modal' is defined but never used.","'updateData' is assigned a value but never used.","'Contact' is defined but never used.","'Education' is defined but never used.","'Experience' is defined but never used.","'Languages' is defined but never used.","'PersonalProfile' is defined but never used.","'Projects' is defined but never used.","'ExportToWord' is defined but never used.","'data' is assigned a value but never used.","'templateIndex' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]