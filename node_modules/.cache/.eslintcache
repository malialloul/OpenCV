[{"/home/ma/git/OpenCV/src/index.tsx":"1","/home/ma/git/OpenCV/src/reportWebVitals.ts":"2","/home/ma/git/OpenCV/src/services/AppContext.tsx":"3","/home/ma/git/OpenCV/src/services/AppReducer.ts":"4","/home/ma/git/OpenCV/src/components/Modal.tsx":"5","/home/ma/git/OpenCV/src/components/templates/properties/Configurations.tsx":"6","/home/ma/git/OpenCV/src/components/templates/properties/Settings.tsx":"7","/home/ma/git/OpenCV/src/components/templates/builder/Builder1.tsx":"8","/home/ma/git/OpenCV/src/components/templates/builder/Builder2.tsx":"9","/home/ma/git/OpenCV/src/components/templates/builder/Builder3.tsx":"10","/home/ma/git/OpenCV/src/services/HTTPContext.ts":"11","/home/ma/git/OpenCV/src/pages/SignUp.tsx":"12","/home/ma/git/OpenCV/src/pages/Signin.tsx":"13","/home/ma/git/OpenCV/src/pages/Home.tsx":"14","/home/ma/git/OpenCV/src/pages/Builder.tsx":"15","/home/ma/git/OpenCV/src/pages/Landing.tsx":"16","/home/ma/git/OpenCV/src/services/CommonFunctions.ts":"17","/home/ma/git/OpenCV/src/pages/MyTemplate.tsx":"18","/home/ma/git/OpenCV/src/components/templates/sections/Wrapper.tsx":"19","/home/ma/git/OpenCV/src/components/templates/sections/Education.tsx":"20","/home/ma/git/OpenCV/src/components/templates/sections/Experience.tsx":"21","/home/ma/git/OpenCV/src/components/templates/sections/Languages.tsx":"22","/home/ma/git/OpenCV/src/components/templates/sections/PersonalProfile.tsx":"23","/home/ma/git/OpenCV/src/components/templates/sections/Projects.tsx":"24","/home/ma/git/OpenCV/src/services/ApiKey.ts":"25","/home/ma/git/OpenCV/src/components/templates/sections/Contact.tsx":"26","/home/ma/git/OpenCV/src/pages/Token.tsx":"27","/home/ma/git/OpenCV/src/components/templates/sections/SideMenuSettings.tsx":"28","/home/ma/git/OpenCV/src/components/templates/properties/TemplateSteps.tsx":"29"},{"size":1488,"mtime":1630371215225,"results":"30","hashOfConfig":"31"},{"size":425,"mtime":1629493461614,"results":"32","hashOfConfig":"31"},{"size":3352,"mtime":1630455822674,"results":"33","hashOfConfig":"31"},{"size":1135,"mtime":1630469325339,"results":"34","hashOfConfig":"31"},{"size":332,"mtime":1630197822108,"results":"35","hashOfConfig":"31"},{"size":11883,"mtime":1630469035071,"results":"36","hashOfConfig":"31"},{"size":4100,"mtime":1630353052891,"results":"37","hashOfConfig":"31"},{"size":3208,"mtime":1630437919024,"results":"38","hashOfConfig":"31"},{"size":3094,"mtime":1630442615021,"results":"39","hashOfConfig":"31"},{"size":3490,"mtime":1630442568652,"results":"40","hashOfConfig":"31"},{"size":3554,"mtime":1630452766820,"results":"41","hashOfConfig":"31"},{"size":3543,"mtime":1630456986742,"results":"42","hashOfConfig":"31"},{"size":2433,"mtime":1630439420094,"results":"43","hashOfConfig":"31"},{"size":1851,"mtime":1630435967572,"results":"44","hashOfConfig":"31"},{"size":2405,"mtime":1630469360491,"results":"45","hashOfConfig":"31"},{"size":4226,"mtime":1630468822834,"results":"46","hashOfConfig":"31"},{"size":8096,"mtime":1630456365966,"results":"47","hashOfConfig":"31"},{"size":1309,"mtime":1630443122741,"results":"48","hashOfConfig":"31"},{"size":777,"mtime":1630437992405,"results":"49","hashOfConfig":"31"},{"size":1474,"mtime":1630438023741,"results":"50","hashOfConfig":"31"},{"size":1394,"mtime":1630438038279,"results":"51","hashOfConfig":"31"},{"size":1068,"mtime":1630469570347,"results":"52","hashOfConfig":"31"},{"size":751,"mtime":1630438055541,"results":"53","hashOfConfig":"31"},{"size":1292,"mtime":1630438063418,"results":"54","hashOfConfig":"31"},{"size":158,"mtime":1630454851815,"results":"55","hashOfConfig":"31"},{"size":1249,"mtime":1630437873677,"results":"56","hashOfConfig":"31"},{"size":1798,"mtime":1630456834034,"results":"57","hashOfConfig":"31"},{"size":5074,"mtime":1630468706567,"results":"58","hashOfConfig":"31"},{"size":3847,"mtime":1630466741442,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1t4fa4u",{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ma/git/OpenCV/src/index.tsx",[],["127","128"],"/home/ma/git/OpenCV/src/reportWebVitals.ts",[],"/home/ma/git/OpenCV/src/services/AppContext.tsx",["129"],"import React, { createContext, useReducer } from \"react\";\nimport CommonFuntions from \"./CommonFunctions\";\nimport AppReducer from \"../services/AppReducer\";\n\nconst GetUserInfo = () => {\n  const userInfoStorage = sessionStorage.getItem(\"info\");\n  let userInfo = {\n    userDetails: { id: \"\", username: \"\", email:\"\" },\n    userSettings: {\n      personal_details: {\n        text: \"\",\n        settings: {\n          fontSize: \"text-lg\",\n          textPosition: \"justify-start\",\n          textColor: \"#000000\",\n        },\n      },\n      education: {\n        sections: [],\n        settings: {\n          fontSize: \"text-lg\",\n          textPosition: \"justify-start\",\n          textColor: \"#000000\",\n        },\n      },\n      experience: {\n        sections: [],\n        settings: {\n          fontSize: \"text-lg\",\n          textPosition: \"justify-start\",\n          textColor: \"#000000\",\n        },\n      },\n      projects: {\n        text: \"\",\n        sections: [],\n        settings: {\n          fontSize: \"text-lg\",\n          textPosition: \"justify-start\",\n          textColor: \"#000000\",\n        },\n      },\n      languages: {\n        sections: [],\n        settings: {\n          fontSize: \"text-lg\",\n          textPosition: \"justify-start\",\n          textColor: \"#000000\",\n        },\n      },\n      contact: {\n        sections: [],\n        settings: {\n          fontSize: \"text-lg\",\n          textPosition: \"justify-start\",\n          textColor: \"#000000\",\n        },\n      },\n      templateIndex: 0,\n      published: false\n    },\n  };\n  if (userInfoStorage !== null) {\n    userInfo = JSON.parse(userInfoStorage);\n  }\n  return userInfo;\n};\n\nconst initialState = {\n  data: {\n    userDetails: GetUserInfo().userDetails,\n    userSettings: GetUserInfo().userSettings,\n    sectionIndex: \"\",\n    settingsModal: false,\n  },\n} as {\n  data: any;\n  updateData: (item: any) => void;\n  updateIndex: (item: string) => void;\n  updateSettingsModal: () => void;\n  updateTempIndex: (item: number) => void;\n  updateUserSettings: (item: any) => void;\n  updateUserDetails: (item: any) => void;\n};\n\nexport const GlobalContext = createContext(initialState);\n\nconst GlobalProvider = ({ ...props }: any) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  const updateData = (item: any) => {\n    dispatch({\n      type: \"UPDATE_DATA\",\n      payload: item,\n    });\n  };\n  const updateIndex = (item: any) => {\n    dispatch({\n      type: \"UPDATE_SECTION_INDEX\",\n      payload: item,\n    });\n  };\n  const updateTempIndex = (item: number) => {\n    dispatch({\n      type: \"UPDATE_TEMPLATE_INDEX\",\n      payload: item,\n    });\n  };\n  const updateSettingsModal = () => {\n    dispatch({\n      type: \"UPDATE_SETTINGS_MODAL\",\n      payload: !state.data.settingsModal,\n    });\n  };\n\n  const updateUserSettings = (item: any) => {\n    dispatch({\n      type: \"UPDATE_USER_SETTINGS\",\n      payload: item,\n    });\n  };\n\n  const updateUserDetails = (item: any) => {\n    dispatch({\n      type: \"UPDATE_USER_DETAILS\",\n      payload: item,\n    });\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        data: state.data,\n        updateData,\n        updateIndex,\n        updateSettingsModal,\n        updateTempIndex,\n        updateUserSettings,\n        updateUserDetails,\n      }}\n    >\n      {props.children}\n    </GlobalContext.Provider>\n  );\n};\nexport default GlobalProvider;\n","/home/ma/git/OpenCV/src/services/AppReducer.ts",["130"],"/home/ma/git/OpenCV/src/components/Modal.tsx",[],"/home/ma/git/OpenCV/src/components/templates/properties/Configurations.tsx",[],"/home/ma/git/OpenCV/src/components/templates/properties/Settings.tsx",[],"/home/ma/git/OpenCV/src/components/templates/builder/Builder1.tsx",[],"/home/ma/git/OpenCV/src/components/templates/builder/Builder2.tsx",[],"/home/ma/git/OpenCV/src/components/templates/builder/Builder3.tsx",[],"/home/ma/git/OpenCV/src/services/HTTPContext.ts",["131","132"],"import React, { useContext } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport const addUser = async (\n  username: string,\n  password: string,\n  email: string\n) => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      id: uuidv4(),\n      username: username,\n      password: password,\n      email: email,\n    }),\n  };\n  return await fetch(\"http://localhost:8000/users/\", requestOptions).then(\n    (response) => response.json()\n  );\n};\n\nexport const updateSettings = async () => {\n  let settings = {};\n  let id = \"\";\n  const userInfoStorage = sessionStorage.getItem(\"info\");\n  if (userInfoStorage !== null) {\n    settings = JSON.parse(userInfoStorage).userSettings;\n    id = JSON.parse(userInfoStorage).userDetails.id;\n  }\n  const requestOptions = {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(settings),\n  };\n  return await fetch(\n    \"http://localhost:8000/settings/\" + id,\n    requestOptions\n  ).then((response) => console.log(response.json()));\n};\n\nexport const addUserSettings = async (id: string) => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      id: id,\n      templateIndex: 1,\n      published: false,\n      personal_details: {\n        text: \"\",\n        settings: {\n          fontSize: \"text-lg\",\n          textPosition: \"justify-start\",\n          textColor: \"#000000\",\n        },\n      },\n      education: {\n        sections: [],\n        settings: {\n          fontSize: \"text-lg\",\n          textPosition: \"justify-start\",\n          textColor: \"#000000\",\n        },\n      },\n      experience: {\n        sections: [],\n        settings: {\n          fontSize: \"text-lg\",\n          textPosition: \"justify-start\",\n          textColor: \"#000000\",\n        },\n      },\n      projects: {\n        text: \"\",\n        sections: [],\n        settings: {\n          fontSize: \"text-lg\",\n          textPosition: \"justify-start\",\n          textColor: \"#000000\",\n        },\n      },\n      languages: {\n        sections: [],\n        settings: {\n          fontSize: \"text-lg\",\n          textPosition: \"justify-start\",\n          textColor: \"#000000\",\n        },\n      },\n      contact: {\n        sections: [],\n        settings: {\n          fontSize: \"text-lg\",\n          textPosition: \"justify-start\",\n          textColor: \"#000000\",\n        },\n      },\n    }),\n  };\n  return await fetch(\"http://localhost:8000/settings/\", requestOptions).then(\n    (response) => response.json()\n  );\n};\n\nexport const getUsers = async () => {\n  return await fetch(\"http://localhost:8000/users\").then((response) =>\n    response.json()\n  );\n};\n\nexport const getUserDetails = async (userId: string) => {\n  return await fetch(\"http://localhost:8000/users/\" + userId).then((response) =>\n    response.json()\n  );\n};\n\nexport const getUserSettings = async (userId: string) => {\n  return await fetch(\"http://localhost:8000/settings/\" + userId).then(\n    (response) => response.json()\n  );\n};\n\nexport const getUserInfo = async (userId: string) => {\n  let user = {\n    userDetails: {},\n    userSettings: { templateIndex: 0 },\n  };\n\n  await getUserDetails(userId).then((response) => {\n    user.userDetails = response;\n  });\n  await getUserSettings(userId).then((response) => {\n    user.userSettings = response;\n  });\n  return user;\n};\n","/home/ma/git/OpenCV/src/pages/SignUp.tsx",["133","134","135","136"],"import React from \"react\";\nimport { useContext } from \"react\";\nimport { useState } from \"react\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { GlobalContext } from \"../services/AppContext\";\nimport CommonFuntions from \"../services/CommonFunctions\";\nimport { addUser, getUsers, addUserSettings } from \"../services/HTTPContext\";\n\nconst SignUp = ({ ...props }) => {\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [messageError, setMessageError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const { SendEmail } = CommonFuntions();\n  const { data, updateUserDetails } = useContext(GlobalContext);\n  const { GenerateToken } = CommonFuntions();\n\n  const signUp = () => {\n    if (userName === \"\" || password === \"\" || confirmPassword === \"\") {\n      setMessageError(\"Please fill all fields\");\n      //to be modified\n    } else if (password.length > 8) {\n      setMessageError(\"Password length should be greater than 8\");\n    } else if (password !== confirmPassword) {\n      setMessageError(\"Passwords don't match\");\n    } else {\n      getUsers().then((response: any) => {\n        let list = response.filter((user: any) => user.email === email);\n        if (list.length === 0) {\n          GenerateToken();\n          const token = data.userDetails.token;\n          const toSend = {\n            from: \"OpenCv\",\n            email: email,\n            message: \"This is a message \" + token,\n          };\n          SendEmail(toSend);\n          updateUserDetails({\n            id: \"\",\n            userName: userName,\n            password: password,\n            email: email,\n            token: token,\n          });\n          setSuccessMessage(\"User Created Successfully\");\n        } else {\n          setMessageError(\"This email already in use. User another one\");\n        }\n      });\n    }\n  };\n\n  return (\n    <div>\n      <div className=\" rounded flex justify-center items-center\">\n        <div className=\"flex-col\">\n          <div className=\"text-red-500\">{messageError}</div>\n          <div className=\"text-green-500\">{successMessage}</div>\n          <div className=\"text-center\">\n            <input\n              className=\"rounded p-3 bg-white border-b-2\"\n              placeholder=\"UserName\"\n              type=\"text\"\n              name=\"username\"\n              onChange={(e) => setUserName(e.target.value)}\n            />\n            <input\n              className=\"rounded p-3 bg-white border-b-2\"\n              placeholder=\"Email\"\n              type=\"email\"\n              name=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <input\n              className=\"rounded p-3 bg-white border-b-2\"\n              placeholder=\"Password\"\n              type=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <input\n              className=\"rounded p-3 bg-white border-b-2\"\n              placeholder=\"Confirm Password\"\n              type=\"password\"\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n            <br />\n            <button\n              type=\"submit\"\n              className=\"rounded-full text-white p-3 w-full  bg-indigo-500\"\n              onClick={() => signUp()}\n            >\n              Submit\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUp;\n","/home/ma/git/OpenCV/src/pages/Signin.tsx",["137","138","139","140","141"],"import React, { useContext } from \"react\";\nimport { useState } from \"react\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { GlobalContext } from \"../services/AppContext\";\nimport { addUser, getUsers, getUserInfo } from \"../services/HTTPContext\";\nimport CommonFuntions from \"../services/CommonFunctions\";\n\nconst SignIn = ({ ...props }) => {\n  let { data, updateData, updateUserSettings, updateUserDetails } =\n    useContext(GlobalContext);\n\n  const { StoreUserInfo } = CommonFuntions();\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [messageError, setMessageError] = useState(\"\");\n  const signIn = () => {\n    if (userName === \"\" || password === \"\") {\n      setMessageError(\"Please fill all fields\");\n    } else {\n      getUsers().then((response) => {\n        let list = response.filter(\n          (user: any) =>\n            user.username === userName && user.password === password\n        );\n        if (list.length !== 0) {\n          getUserInfo(list[0].id)\n            .then((info) => {\n              console.log(info)\n              StoreUserInfo(info);\n              updateUserSettings(info.userSettings);\n              updateUserDetails(info.userDetails);\n            })\n            .then((final) => {\n              props.history.push(\"/home\");\n            });\n        } else {\n          setMessageError(\"User Not Found\");\n        }\n      });\n    }\n  };\n\n  return (\n    <div>\n      <div className=\" rounded flex justify-center items-center\">\n        <div className=\"flex-col\">\n          <div>\n            <div className=\"text-red-500\">{messageError}</div>\n            <input\n              className=\"rounded p-3 bg-white border-b-2\"\n              placeholder=\"UserName\"\n              type=\"text\"\n              onChange={(e) => setUserName(e.target.value)}\n            />\n          </div>\n          <div>\n            <input\n              className=\"rounded p-3 bg-white border-b-2\"\n              placeholder=\"Password\"\n              type=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n\n          <div className=\"p-3\">\n            <button\n              onClick={() => signIn()}\n              className=\"rounded-full text-white p-3 w-full  bg-indigo-500\"\n            >\n              Submit\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignIn;\n","/home/ma/git/OpenCV/src/pages/Home.tsx",["142"],"import React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Builder1 from \"../components/templates/builder/Builder1\";\nimport Builder2 from \"../components/templates/builder/Builder2\";\nimport Builder3 from \"../components/templates/builder/Builder3\";\nimport { GlobalContext } from \"../services/AppContext\";\n\nconst Home = () => {\n  const [index, setIndex] = useState(0);\n  const templatesArray = [<Builder1 />, <Builder2 />, <Builder3 />];\n  const { data, updateTempIndex } = useContext(GlobalContext);\n\n  const next = () => {\n    if (index + 1 < templatesArray.length) {\n      setIndex(index + 1);\n    }\n  };\n  const previous = () => {\n    if (index - 1 >= 0) {\n      setIndex(index - 1);\n    }\n  };\n  return (\n    <div className=\"pl-10 pr-10\">\n      <div className=\"grid grid-cols-12\">\n        <div className=\"col-span-4 flex items-center\">\n          <img src=\"logo.png\" className=\"w-1/4 h-1/2\" alt=\"\" />\n        </div>\n        <div className=\"col-span-5 flex items-center justify-start\">\n          <div className=\"flex items-center justify-start\">\n            <h1>Build Your CV Easily with OpenCV</h1>\n          </div>\n        </div>\n      </div>\n      <div className=\"grid grid-cols-12\">\n        <div\n          onClick={() => previous()}\n          className=\"col-span-2 cursor-pointer flex justify-center items-center text-2xl\"\n        >\n          {\"<\"}\n        </div>\n\n        <div className=\"col-span-8 cursor-pointer hover:bg-gray-300\">\n          <Link to=\"/builder\" onClick={() => updateTempIndex(index)}>\n            {templatesArray[index]}\n          </Link>\n        </div>\n        <div\n          onClick={() => next()}\n          className=\"col-span-2 cursor-pointer flex justify-center items-center text-2xl\"\n        >\n          {\">\"}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","/home/ma/git/OpenCV/src/pages/Builder.tsx",["143","144"],"/home/ma/git/OpenCV/src/pages/Landing.tsx",["145","146","147"],"/home/ma/git/OpenCV/src/services/CommonFunctions.ts",["148","149","150","151","152"],"import { useContext } from \"react\";\nimport { GlobalContext } from \"./AppContext\";\nimport { APIKEY } from \"../services/ApiKey\";\nimport emailjs from \"emailjs-com\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { addUser, getUsers, addUserSettings } from \"../services/HTTPContext\";\n\nconst CommonFuntions = () => {\n  let { data, updateData } = useContext(GlobalContext);\n  const AddExperience = () => {\n    let list = {\n      from: \"\",\n      to: \"\",\n      text: \"\",\n    };\n    data.userSettings[data.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const AddLanguage = () => {\n    data.userSettings[data.sectionIndex].sections.push(\"\");\n    updateData(data);\n  };\n\n  const AddContact = () => {\n    let list = {\n      title: \"\",\n      details: \"\",\n    };\n    data.userSettings[data.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const AddEducation = () => {\n    console.log(data);\n    let list = {\n      from: \"\",\n      to: \"\",\n      text: \"\",\n    };\n    data.userSettings[data.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n  const AddProject = () => {\n    let list = {\n      projectName: \"\",\n      projectDescription: \"\",\n    };\n    data.userSettings[data.sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const UpdateLanguage = (e: any, index: number) => {\n    data.userSettings[data.sectionIndex].sections[index] = e.target.value;\n    updateData(data);\n  };\n\n  const UpdateProjectName = (e: any, index: number) => {\n    data.userSettings[data.sectionIndex].sections[index].projectName =\n      e.target.value;\n    updateData(data);\n  };\n\n  const UpdateProjectDescription = (e: any, index: number) => {\n    data.userSettings[data.sectionIndex].sections[index].projectDescription =\n      e.target.value;\n    updateData(data);\n  };\n\n  const ModifyText = (event: any) => {\n    data.userSettings[data.sectionIndex].text = event.target.value;\n    updateData(data);\n  };\n  const UpdateFromSection = (e: any, index: number) => {\n    data.userSettings[data.sectionIndex].sections[index].from = e.target.value;\n    updateData(data);\n    console.log(data);\n  };\n  const UpdateToSection = (e: any, index: number) => {\n    data.userSettings[data.sectionIndex].sections[index].to = e.target.value;\n    updateData(data);\n  };\n  const UpdateTextSection = (e: any, index: number) => {\n    data.userSettings[data.sectionIndex].sections[index].text = e.target.value;\n    updateData(data);\n  };\n  const DeleteSection = (index: number) => {\n    data.userSettings[data.sectionIndex].sections.splice(index, 1);\n    updateData(data);\n  };\n  const UpdateContactTitleSection = (e: any, index: number) => {\n    data.userSettings[data.sectionIndex].sections[index].title = e.target.value;\n    updateData(data);\n  };\n  const UpdateContactDetailsSection = (e: any, index: number) => {\n    data.userSettings[data.sectionIndex].sections[index].details =\n      e.target.value;\n    updateData(data);\n  };\n  const CheckSections = (sectionName: string) => {\n    let enable: boolean = false;\n    data.userSettings[sectionName].sections.map((section: any, index: any) => {\n      if (!enable) {\n        if (section.to !== \"\" && section.from !== \"\" && section.text !== \"\") {\n          enable = true;\n        }\n      }\n    });\n    return enable;\n  };\n\n  const UpdateSettings = (settings: any) => {\n    data[\"userSettings\"] = settings;\n    updateData(data);\n  };\n\n  const UpdateUser = (userDetails: any) => {\n    data[\"userDetails\"] = userDetails;\n    updateData(data);\n  };\n\n  const CheckProjectsStatus = () => {\n    let enable: boolean = false;\n    data.userSettings[\"projects\"].sections.map((section: any, index: any) => {\n      if (!enable) {\n        if (section.projectName !== \"\" && section.projectDescription !== \"\") {\n          enable = true;\n        }\n      }\n    });\n    return enable;\n  };\n\n  const CheckSectionTextStatus = (sectionName: string) => {\n    let enable: boolean = false;\n    data.userSettings[sectionName].sections.map((text: any, index: any) => {\n      if (!enable && text !== \"\") {\n        enable = true;\n      }\n    });\n    return enable;\n  };\n\n  const StoreUserInfo = (info: any) => {\n    sessionStorage.setItem(\"info\", JSON.stringify(info));\n  };\n\n  const GetUserInfo = () => {\n    const userInfoStorage = sessionStorage.getItem(\"info\");\n    let userInfo = {\n      userDetails: { id: \"\", username: \"\" },\n      userSettings: { templateIndex: -1, published: false },\n    };\n    if (userInfoStorage !== null) {\n      userInfo = JSON.parse(userInfoStorage);\n    }\n    return userInfo;\n  };\n\n  const Logout = () => {\n    sessionStorage.removeItem(\"info\");\n  };\n\n  const PublishTemplate = () => {\n    data.userSettings.published = true;\n    updateData(data);\n  };\n\n  const UnpublishTemplate = () => {\n    data.userSettings.published = false;\n    updateData(data);\n  };\n\n  const UpdateTemplateVersion = (index: number) => {\n    data.userSettings.templateIndex = index;\n    updateData(data);\n  };\n\n  const AutoFill = () => {\n    ClearCV();\n    data.userSettings.personal_details.text =\n      \"I recently graduated with a bachelor’s degree in mathematics, majoring in statistics and analytics. I have experience working in the financial sector by way of an internship with a major multinational firm, which has helped me develop technical capabilities in data engineering and science. I have consistently proven my ability to meet deadlines and achieve project objectives, solve mission-critical problems and prioritize crucial tasks while maintaining the high standards expected of my role. I am currently seeking a position in an established data science firm to further my career goals\";\n    data.userSettings.experience.sections.push({\n      from: \"2020-01-01\",\n      to: \"2021-01-01\",\n      text: \"Experience 1\",\n    });\n\n    data.userSettings.education.sections.push({\n      from: \"2020-01-01\",\n      to: \"2021-01-01\",\n      text: \"Education 1\",\n    });\n    data.userSettings.projects.text =\n      \"This is a description for all my projects\";\n    data.userSettings.projects.sections.push({\n      projectName: \"Project1\",\n      projectDescription: \"Project Description 1\",\n    });\n    data.userSettings.languages.sections.push(\"Arabic\");\n    data.userSettings.languages.sections.push(\"English\");\n    data.userSettings.contact.sections.push({\n      title: \"Facebook\",\n      details: \"www.facebook.com\",\n    });\n\n    updateData(data);\n  };\n\n  const GenerateToken = () => {\n    let token = uuidv4();\n    let done = true;\n    getUsers().then((response) => {\n      while (!done) {\n        let list = response.filter((user: any) => user.token === token);\n        if (list.length === 0) {\n          done = true;\n        }\n      }\n      data.userDetails.token = token;\n      updateData(data);\n    });\n  };\n\n  const ClearCV = () => {\n    data.userSettings.personal_details.text = \"\";\n    data.userSettings.experience.sections = [];\n    data.userSettings.education.sections = [];\n    data.userSettings.languages.sections = [];\n    data.userSettings.projects.sections = [];\n    data.userSettings.contact.sections = [];\n\n    updateData(data);\n  };\n\n  const SendEmail = (toSend: any) => {\n    emailjs\n      .send(APIKEY.SERVICE_ID, APIKEY.TEMPLATE_ID, toSend, APIKEY.USER_ID)\n      .then(\n        function (response) {\n          console.log(\"SUCCESS!\", response.status, response.text);\n        },\n        function (error) {\n          console.log(\"FAILED...\", error);\n        }\n      );\n  };\n\n  return {\n    AddExperience,\n    AddLanguage,\n    AddProject,\n    AddEducation,\n    UpdateLanguage,\n    UpdateProjectName,\n    UpdateProjectDescription,\n    ModifyText,\n    UpdateFromSection,\n    UpdateToSection,\n    UpdateTextSection,\n    DeleteSection,\n    AddContact,\n    UpdateContactTitleSection,\n    UpdateContactDetailsSection,\n    CheckSections,\n    CheckProjectsStatus,\n    CheckSectionTextStatus,\n    UpdateSettings,\n    UpdateUser,\n    StoreUserInfo,\n    GetUserInfo,\n    Logout,\n    PublishTemplate,\n    AutoFill,\n    ClearCV,\n    UpdateTemplateVersion,\n    UnpublishTemplate,\n    SendEmail,\n    GenerateToken\n  } as const;\n};\n\nexport default CommonFuntions;\n","/home/ma/git/OpenCV/src/pages/MyTemplate.tsx",["153","154"],"import React, { useContext } from \"react\";\nimport Builder1 from \"../components/templates/builder/Builder1\";\nimport Builder2 from \"../components/templates/builder/Builder2\";\nimport Builder3 from \"../components/templates/builder/Builder3\";\nimport { GlobalContext } from \"../services/AppContext\";\nimport CommonFuntions from \"../services/CommonFunctions\";\nimport { getUserInfo } from \"../services/HTTPContext\";\n\nconst MyTemplate = ({ ...props }: any) => {\n  const { StoreUserInfo, GetUserInfo, Logout } = CommonFuntions();\n  const id = props.match.params.id;\n  let templateIndex = -1;\n  let published = false;\n  getUserInfo(id).then((response) => {\n    Logout();\n\n    if (response.userSettings) {\n      console.log(response);\n      StoreUserInfo(response);\n    }\n  });\n  if (GetUserInfo().userSettings) {\n    published = GetUserInfo().userSettings.published;\n  }\n  if (published) {\n    templateIndex = GetUserInfo().userSettings.templateIndex;\n  }\n  return published ? (\n    templateIndex === 0 ? (\n      <Builder1 debug={true} />\n    ) : templateIndex === 1 ? (\n      <Builder2 debug={true} />\n    ) : templateIndex === 2 ? (\n      <Builder3 debug={true} />\n    ) : (\n      <span>This CV is not published yet</span>\n    )\n  ) : (\n    <span>This CV is not published yet</span>\n  );\n};\n\nexport default MyTemplate;\n","/home/ma/git/OpenCV/src/components/templates/sections/Wrapper.tsx",[],"/home/ma/git/OpenCV/src/components/templates/sections/Education.tsx",[],"/home/ma/git/OpenCV/src/components/templates/sections/Experience.tsx",[],"/home/ma/git/OpenCV/src/components/templates/sections/Languages.tsx",[],"/home/ma/git/OpenCV/src/components/templates/sections/PersonalProfile.tsx",[],"/home/ma/git/OpenCV/src/components/templates/sections/Projects.tsx",[],"/home/ma/git/OpenCV/src/services/ApiKey.ts",[],"/home/ma/git/OpenCV/src/components/templates/sections/Contact.tsx",[],"/home/ma/git/OpenCV/src/pages/Token.tsx",["155","156","157","158","159","160","161","162","163"],"import React, { useContext } from \"react\";\nimport { useState } from \"react\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { GlobalContext } from \"../services/AppContext\";\nimport {\n  addUser,\n  getUsers,\n  getUserInfo,\n  addUserSettings,\n} from \"../services/HTTPContext\";\nimport CommonFuntions from \"../services/CommonFunctions\";\n\nconst Token = ({ ...props }) => {\n  let { data, updateData, updateUserSettings, updateUserDetails } =\n    useContext(GlobalContext);\n\n  const { StoreUserInfo } = CommonFuntions();\n  const [token, setToken] = useState(\"\");\n  const [messageError, setMessageError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const sendToken = () => {\n    if (data.userDetails.token === token) {\n      addUser(\n        data.userDetails.userName,\n        data.userDetails.password,\n        data.userDetails.email\n      ).then((response) => {\n        addUserSettings(response.id);\n      });\n      setSuccessMessage(\"User added\");\n    } else {\n      setMessageError(\"Token is wrong\");\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"rounded flex justify-center items-center\">\n        <div className=\"flex-col\">\n          <div>\n            <div className=\"text-red-500\">{messageError}</div>\n            <input\n              className=\"rounded p-3 bg-white border-b-2\"\n              placeholder=\"Token\"\n              type=\"text\"\n              onChange={(e) => setToken(e.target.value)}\n            />\n          </div>\n\n          <div className=\"p-3\">\n            <button\n              onClick={() => sendToken()}\n              className=\"rounded-full text-white p-3 w-full  bg-indigo-500\"\n            >\n              Submit\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Token;\n","/home/ma/git/OpenCV/src/components/templates/sections/SideMenuSettings.tsx",["164","165","166","167","168","169","170","171","172","173","174","175"],"/home/ma/git/OpenCV/src/components/templates/properties/TemplateSteps.tsx",[],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":2,"column":8,"nodeType":"182","messageId":"183","endLine":2,"endColumn":22},{"ruleId":"180","severity":1,"message":"181","line":1,"column":8,"nodeType":"182","messageId":"183","endLine":1,"endColumn":22},{"ruleId":"180","severity":1,"message":"184","line":1,"column":8,"nodeType":"182","messageId":"183","endLine":1,"endColumn":13},{"ruleId":"180","severity":1,"message":"185","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":27},{"ruleId":"180","severity":1,"message":"186","line":4,"column":10,"nodeType":"182","messageId":"183","endLine":4,"endColumn":18},{"ruleId":"180","severity":1,"message":"187","line":4,"column":20,"nodeType":"182","messageId":"183","endLine":4,"endColumn":30},{"ruleId":"180","severity":1,"message":"188","line":7,"column":10,"nodeType":"182","messageId":"183","endLine":7,"endColumn":17},{"ruleId":"180","severity":1,"message":"189","line":7,"column":29,"nodeType":"182","messageId":"183","endLine":7,"endColumn":44},{"ruleId":"180","severity":1,"message":"186","line":3,"column":10,"nodeType":"182","messageId":"183","endLine":3,"endColumn":18},{"ruleId":"180","severity":1,"message":"187","line":3,"column":20,"nodeType":"182","messageId":"183","endLine":3,"endColumn":30},{"ruleId":"180","severity":1,"message":"188","line":5,"column":10,"nodeType":"182","messageId":"183","endLine":5,"endColumn":17},{"ruleId":"180","severity":1,"message":"190","line":9,"column":9,"nodeType":"182","messageId":"183","endLine":9,"endColumn":13},{"ruleId":"180","severity":1,"message":"191","line":9,"column":15,"nodeType":"182","messageId":"183","endLine":9,"endColumn":25},{"ruleId":"180","severity":1,"message":"190","line":11,"column":11,"nodeType":"182","messageId":"183","endLine":11,"endColumn":15},{"ruleId":"180","severity":1,"message":"181","line":9,"column":8,"nodeType":"182","messageId":"183","endLine":9,"endColumn":22},{"ruleId":"180","severity":1,"message":"192","line":10,"column":10,"nodeType":"182","messageId":"183","endLine":10,"endColumn":24},{"ruleId":"180","severity":1,"message":"193","line":8,"column":8,"nodeType":"182","messageId":"183","endLine":8,"endColumn":13},{"ruleId":"180","severity":1,"message":"194","line":14,"column":10,"nodeType":"182","messageId":"183","endLine":14,"endColumn":22},{"ruleId":"180","severity":1,"message":"195","line":14,"column":24,"nodeType":"182","messageId":"183","endLine":14,"endColumn":41},{"ruleId":"180","severity":1,"message":"188","line":6,"column":10,"nodeType":"182","messageId":"183","endLine":6,"endColumn":17},{"ruleId":"180","severity":1,"message":"189","line":6,"column":29,"nodeType":"182","messageId":"183","endLine":6,"endColumn":44},{"ruleId":"196","severity":1,"message":"197","line":102,"column":76,"nodeType":"198","messageId":"199","endLine":102,"endColumn":78},{"ruleId":"196","severity":1,"message":"197","line":124,"column":75,"nodeType":"198","messageId":"199","endLine":124,"endColumn":77},{"ruleId":"196","severity":1,"message":"197","line":136,"column":73,"nodeType":"198","messageId":"199","endLine":136,"endColumn":75},{"ruleId":"180","severity":1,"message":"185","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":27},{"ruleId":"180","severity":1,"message":"200","line":5,"column":10,"nodeType":"182","messageId":"183","endLine":5,"endColumn":23},{"ruleId":"180","severity":1,"message":"186","line":3,"column":10,"nodeType":"182","messageId":"183","endLine":3,"endColumn":18},{"ruleId":"180","severity":1,"message":"187","line":3,"column":20,"nodeType":"182","messageId":"183","endLine":3,"endColumn":30},{"ruleId":"180","severity":1,"message":"201","line":7,"column":3,"nodeType":"182","messageId":"183","endLine":7,"endColumn":11},{"ruleId":"180","severity":1,"message":"202","line":8,"column":3,"nodeType":"182","messageId":"183","endLine":8,"endColumn":14},{"ruleId":"180","severity":1,"message":"191","line":14,"column":15,"nodeType":"182","messageId":"183","endLine":14,"endColumn":25},{"ruleId":"180","severity":1,"message":"203","line":14,"column":27,"nodeType":"182","messageId":"183","endLine":14,"endColumn":45},{"ruleId":"180","severity":1,"message":"204","line":14,"column":47,"nodeType":"182","messageId":"183","endLine":14,"endColumn":64},{"ruleId":"180","severity":1,"message":"205","line":17,"column":11,"nodeType":"182","messageId":"183","endLine":17,"endColumn":24},{"ruleId":"180","severity":1,"message":"206","line":20,"column":10,"nodeType":"182","messageId":"183","endLine":20,"endColumn":24},{"ruleId":"180","severity":1,"message":"207","line":6,"column":8,"nodeType":"182","messageId":"183","endLine":6,"endColumn":18},{"ruleId":"180","severity":1,"message":"208","line":17,"column":10,"nodeType":"182","messageId":"183","endLine":17,"endColumn":17},{"ruleId":"180","severity":1,"message":"209","line":17,"column":19,"nodeType":"182","messageId":"183","endLine":17,"endColumn":29},{"ruleId":"180","severity":1,"message":"210","line":18,"column":11,"nodeType":"182","messageId":"183","endLine":18,"endColumn":22},{"ruleId":"180","severity":1,"message":"211","line":18,"column":24,"nodeType":"182","messageId":"183","endLine":18,"endColumn":43},{"ruleId":"212","severity":1,"message":"213","line":42,"column":11,"nodeType":"214","endLine":45,"endColumn":13},{"ruleId":"212","severity":1,"message":"213","line":54,"column":13,"nodeType":"214","endLine":57,"endColumn":15},{"ruleId":"212","severity":1,"message":"213","line":62,"column":11,"nodeType":"214","endLine":65,"endColumn":13},{"ruleId":"212","severity":1,"message":"213","line":90,"column":13,"nodeType":"214","endLine":93,"endColumn":15},{"ruleId":"212","severity":1,"message":"213","line":104,"column":15,"nodeType":"214","endLine":107,"endColumn":17},{"ruleId":"212","severity":1,"message":"213","line":118,"column":15,"nodeType":"214","endLine":121,"endColumn":17},{"ruleId":"212","severity":1,"message":"213","line":130,"column":11,"nodeType":"214","endLine":133,"endColumn":13},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"@typescript-eslint/no-unused-vars","'CommonFuntions' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","'useContext' is defined but never used.","'Redirect' is defined but never used.","'useHistory' is defined but never used.","'addUser' is defined but never used.","'addUserSettings' is defined but never used.","'data' is assigned a value but never used.","'updateData' is assigned a value but never used.","'updateSettings' is defined but never used.","'Token' is defined but never used.","'visibleToken' is assigned a value but never used.","'setVisiblityToken' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'GlobalContext' is defined but never used.","'getUsers' is defined but never used.","'getUserInfo' is defined but never used.","'updateUserSettings' is assigned a value but never used.","'updateUserDetails' is assigned a value but never used.","'StoreUserInfo' is assigned a value but never used.","'successMessage' is assigned a value but never used.","'classNames' is defined but never used.","'visible' is assigned a value but never used.","'setVisible' is assigned a value but never used.","'updateIndex' is assigned a value but never used.","'updateSettingsModal' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]