[{"/home/ma/git/OpenCV/src/index.tsx":"1","/home/ma/git/OpenCV/src/reportWebVitals.ts":"2","/home/ma/git/OpenCV/src/services/AppContext.tsx":"3","/home/ma/git/OpenCV/src/services/AppReducer.ts":"4","/home/ma/git/OpenCV/src/components/Modal.tsx":"5","/home/ma/git/OpenCV/src/services/HTTPContext.ts":"6","/home/ma/git/OpenCV/src/pages/SignUp.tsx":"7","/home/ma/git/OpenCV/src/pages/Signin.tsx":"8","/home/ma/git/OpenCV/src/pages/Builder.tsx":"9","/home/ma/git/OpenCV/src/pages/Landing.tsx":"10","/home/ma/git/OpenCV/src/services/CommonFunctions.ts":"11","/home/ma/git/OpenCV/src/pages/MyTemplate.tsx":"12","/home/ma/git/OpenCV/src/services/ApiKey.ts":"13","/home/ma/git/OpenCV/src/pages/Token.tsx":"14","/home/ma/git/OpenCV/src/components/inputs/DropDownMenu.tsx":"15","/home/ma/git/OpenCV/src/pages/UserProfile.tsx":"16","/home/ma/git/OpenCV/src/components/Layout.tsx":"17","/home/ma/git/OpenCV/src/components/templates/Builder1.tsx":"18","/home/ma/git/OpenCV/src/components/templates/Builder2.tsx":"19","/home/ma/git/OpenCV/src/components/builder/TemplateSteps.tsx":"20","/home/ma/git/OpenCV/src/components/builder/BuilderBody.tsx":"21","/home/ma/git/OpenCV/src/components/properties/Configurations.tsx":"22","/home/ma/git/OpenCV/src/components/properties/Settings.tsx":"23","/home/ma/git/OpenCV/src/components/templates/Builder3.tsx":"24","/home/ma/git/OpenCV/src/components/helper/SideMenu.tsx":"25","/home/ma/git/OpenCV/src/components/sections/Education.tsx":"26","/home/ma/git/OpenCV/src/components/sections/Experience.tsx":"27","/home/ma/git/OpenCV/src/components/sections/Languages.tsx":"28","/home/ma/git/OpenCV/src/components/sections/Projects.tsx":"29","/home/ma/git/OpenCV/src/components/sections/PersonalProfile.tsx":"30","/home/ma/git/OpenCV/src/components/sections/Skills.tsx":"31","/home/ma/git/OpenCV/src/pages/Dashboard.tsx":"32","/home/ma/git/OpenCV/src/components/dashboard/DashboardBody.tsx":"33","/home/ma/git/OpenCV/src/components/builder/BuilderSettings.tsx":"34","/home/ma/git/OpenCV/src/components/sections/PersonalInformation.tsx":"35","/home/ma/git/OpenCV/src/components/builder/AddSection.tsx":"36","/home/ma/git/OpenCV/src/components/sections/AdditionalSections.tsx":"37"},{"size":1627,"mtime":1630964563029,"results":"38","hashOfConfig":"39"},{"size":425,"mtime":1629493461614,"results":"40","hashOfConfig":"39"},{"size":3919,"mtime":1631169763705,"results":"41","hashOfConfig":"39"},{"size":1427,"mtime":1631122068495,"results":"42","hashOfConfig":"39"},{"size":331,"mtime":1630957075973,"results":"43","hashOfConfig":"39"},{"size":6472,"mtime":1630975200170,"results":"44","hashOfConfig":"39"},{"size":4344,"mtime":1630537933637,"results":"45","hashOfConfig":"39"},{"size":2572,"mtime":1630951992611,"results":"46","hashOfConfig":"39"},{"size":1356,"mtime":1631139161095,"results":"47","hashOfConfig":"39"},{"size":4512,"mtime":1631128606084,"results":"48","hashOfConfig":"39"},{"size":11211,"mtime":1631170468181,"results":"49","hashOfConfig":"39"},{"size":1632,"mtime":1630796444931,"results":"50","hashOfConfig":"39"},{"size":158,"mtime":1630454851815,"results":"51","hashOfConfig":"39"},{"size":1743,"mtime":1630798052406,"results":"52","hashOfConfig":"39"},{"size":1998,"mtime":1631158284534,"results":"53","hashOfConfig":"39"},{"size":593,"mtime":1631139149723,"results":"54","hashOfConfig":"39"},{"size":1743,"mtime":1631139136651,"results":"55","hashOfConfig":"39"},{"size":3797,"mtime":1631165838659,"results":"56","hashOfConfig":"39"},{"size":3628,"mtime":1631165855823,"results":"57","hashOfConfig":"39"},{"size":4799,"mtime":1631166325912,"results":"58","hashOfConfig":"39"},{"size":2123,"mtime":1631166300936,"results":"59","hashOfConfig":"39"},{"size":15633,"mtime":1631167747191,"results":"60","hashOfConfig":"39"},{"size":4265,"mtime":1631308708600,"results":"61","hashOfConfig":"39"},{"size":4076,"mtime":1631165878291,"results":"62","hashOfConfig":"39"},{"size":1082,"mtime":1630964869833,"results":"63","hashOfConfig":"39"},{"size":2549,"mtime":1631123112222,"results":"64","hashOfConfig":"39"},{"size":2470,"mtime":1631123134474,"results":"65","hashOfConfig":"39"},{"size":2143,"mtime":1631123231127,"results":"66","hashOfConfig":"39"},{"size":2361,"mtime":1631123208176,"results":"67","hashOfConfig":"39"},{"size":1809,"mtime":1631123020589,"results":"68","hashOfConfig":"39"},{"size":2288,"mtime":1631123168393,"results":"69","hashOfConfig":"39"},{"size":262,"mtime":1630964686605,"results":"70","hashOfConfig":"39"},{"size":11976,"mtime":1631160946561,"results":"71","hashOfConfig":"39"},{"size":5505,"mtime":1631168101531,"results":"72","hashOfConfig":"39"},{"size":3470,"mtime":1631166291200,"results":"73","hashOfConfig":"39"},{"size":2443,"mtime":1631167994375,"results":"74","hashOfConfig":"39"},{"size":6104,"mtime":1631171109944,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1t4fa4u",{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ma/git/OpenCV/src/index.tsx",[],["159","160"],"/home/ma/git/OpenCV/src/reportWebVitals.ts",[],"/home/ma/git/OpenCV/src/services/AppContext.tsx",[],"/home/ma/git/OpenCV/src/services/AppReducer.ts",[],"/home/ma/git/OpenCV/src/components/Modal.tsx",[],"/home/ma/git/OpenCV/src/services/HTTPContext.ts",["161","162","163"],"import React, { useContext } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { GlobalContext } from \"./AppContext\";\n\nexport const addUser = async (\n  username: string,\n  password: string,\n  email: string,\n  token: string,\n  verified: boolean\n) => {\n  const id = uuidv4();\n  const body = {\n    id: id,\n    username: username,\n    password: password,\n    email: email,\n    token: token,\n    verified: verified,\n  };\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  };\n  return await fetch(\"http://localhost:8000/users/\", requestOptions).then(\n    (response) => response.json()\n  );\n};\n\nexport const addTemplate = async (\n  userID: string,\n  templateIndex: string,\n  templateName: string\n) => {\n  const id = uuidv4();\n  const body = {\n    id: id,\n    userID: userID,\n    templateIndex: templateIndex,\n    templateName: templateName,\n  };\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  };\n  await addTemplateSettings(id);\n  return await fetch(\"http://localhost:8000/templates/\", requestOptions).then(\n    (response) => JSON.stringify(body)\n  );\n};\n\nexport const updateUser = async (\n  id: string,\n  username: string,\n  password: string,\n  email: string,\n  token: string,\n  verified: boolean\n) => {\n  const body = {\n    id: id,\n    username: username,\n    password: password,\n    email: email,\n    token: token,\n    verified: verified,\n  };\n  const requestOptions = {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  };\n  return await fetch(\"http://localhost:8000/users/\" + id, requestOptions).then(\n    (response) => response.json()\n  );\n};\n\nexport const updateTemplate = async (body: any) => {\n  const requestOptions = {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  };\n  return await fetch(\n    \"http://localhost:8000/templates/\" + body.id,\n    requestOptions\n  ).then((response) => response.json());\n};\n\nexport const deleteTemplate = async (id: any) => {\n  const requestOptions = {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  await deleteSettings(id);\n\n  return await fetch(\n    \"http://localhost:8000/templates/\" + id,\n    requestOptions\n  ).then((response) => response.json());\n};\n\nexport const deleteSettings = async (templateId: any) => {\n  const requestOptions = {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  return await fetch(\n    \"http://localhost:8000/templates/templateId=\" + templateId,\n    requestOptions\n  ).then((response) => response.json());\n};\n\nexport const updateSettings = async (data: any) => {\n  const settings = data.settings;\n\n  const requestOptions = {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(settings),\n  };\n  return await fetch(\n    \"http://localhost:8000/settings/\" + data.settings.id,\n    requestOptions\n  ).then((response) => console.log(response.json()));\n};\n\nexport const addTemplateSettings = async (templateId: string) => {\n  const id = uuidv4();\n\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      id: id,\n      templateId: templateId,\n      personal_details: {\n        text: \"\",\n        settings: {\n          fontSize: \"text-lg\",\n          textPosition: \"justify-start\",\n          textColor: \"#000000\",\n        },\n      },\n      education: {\n        sections: [],\n        settings: {\n          fontSize: \"text-lg\",\n          textPosition: \"justify-start\",\n          textColor: \"#000000\",\n        },\n      },\n      experience: {\n        sections: [],\n        settings: {\n          fontSize: \"text-lg\",\n          textPosition: \"justify-start\",\n          textColor: \"#000000\",\n        },\n      },\n      skills: {\n        sections: [],\n        settings: {\n          fontSize: \"text-lg\",\n          textPosition: \"justify-start\",\n          textColor: \"#000000\",\n        },\n      },\n      projects: {\n        text: \"\",\n        sections: [],\n        settings: {\n          fontSize: \"text-lg\",\n          textPosition: \"justify-start\",\n          textColor: \"#000000\",\n        },\n      },\n      languages: {\n        sections: [],\n        settings: {\n          fontSize: \"text-lg\",\n          textPosition: \"justify-start\",\n          textColor: \"#000000\",\n        },\n      },\n      personal_info: {\n        info: {\n          phoneNumber: \"\",\n          email: \"\",\n          name: \"\",\n        },\n        sections: [],\n        settings: {\n          fontSize: \"text-lg\",\n          textPosition: \"justify-start\",\n          textColor: \"#000000\",\n        },\n      },\n    }),\n  };\n  return await fetch(\"http://localhost:8000/settings/\", requestOptions).then(\n    (response) => response.json()\n  );\n};\n\nexport const getUsers = async () => {\n  return await fetch(\"http://localhost:8000/users\").then((response) =>\n    response.json()\n  );\n};\n\nexport const getUserDetails = async (userId: string) => {\n  return await fetch(\"http://localhost:8000/users/\" + userId).then((response) =>\n    response.json()\n  );\n};\n\nexport const getUserTemplates = async (userId: string) => {\n  return await fetch(\"http://localhost:8000/templates?userID=\" + userId).then(\n    (response) => response.json()\n  );\n};\n\nexport const getTemplateSettings = async (templateId: string) => {\n  return await fetch(\n    \"http://localhost:8000/settings?templateId=\" + templateId\n  ).then((response) => response.json());\n};\n\nexport const getUserSettings = async (userId: string) => {\n  return await fetch(\"http://localhost:8000/settings/\" + userId).then(\n    (response) => response.json()\n  );\n};\n\nexport const getUserInfo = async (userId: string) => {\n  let user = {\n    userDetails: {},\n    userTemplates: [],\n  };\n\n  await getUserDetails(userId).then((response) => {\n    user.userDetails = response;\n  });\n\n  await getUserTemplates(userId).then((response) => {\n    user.userTemplates = response;\n  });\n  return user;\n};\n","/home/ma/git/OpenCV/src/pages/SignUp.tsx",["164","165"],"import React from \"react\";\nimport { useContext } from \"react\";\nimport { useState } from \"react\";\nimport { GlobalContext } from \"../services/AppContext\";\nimport CommonFuntions from \"../services/CommonFunctions\";\nimport { addUser, getUsers } from \"../services/HTTPContext\";\n\nconst SignUp = ({ ...props }) => {\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [messageError, setMessageError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const { SendEmail } = CommonFuntions();\n  const { data, updateUserDetails } = useContext(GlobalContext);\n  const { GenerateToken } = CommonFuntions();\n\n  const signUp = () => {\n    var pattern = new RegExp(\n      /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\n    );\n    if (!pattern.test(email)) {\n      setMessageError(\"Email Error\");\n    } else if (userName === \"\" || password === \"\" || confirmPassword === \"\") {\n      setMessageError(\"Please fill all fields\");\n      //to be modified\n    } else if (password.length > 8) {\n      setMessageError(\"Password length should be greater than 8\");\n    } else if (password !== confirmPassword) {\n      setMessageError(\"Passwords don't match\");\n    } else {\n      getUsers().then((response: any) => {\n        let list = response.filter((user: any) => user.email === email);\n        if (list.length === 0) {\n          GenerateToken();\n          const token = data.userDetails.token;\n          console.log(token);\n          addUser(userName, password, email, token, false).then((user) => {\n            const toSend = {\n              from: \"OpenCv\",\n              email: email,\n              message: \"This is a message \" + token,\n            };\n            // SendEmail(toSend);\n            updateUserDetails({\n              id: JSON.parse(JSON.stringify(user)).id,\n              username: userName,\n              password: password,\n              email: email,\n              token: token,\n              verified: false,\n            });\n          });\n          setSuccessMessage(\"User Created Successfully\");\n        } else if (list[0].verified === 0) {\n          setMessageError(\n            \"This email already in use but not verified. User another one\"\n          );\n        } else {\n          setMessageError(\"This email already in use. User another one\");\n        }\n      });\n    }\n  };\n\n  return (\n    <div>\n      <div className=\" rounded flex justify-center items-center\">\n        <div className=\"flex-col\">\n          <div className=\"text-red-500\">{messageError}</div>\n          <div className=\"text-green-500\">{successMessage}</div>\n          <div className=\"text-center\">\n            <input\n              className=\"rounded p-3 bg-white border-b-2\"\n              placeholder=\"UserName\"\n              type=\"text\"\n              name=\"username\"\n              required\n              onChange={(e) => setUserName(e.target.value)}\n            />\n            <input\n              className=\"rounded p-3 bg-white border-b-2\"\n              placeholder=\"Email\"\n              type=\"email\"\n              name=\"email\"\n              required\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <input\n              className=\"rounded p-3 bg-white border-b-2\"\n              placeholder=\"Password\"\n              type=\"password\"\n              required\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <input\n              className=\"rounded p-3 bg-white border-b-2\"\n              placeholder=\"Confirm Password\"\n              type=\"password\"\n              required\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n            <br />\n            <button\n              type=\"submit\"\n              className=\"rounded-full text-white p-3 w-full  bg-indigo-500\"\n              onClick={() => signUp()}\n            >\n              Submit\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUp;\n","/home/ma/git/OpenCV/src/pages/Signin.tsx",["166","167","168"],"import React, { useContext } from \"react\";\nimport { useState } from \"react\";\nimport { GlobalContext } from \"../services/AppContext\";\nimport { getUsers, getUserInfo } from \"../services/HTTPContext\";\nimport CommonFuntions from \"../services/CommonFunctions\";\n\nconst SignIn = ({ ...props }) => {\n  let { data, updateUserDetails, updateTemplates } = useContext(GlobalContext);\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [messageError, setMessageError] = useState(\"\");\n  const signIn = () => {\n    if (email === \"\" || password === \"\") {\n      setMessageError(\"Please fill all fields\");\n    } else {\n      getUsers().then((response) => {\n        let list = response.filter(\n          (user: any) => user.email === email && user.password === password\n        );\n        if (list.length !== 0) {\n          getUserInfo(list[0].id)\n            .then((info) => {\n              console.log(info);\n              let list: any = [];\n              info.userTemplates.map((t: any, index) => {\n                let templateInfo = {\n                  id: t.id,\n                  name: t.templateName,\n                };\n                list.push(templateInfo);\n              });\n              updateTemplates(list);\n              updateUserDetails(info.userDetails);\n            })\n            .then((final) => {\n              sessionStorage.setItem(\"OpenCVId\", list[0].id);\n              props.history.push(\"/dashboard\");\n            });\n        } else {\n          setMessageError(\"User Not Found\");\n        }\n      });\n    }\n  };\n\n  return (\n    <div>\n      <div className=\" rounded flex justify-center items-center\">\n        <div className=\"flex-col\">\n         \n          <div>\n            <div className=\"text-red-500\">{messageError}</div>\n            <input\n              className=\"rounded p-3 bg-white border-b-2\"\n              placeholder=\"Email\"\n              type=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div>\n            <input\n              className=\"rounded p-3 bg-white border-b-2\"\n              placeholder=\"Password\"\n              type=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n\n          <div className=\"p-3\">\n            <button\n              onClick={() => signIn()}\n              className=\"rounded-full text-white p-3 w-full  bg-indigo-500\"\n            >\n              Submit\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignIn;\n","/home/ma/git/OpenCV/src/pages/Builder.tsx",["169","170","171"],"import React, { useContext } from \"react\";\nimport Modal from \"../components/Modal\";\nimport Configurations from \"../components/properties/Configurations\";\nimport Settings from \"../components/properties/Settings\";\nimport { GlobalContext } from \"../services/AppContext\";\nimport CommonFuntions from \"../services/CommonFunctions\";\nimport TemplateSteps from \"../components/builder/TemplateSteps\";\nimport Layout from \"../components/Layout\";\nimport BuilderSideMenu from \"../components/builder/BuilderSettings\";\nimport BuilderBody from \"../components/builder/BuilderBody\";\n\nconst Builder = () => {\n  const { InitializeUser } = CommonFuntions();\n  InitializeUser();\n  const { Header, Body } = Configurations();\n  const { updateBuilderSectionIndex, updateSettingsModal, data } =\n    useContext(GlobalContext);\n  const modifyTemplateVisibility = () => {\n    updateBuilderSectionIndex(\"\");\n  };\n \n\n  return (\n    <>\n      <Layout\n        pageName=\"Builder\"\n        body={<BuilderBody />}\n        sideMenu={<BuilderSideMenu />}\n      />\n      <div className=\"flex-col z-0\">\n        <div className=\"flex items-center\">\n          <Modal\n            Header={Header}\n            Body={Body}\n            visible={data.builderSectionIndex !== \"\"}\n            onClick={modifyTemplateVisibility}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Builder;\n","/home/ma/git/OpenCV/src/pages/Landing.tsx",[],"/home/ma/git/OpenCV/src/services/CommonFunctions.ts",["172","173","174","175","176"],"/home/ma/git/OpenCV/src/pages/MyTemplate.tsx",["177","178","179","180","181"],"import React from \"react\";\nimport { useContext } from \"react\";\nimport { useState } from \"react\";\nimport Builder1 from \"../components/templates/Builder1\";\nimport Builder2 from \"../components/templates/Builder2\";\nimport Builder3 from \"../components/templates/Builder3\";\nimport { GlobalContext } from \"../services/AppContext\";\nimport CommonFuntions from \"../services/CommonFunctions\";\nimport { getUserInfo } from \"../services/HTTPContext\";\n\nconst MyTemplate = ({ ...props }: any) => {\n  const { Logout } = CommonFuntions();\n  const { data, updateData } = useContext(GlobalContext);\n  const id = props.match.params.id;\n  let templateIndex = -1;\n  let published = false;\n  getUserInfo(id).then((response) => {\n \n  });\n  //console.log(data)\n  if (data.userSettings) {\n    published = data.userSettings.published;\n  }\n  if (published) {\n    templateIndex = data.userSettings.templateIndex;\n  }\n  return published ? (\n    templateIndex === 0 ? (\n      <Builder1 debug={true} />\n    ) : templateIndex === 1 ? (\n      <Builder2 debug={true} />\n    ) : templateIndex === 2 ? (\n      <Builder3 debug={true} />\n    ) : (\n      <span>\n        This CV is not published yet or not ready. Try to\n        <span onClick={() => window.location.reload()}>\n          {\" \"}\n          <a className=\"text-blue-500 cursor-pointer\">Refresh</a>\n        </span>{\" \"}\n      </span>\n    )\n  ) : (\n    <span>\n      This CV is not published yet or not ready. Try to\n      <span onClick={() => window.location.reload()}>\n        {\" \"}\n        <a className=\"text-blue-500 cursor-pointer\">Refresh</a>\n      </span>{\" \"}\n    </span>\n  );\n};\n\nexport default MyTemplate;\n","/home/ma/git/OpenCV/src/services/ApiKey.ts",[],"/home/ma/git/OpenCV/src/pages/Token.tsx",["182"],"import React, { useContext } from \"react\";\nimport { useState } from \"react\";\nimport { GlobalContext } from \"../services/AppContext\";\nimport { updateUser } from \"../services/HTTPContext\";\nimport CommonFuntions from \"../services/CommonFunctions\";\n\nconst Token = ({ ...props }) => {\n  let { data, updateUserDetails } = useContext(GlobalContext);\n  const [token, setToken] = useState(\"\");\n  const [messageError, setMessageError] = useState(\"\");\n  const sendToken = () => {\n    if (data.userDetails.token === token) {\n      //addUserSettings(data.userDetails.id);\n      data.userDetails.verified = true;\n      data.userDetails.token = \"\";\n      updateUserDetails(data.userDetails);\n      sessionStorage.setItem(\"OpenCVId\", data.userDetails.id);\n      updateUser(data.userDetails.id, data.userDetails.username,data.userDetails.password,data.userDetails.email,data.userDetails.token,data.userDetails.verified);\n      window.location.reload();\n    } else {\n      setMessageError(\"Token is wrong\");\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"rounded flex justify-center items-center\">\n        <div className=\"flex-col\">\n          <div>\n            <div className=\"text-red-500\">{messageError}</div>\n            <input\n              className=\"rounded p-3 bg-white border-b-2\"\n              placeholder=\"Token\"\n              type=\"text\"\n              onChange={(e) => setToken(e.target.value)}\n            />\n          </div>\n\n          <div className=\"p-3\">\n            <button\n              onClick={() => sendToken()}\n              className=\"rounded-full text-white p-3 w-full  bg-indigo-500\"\n            >\n              Submit\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Token;\n","/home/ma/git/OpenCV/src/components/inputs/DropDownMenu.tsx",[],"/home/ma/git/OpenCV/src/pages/UserProfile.tsx",["183","184","185","186"],"import React from \"react\";\nimport Wrapper from \"../components/builder/BuilderBody\";\nimport CommonFuntions from \"../services/CommonFunctions\";\nimport TemplateSteps from \"../components/builder/TemplateSteps\";\n\nimport Layout from \"../components/Layout\";\nimport { hostname } from \"os\";\n\nconst UserProfile = () => {\n  const { InitializeUser } = CommonFuntions();\n  InitializeUser();\n\n  const header = (\n    <div className=\"flex h-full text-2xl items-center text-white\">\n      <span>User Profile</span>\n    </div>\n  );\n\n  return <Layout pageName={\"User Profile\"} />;\n};\n\nexport default UserProfile;\n","/home/ma/git/OpenCV/src/components/Layout.tsx",[],"/home/ma/git/OpenCV/src/components/templates/Builder1.tsx",["187"],"/home/ma/git/OpenCV/src/components/templates/Builder2.tsx",["188"],"/home/ma/git/OpenCV/src/components/builder/TemplateSteps.tsx",[],"/home/ma/git/OpenCV/src/components/builder/BuilderBody.tsx",[],"/home/ma/git/OpenCV/src/components/properties/Configurations.tsx",["189","190","191","192"],"/home/ma/git/OpenCV/src/components/properties/Settings.tsx",["193"],"/home/ma/git/OpenCV/src/components/templates/Builder3.tsx",["194"],"/home/ma/git/OpenCV/src/components/helper/SideMenu.tsx",["195","196","197","198"],"import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../../services/AppContext\";\nimport CommonFuntions from \"../../services/CommonFunctions\";\nimport { updateSettings } from \"../../services/HTTPContext\";\nimport { Link } from \"react-router-dom\";\n\nconst SideMenu = () => {\n  return (\n    <div className=\"flex  justify-start items-center\">\n      <div className=\"flex-col w-full divide-y-2 gap-x-2 h-full justify-end items-center\">\n        <div className=\"cursor-pointer flex items-center hover:bg-gray-500 text-white p-3  bg-indigo-500\">\n          <Link\n            to=\"/dashboard\"\n            className=\"text-white text-center w-full no-underline\"\n          >\n            Dashboard\n          </Link>\n        </div>\n\n        <div className=\"cursor-pointer flex items-center hover:bg-gray-500 text-white p-3  bg-indigo-500\">\n          <Link\n            to=\"/user_profile\"\n            className=\"text-white text-center w-full no-underline\"\n          >\n            User Profile\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default SideMenu;\n","/home/ma/git/OpenCV/src/components/sections/Education.tsx",[],"/home/ma/git/OpenCV/src/components/sections/Experience.tsx",[],"/home/ma/git/OpenCV/src/components/sections/Languages.tsx",[],"/home/ma/git/OpenCV/src/components/sections/Projects.tsx",[],"/home/ma/git/OpenCV/src/components/sections/PersonalProfile.tsx",[],"/home/ma/git/OpenCV/src/components/sections/Skills.tsx",[],"/home/ma/git/OpenCV/src/pages/Dashboard.tsx",[],"/home/ma/git/OpenCV/src/components/dashboard/DashboardBody.tsx",[],"/home/ma/git/OpenCV/src/components/builder/BuilderSettings.tsx",["199","200","201","202","203","204","205","206"],"/home/ma/git/OpenCV/src/components/sections/PersonalInformation.tsx",[],"/home/ma/git/OpenCV/src/components/builder/AddSection.tsx",["207"],"/home/ma/git/OpenCV/src/components/sections/AdditionalSections.tsx",[],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":1,"column":8,"nodeType":"214","messageId":"215","endLine":1,"endColumn":13},{"ruleId":"212","severity":1,"message":"216","line":1,"column":17,"nodeType":"214","messageId":"215","endLine":1,"endColumn":27},{"ruleId":"212","severity":1,"message":"217","line":3,"column":10,"nodeType":"214","messageId":"215","endLine":3,"endColumn":23},{"ruleId":"212","severity":1,"message":"218","line":15,"column":11,"nodeType":"214","messageId":"215","endLine":15,"endColumn":20},{"ruleId":"212","severity":1,"message":"219","line":40,"column":19,"nodeType":"214","messageId":"215","endLine":40,"endColumn":25},{"ruleId":"212","severity":1,"message":"220","line":5,"column":8,"nodeType":"214","messageId":"215","endLine":5,"endColumn":22},{"ruleId":"212","severity":1,"message":"221","line":8,"column":9,"nodeType":"214","messageId":"215","endLine":8,"endColumn":13},{"ruleId":"222","severity":1,"message":"223","line":26,"column":54,"nodeType":"224","messageId":"225","endLine":26,"endColumn":56},{"ruleId":"212","severity":1,"message":"226","line":4,"column":8,"nodeType":"214","messageId":"215","endLine":4,"endColumn":16},{"ruleId":"212","severity":1,"message":"227","line":7,"column":8,"nodeType":"214","messageId":"215","endLine":7,"endColumn":21},{"ruleId":"212","severity":1,"message":"228","line":16,"column":38,"nodeType":"214","messageId":"215","endLine":16,"endColumn":57},{"ruleId":"222","severity":1,"message":"223","line":126,"column":72,"nodeType":"224","messageId":"225","endLine":126,"endColumn":74},{"ruleId":"222","severity":1,"message":"223","line":148,"column":71,"nodeType":"224","messageId":"225","endLine":148,"endColumn":73},{"ruleId":"222","severity":1,"message":"223","line":168,"column":69,"nodeType":"224","messageId":"225","endLine":168,"endColumn":71},{"ruleId":"212","severity":1,"message":"229","line":176,"column":9,"nodeType":"214","messageId":"215","endLine":176,"endColumn":34},{"ruleId":"222","severity":1,"message":"223","line":287,"column":52,"nodeType":"224","messageId":"225","endLine":287,"endColumn":54},{"ruleId":"212","severity":1,"message":"230","line":3,"column":10,"nodeType":"214","messageId":"215","endLine":3,"endColumn":18},{"ruleId":"212","severity":1,"message":"231","line":12,"column":11,"nodeType":"214","messageId":"215","endLine":12,"endColumn":17},{"ruleId":"212","severity":1,"message":"232","line":13,"column":17,"nodeType":"214","messageId":"215","endLine":13,"endColumn":27},{"ruleId":"233","severity":1,"message":"234","line":39,"column":11,"nodeType":"235","endLine":39,"endColumn":55},{"ruleId":"233","severity":1,"message":"234","line":48,"column":9,"nodeType":"235","endLine":48,"endColumn":53},{"ruleId":"212","severity":1,"message":"220","line":5,"column":8,"nodeType":"214","messageId":"215","endLine":5,"endColumn":22},{"ruleId":"212","severity":1,"message":"236","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":15},{"ruleId":"212","severity":1,"message":"227","line":4,"column":8,"nodeType":"214","messageId":"215","endLine":4,"endColumn":21},{"ruleId":"212","severity":1,"message":"237","line":7,"column":10,"nodeType":"214","messageId":"215","endLine":7,"endColumn":18},{"ruleId":"212","severity":1,"message":"238","line":13,"column":9,"nodeType":"214","messageId":"215","endLine":13,"endColumn":15},{"ruleId":"212","severity":1,"message":"239","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":15},{"ruleId":"212","severity":1,"message":"239","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":15},{"ruleId":"212","severity":1,"message":"228","line":6,"column":17,"nodeType":"214","messageId":"215","endLine":6,"endColumn":36},{"ruleId":"212","severity":1,"message":"232","line":6,"column":38,"nodeType":"214","messageId":"215","endLine":6,"endColumn":48},{"ruleId":"240","severity":1,"message":"241","line":45,"column":6,"nodeType":"242","endLine":45,"endColumn":32,"suggestions":"243"},{"ruleId":"222","severity":1,"message":"244","line":390,"column":69,"nodeType":"224","messageId":"245","endLine":390,"endColumn":71},{"ruleId":"212","severity":1,"message":"246","line":8,"column":10,"nodeType":"214","messageId":"215","endLine":8,"endColumn":17},{"ruleId":"212","severity":1,"message":"239","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":15},{"ruleId":"212","severity":1,"message":"216","line":1,"column":17,"nodeType":"214","messageId":"215","endLine":1,"endColumn":27},{"ruleId":"212","severity":1,"message":"217","line":2,"column":10,"nodeType":"214","messageId":"215","endLine":2,"endColumn":23},{"ruleId":"212","severity":1,"message":"220","line":3,"column":8,"nodeType":"214","messageId":"215","endLine":3,"endColumn":22},{"ruleId":"212","severity":1,"message":"247","line":4,"column":10,"nodeType":"214","messageId":"215","endLine":4,"endColumn":24},{"ruleId":"212","severity":1,"message":"248","line":5,"column":10,"nodeType":"214","messageId":"215","endLine":5,"endColumn":14},{"ruleId":"249","severity":1,"message":"250","line":43,"column":9,"nodeType":"235","endLine":46,"endColumn":11},{"ruleId":"249","severity":1,"message":"250","line":54,"column":11,"nodeType":"235","endLine":57,"endColumn":13},{"ruleId":"249","severity":1,"message":"250","line":62,"column":9,"nodeType":"235","endLine":65,"endColumn":11},{"ruleId":"249","severity":1,"message":"250","line":116,"column":11,"nodeType":"235","endLine":119,"endColumn":13},{"ruleId":"249","severity":1,"message":"250","line":128,"column":11,"nodeType":"235","endLine":131,"endColumn":13},{"ruleId":"249","severity":1,"message":"250","line":140,"column":11,"nodeType":"235","endLine":143,"endColumn":13},{"ruleId":"249","severity":1,"message":"250","line":151,"column":9,"nodeType":"235","endLine":154,"endColumn":11},{"ruleId":"212","severity":1,"message":"251","line":4,"column":8,"nodeType":"214","messageId":"215","endLine":4,"endColumn":13},"no-native-reassign",["252"],"no-negated-in-lhs",["253"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'GlobalContext' is defined but never used.","'SendEmail' is assigned a value but never used.","'toSend' is assigned a value but never used.","'CommonFuntions' is defined but never used.","'data' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Settings' is defined but never used.","'TemplateSteps' is defined but never used.","'updateSettingsModal' is assigned a value but never used.","'CheckPersonalInfoSections' is assigned a value but never used.","'useState' is defined but never used.","'Logout' is assigned a value but never used.","'updateData' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Wrapper' is defined but never used.","'hostname' is defined but never used.","'header' is assigned a value but never used.","'Contact' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data.settings.added_sections'. Either include it or remove the dependency array.","ArrayExpression",["254"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'visible' is assigned a value but never used.","'updateSettings' is defined but never used.","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Modal' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"255","fix":"256"},"Update the dependencies array to be: [data.builderSectionIndex, data.settings.added_sections]",{"range":"257","text":"258"},[1203,1229],"[data.builderSectionIndex, data.settings.added_sections]"]