{"version":3,"sources":["reportWebVitals.ts","services/AppReducer.ts","services/AppContext.tsx","components/CommonFunctions.ts","components/Contact.tsx","components/Education.tsx","components/Experience.tsx","components/Languages.tsx","components/PersonalProfile.tsx","components/Projects.tsx","components/templates/builder/Builder1.tsx","components/templates/builder/Builder2.tsx","Home.tsx","components/Modal.tsx","components/templates/properties/Configurations.tsx","components/templates/properties/Settings.tsx","components/templates/properties/SideMenu.tsx","components/Wrapper.tsx","Builder.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AppReducer","state","action","type","data","temp","sectionIndex","payload","tempIndex","templateIndex","tempList","settingsModal","initialState","personal_details","text","settings","fontSize","textPosition","textColor","education","sections","experience","projects","languages","contact","GlobalContext","createContext","GlobalProvider","props","useReducer","dispatch","Provider","value","updateData","item","updateIndex","updateSettingsModal","updateTempIndex","children","CommonFuntions","useContext","AddExperience","push","from","to","AddLanguage","AddProject","projectName","projectDescription","AddEducation","UpdateLanguage","e","index","target","UpdateProjectName","UpdateProjectDescription","ModifyText","event","UpdateFromSection","console","log","UpdateToSection","UpdateTextSection","DeleteSection","splice","AddContact","title","details","UpdateContactTitleSection","UpdateContactDetailsSection","CheckSections","sectionName","enable","map","section","CheckProjectsStatus","CheckSectionTextStatus","Contact","className","showTitle","style","color","Education","Experience","Languages","PersonalProfile","Projects","Builder1","debug","Builder2","Home","useState","setIndex","templatesArray","onClick","length","MyModal","Modal","show","visible","onHide","Header","closeButton","Body","Configurations","toUpperCase","replace","xmlns","fill","viewBox","stroke","strokeWidth","d","onChange","placeholder","Settings","fontSizeArray","isVisible","setSettings","useEffect","SettingsHeader","SettingsBody","indexOf","disabled","readOnly","hex","SideMenu","updateTemplateIndex","condition","classNames","Wrapper","Builder","src","alt","customHistory","createBrowserHistory","ReactDOM","render","history","path","component","exact","document","getElementById"],"mappings":"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","file":"static/js/main.ebbd4100.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const AppReducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_DATA\":\n      return {\n        data: state.data,\n      };\n    case \"UPDATE_SECTION_INDEX\":\n      let temp = state.data;\n      temp.sectionIndex = action.payload;\n      return {\n        data: temp,\n      };\n    case \"UPDATE_TEMPLATE_INDEX\":\n      let tempIndex = state.data;\n      tempIndex.templateIndex = action.payload;\n      return {\n        data: tempIndex,\n      };\n    case \"UPDATE_SETTINGS_MODAL\":\n      let tempList = state.data;\n      tempList.settingsModal = action.payload;\n      return {\n        data: tempList,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default AppReducer;\n","import React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"../services/AppReducer\";\n\nconst initialState = {\n  data: {\n    personal_details: {\n      text: \"\",\n      settings: {\n        fontSize: \"text-2xl\",\n        textPosition: \"justify-start\",\n        textColor: \"#000000\",\n      },\n    },\n\n    education: {\n      sections: [],\n      settings: {\n        fontSize: \"text-lg\",\n        textPosition: \"justify-start\",\n        textColor: \"#000000\",\n      },\n    },\n\n    experience: {\n      sections: [],\n      settings: {\n        fontSize: \"text-lg\",\n        textPosition: \"justify-start\",\n        textColor: \"#000000\",\n      },\n    },\n\n    projects: {\n      text: \"\",\n      sections: [],\n      settings: {\n        fontSize: \"text-lg\",\n        textPosition: \"justify-start\",\n        textColor: \"#000000\",\n      },\n    },\n    languages: {\n      sections: [],\n      settings: {\n        fontSize: \"text-lg\",\n        textPosition: \"justify-start\",\n        textColor: \"#000000\",\n      },\n    },\n    contact: {\n      sections: [],\n      settings: {\n        fontSize: \"text-lg\",\n        textPosition: \"justify-start\",\n        textColor: \"#000000\",\n      },\n    },\n\n    sectionIndex: \"\",\n    settingsModal: false,\n    templateIndex: 1,\n  },\n} as {\n  data: any;\n  updateData: (item: any) => void;\n  updateIndex: (item: string) => void;\n  updateSettingsModal: () => void;\n  updateTempIndex: (item:number) => void;\n  sectionIndex: string;\n  settingsModal: boolean;\n  templateIndex: number;\n};\n\nexport const GlobalContext = createContext(initialState);\n\nconst GlobalProvider = ({ ...props }: any) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  const updateData = (item: any) => {\n    dispatch({\n      type: \"UPDATE_DATA\",\n      payload: item,\n    });\n  };\n  const updateIndex = (item: any) => {\n    dispatch({\n      type: \"UPDATE_SECTION_INDEX\",\n      payload: item,\n    });\n  };\n  const updateTempIndex = (item: number) => {\n    dispatch({\n      type: \"UPDATE_TEMPLATE_INDEX\",\n      payload: item,\n    });\n  };\n  const updateSettingsModal = () => {\n    dispatch({\n      type: \"UPDATE_SETTINGS_MODAL\",\n      payload: !state.data.settingsModal,\n    });\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        data: state.data,\n        updateData,\n        updateIndex,\n        updateSettingsModal,\n        updateTempIndex,\n        sectionIndex: state.data.sectionIndex,\n        settingsModal: state.data.settingsModal,\n        templateIndex: state.data.templateIndex,\n      }}\n    >\n      {props.children}\n    </GlobalContext.Provider>\n  );\n};\nexport default GlobalProvider;\n","import { useContext } from \"react\";\nimport { GlobalContext } from \"../services/AppContext\";\n\nconst CommonFuntions = () => {\n  const { data, updateData, sectionIndex } = useContext(GlobalContext);\n\n  const AddExperience = () => {\n    let list = {\n      from: \"\",\n      to: \"\",\n      text: \"\",\n    };\n    data[sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const AddLanguage = () => {\n    data[sectionIndex].sections.push(\"\");\n    updateData(data);\n  };\n\n  const AddContact = () => {\n    let list = {\n      title: \"\",\n      details: \"\",\n    };\n    data[sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const AddEducation = () => {\n    let list = {\n      from: \"\",\n      to: \"\",\n      text: \"\",\n    };\n    data[sectionIndex].sections.push(list);\n    updateData(data);\n  };\n  const AddProject = () => {\n    let list = {\n      projectName: \"\",\n      projectDescription: \"\",\n    };\n    data[sectionIndex].sections.push(list);\n    updateData(data);\n  };\n\n  const UpdateLanguage = (e: any, index: number) => {\n    data[sectionIndex].sections[index] = e.target.value;\n    updateData(data);\n  };\n\n  const UpdateProjectName = (e: any, index: number) => {\n    data[sectionIndex].sections[index].projectName = e.target.value;\n    updateData(data);\n  };\n\n  const UpdateProjectDescription = (e: any, index: number) => {\n    data[sectionIndex].sections[index].projectDescription = e.target.value;\n    updateData(data);\n  };\n\n  const ModifyText = (event: any) => {\n    data[sectionIndex].text = event.target.value;\n    updateData(data);\n  };\n  const UpdateFromSection = (e: any, index: number) => {\n    data[sectionIndex].sections[index].from = e.target.value;\n    updateData(data);\n    console.log(data);\n  };\n  const UpdateToSection = (e: any, index: number) => {\n    data[sectionIndex].sections[index].to = e.target.value;\n    updateData(data);\n  };\n  const UpdateTextSection = (e: any, index: number) => {\n    data[sectionIndex].sections[index].text = e.target.value;\n    updateData(data);\n  };\n  const DeleteSection = (index: number) => {\n    console.log(index);\n    data[sectionIndex].sections.splice(index, 1);\n    updateData(data);\n  };\n  const UpdateContactTitleSection = (e: any, index: number) => {\n    data[sectionIndex].sections[index].title = e.target.value;\n    updateData(data);\n  };\n  const UpdateContactDetailsSection = (e: any, index: number) => {\n    data[sectionIndex].sections[index].details = e.target.value;\n    updateData(data);\n  };\n  const CheckSections = (sectionName: string) => {\n    let enable: boolean = false;\n    data[sectionName].sections.map((section: any, index: any) => {\n      if (!enable) {\n        if (section.to !== \"\" && section.from !== \"\" && section.text !== \"\") {\n          enable = true;\n        }\n      }\n    });\n    return enable;\n  };\n\n  const CheckProjectsStatus = () => {\n    let enable: boolean = false;\n    data[\"projects\"].sections.map((section: any, index: any) => {\n      if (!enable) {\n        if (section.projectName !== \"\" && section.projectDescription !== \"\") {\n          enable = true;\n        }\n      }\n    });\n    return enable;\n  };\n\n  const CheckSectionTextStatus = (sectionName: string) => {\n    let enable: boolean = false;\n    data[sectionName].sections.map((text: any, index: any) => {\n      if (!enable && text !== \"\") {\n        enable = true;\n      }\n    });\n    return enable;\n  };\n\n  return {\n    AddExperience,\n    AddLanguage,\n    AddProject,\n    AddEducation,\n    UpdateLanguage,\n    UpdateProjectName,\n    UpdateProjectDescription,\n    ModifyText,\n    UpdateFromSection,\n    UpdateToSection,\n    UpdateTextSection,\n    DeleteSection,\n    AddContact,\n    UpdateContactTitleSection,\n    UpdateContactDetailsSection,\n    CheckSections,\n    CheckProjectsStatus,\n    CheckSectionTextStatus,\n  } as const;\n};\n\nexport default CommonFuntions;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../services/AppContext\";\nimport CommonFuntions from \"./CommonFunctions\";\n\nconst Contact = ({ ...props }) => {\n  const { data } = useContext(GlobalContext);\n  const { CheckSectionTextStatus } = CommonFuntions();\n  return CheckSectionTextStatus(\"contact\") ? (\n    <div className=\"flex-col\">\n      {props.showTitle && <div>Contact</div>}\n\n      {data.contact.sections.map((section: any, index: number) => {\n        return (\n          <div\n            key={\"educ\" + index}\n            style={{ color: data.contact.settings.textColor }}\n            className={\n              data.contact.settings.fontSize +\n              \" flex \" +\n              data.contact.settings.textPosition\n            }\n          >\n            <div className=\"flex-col gap-y-3\">\n              <div className=\"flex\">\n                <span className=\"\">{section.title}</span>\n                {section.title !== \"\" && <span>: </span>}\n                <span className=\"\">{section.details}</span>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  ) : (\n    <></>\n  );\n};\n\nexport default Contact;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../services/AppContext\";\nimport CommonFuntions from \"./CommonFunctions\";\n\nconst Education = () => {\n  const { data } = useContext(GlobalContext);\n  const { CheckSections} =\n  CommonFuntions();\n\n  return CheckSections('education') ? (\n    <div className=\"flex-col\">\n      <div>Education</div>\n\n      {\n        \n      data.education.sections.map((section: any, index: number) => {\n        return (\n          <div\n            key={\"educ\" + index}\n            style={{ color: data.education.settings.textColor }}\n            className={\n              data.education.settings.fontSize +\n              \" flex \" +\n              data.education.settings.textPosition\n            }\n          >\n            <div className=\"mr-1\">\n              {index +1}.\n              </div>\n            <div className=\"flex-col gap-y-3\">\n              <div className=\"flex\">\n                <div>\n                  <span className=\"\">{section.from}</span>\n                  {section.from !== \"\" && <span> into </span>}\n                  <span className=\"\">{section.to}</span>\n                </div>\n              </div>\n              <div>\n                <span className=\"\">{section.text}</span>\n              </div>\n            </div>\n          </div>\n        );\n      })\n      \n      }\n    </div>\n  ) : (\n    <></>\n  );\n};\n\nexport default Education;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../services/AppContext\";\nimport CommonFuntions from \"./CommonFunctions\";\n\nconst Experience = () => {\n  const { data } = useContext(GlobalContext);\n  const { CheckSections } = CommonFuntions();\n  return CheckSections(\"experience\") ? (\n    <div className=\"flex-col\">\n      <div>Experience</div>\n\n      {data.experience.sections.map((section: any, index: number) => {\n        return (\n          <div\n            key={\"ex\" + index}\n            style={{ color: data.experience.settings.textColor }}\n            className={\n              data.experience.settings.fontSize +\n              \" flex \" +\n              data.experience.settings.textPosition\n            }\n          >\n            <div className=\"mr-1\">{index + 1}.</div>\n            <div className=\"flex-col gap-y-3\">\n              <div className=\"flex\">\n                <div>\n                  <span className=\"\">{section.from}</span>\n                  <span> into </span>\n                  <span className=\"\">{section.to}</span>\n                </div>\n              </div>\n              <div>\n                <span className=\"\">{section.text}</span>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  ) : (\n    <></>\n  );\n};\n\nexport default Experience;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../services/AppContext\";\nimport CommonFuntions from \"./CommonFunctions\";\n\nconst Languages = () => {\n  const { data } = useContext(GlobalContext);\n  const { CheckSectionTextStatus } = CommonFuntions();\n  return CheckSectionTextStatus(\"languages\") ? (\n    <div className=\"flex-col\">\n      <div>Languages</div>\n      {data.languages.sections.map((text: string, index: number) => {\n        return (\n          <div\n            key={\"language\" + index}\n            style={{ color: data.projects.settings.textColor }}\n            className={\n              data.projects.settings.fontSize +\n              \" flex \" +\n              data.projects.settings.textPosition\n            }\n          >\n            <div className=\"mr-1\">{index + 1}.</div>\n            <div className=\"flex-col gap-y-3\">\n              <div className=\"flex-col\">{text}</div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  ) : (\n    <></>\n  );\n};\n\nexport default Languages;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../services/AppContext\";\n\nconst PersonalProfile = () => {\n  const { data } = useContext(GlobalContext);\n  return (\n    data.personal_details.text !== \"\" ? (\n      <div className=\"flex-col\">\n        <div>Personal Profile</div>\n        <div\n          style={{ color: data.personal_details.settings.textColor }}\n          className={\n            data.personal_details.settings.fontSize +\n            \" flex \" +\n            data.personal_details.settings.textPosition\n          }\n        >\n          {data.personal_details.text}\n        </div>\n      </div>\n    ) : <></>\n  );\n};\n\nexport default PersonalProfile;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../services/AppContext\";\nimport CommonFuntions from \"./CommonFunctions\";\n\nconst Projects = () => {\n  const { data } = useContext(GlobalContext);\n  const { CheckProjectsStatus } = CommonFuntions();\n  return CheckProjectsStatus() ? (\n    <div className=\"flex-col\">\n      <div>Projects</div>\n      <div>{data.projects.text}</div>\n      {data.projects.sections.map((section: any, index: number) => {\n        return (\n          <div\n            key={\"project\" + index}\n            style={{ color: data.projects.settings.textColor }}\n            className={\n              data.projects.settings.fontSize +\n              \" flex \" +\n              data.projects.settings.textPosition\n            }\n          >\n            <div className=\"mr-1\">{index + 1}.</div>\n            <div className=\"flex-col gap-y-3\">\n              <div className=\"flex-col\">\n                <span className=\"\">{section.projectName}</span>\n\n                <span className=\"\">{section.projectDescription}</span>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  ) : (\n    <></>\n  );\n};\n\nexport default Projects;\n","import React from \"react\";\nimport Contact from \"../../Contact\";\nimport Education from \"../../Education\";\nimport Experience from \"../../Experience\";\nimport Languages from \"../../Languages\";\nimport PersonalProfile from \"../../PersonalProfile\";\nimport Projects from \"../../Projects\";\n\nconst Builder1 = ({ ...props }) => {\n  return (\n    <div className=\"grid grid-cols-12\">\n      <div className=\"col-span-2 h-screen text-white bg-gray-700\">\n        {props.debug ? (\n          <div className=\"p-3 flex-col\">\n            <Contact showTitle={true} />\n          </div>\n        ) : (\n          <div className=\"p-3 flex-col\">\n            <span>Contact</span>\n            <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n            <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n            <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n          </div>\n        )}\n        {props.debug ? (\n          <div className=\"p-3 flex-col\">\n            <Languages />\n          </div>\n        ) : (\n          <div className=\"p-3 flex-col\">\n            <span>Langauges</span>\n            <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n            <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n            <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n          </div>\n        )}\n      </div>\n      <div className=\"col-span-10 h-screen text-black\">\n        {props.debug ? (\n          <div className=\"p-3 flex-col\">\n            <PersonalProfile />\n          </div>\n        ) : (\n          <div className=\"p-3 flex-col\">\n            <span>Personal Profile</span>\n            <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n            <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n            <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n          </div>\n        )}\n\n        {props.debug ? (\n          <div className=\"p-3 flex-col\">\n            <Education />\n          </div>\n        ) : (\n          <div className=\"p-3 flex-col\">\n            <span>Education</span>\n            <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n            <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n            <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n          </div>\n        )}\n\n        {props.debug ? (\n          <div className=\"p-3 flex-col\">\n            <Projects />\n          </div>\n        ) : (\n          <div className=\"p-3 flex-col\">\n            <span>Projects</span>\n            <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n            <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n            <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n          </div>\n        )}\n\n        {props.debug ? (\n          <div className=\"p-3 flex-col\">\n            <Experience />\n          </div>\n        ) : (\n          <div className=\"p-3 flex-col\">\n            <span>Experience</span>\n\n            <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n            <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n            <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Builder1;\n","import React from \"react\";\nimport Contact from \"../../Contact\";\nimport Education from \"../../Education\";\nimport Experience from \"../../Experience\";\nimport Languages from \"../../Languages\";\nimport PersonalProfile from \"../../PersonalProfile\";\nimport Projects from \"../../Projects\";\n\nconst Builder2 = ({ ...props }: any) => {\n  return (\n    <div className=\"flex-col\">\n      {props.debug ? (\n        <div className=\"flex justify-center\">\n          <Contact />\n        </div>\n      ) : (\n        <div className=\"bg-gray-500  flex-col p-3\">\n          <div className=\"flex justify-center items-center\">\n            <div className=\"w-1/2 p-3 bg-gray-400 mb-2\"></div>\n          </div>\n          <div className=\"flex justify-center items-center\">\n            <div className=\"w-1/2 p-3 bg-gray-400 mb-2\"></div>\n          </div>\n          <div className=\"flex justify-center items-center\">\n            <div className=\"w-1/2 p-3 bg-gray-400 mb-2\"></div>\n          </div>\n        </div>\n      )}\n\n      {props.debug ? (\n        <div className=\"p-3\">\n          <PersonalProfile />\n        </div>\n      ) : (\n        <div className=\"p-3 flex-col\">\n          <span>Personal Profile</span>\n          <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n          <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n          <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n        </div>\n      )}\n\n      {props.debug ? (\n        <div className=\"p-3\">\n          <Education />\n        </div>\n      ) : (\n        <div className=\"p-3 flex-col\">\n          <span>Education</span>\n          <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n          <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n          <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n        </div>\n      )}\n\n      {props.debug ? (\n        <div className=\"p-3\">\n          <Experience />\n        </div>\n      ) : (\n        <div className=\"p-3 flex-col\">\n          <span>Experience</span>\n          <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n          <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n          <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n        </div>\n      )}\n\n      {props.debug ? (\n        <div className=\"p-3\">\n          <Projects />\n        </div>\n      ) : (\n        <div className=\"p-3 flex-col\">\n          <span>Projects</span>\n          <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n          <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n          <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n        </div>\n      )}\n\n      {props.debug ? (\n        <div className=\"p-3\">\n          <Languages />\n        </div>\n      ) : (\n        <div className=\"p-3 flex-col\">\n          <span>Languages</span>\n          <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n          <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n          <div className=\"w-full p-3 bg-gray-400 mb-2\"></div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Builder2;\n","import React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Builder1 from \"./components/templates/builder/Builder1\";\nimport Builder2 from \"./components/templates/builder/Builder2\";\nimport { GlobalContext } from \"./services/AppContext\";\n\nconst Home = () => {\n  const [index, setIndex] = useState(0);\n  const templatesArray = [<Builder1 />, <Builder2 />];\n  const { updateTempIndex } = useContext(GlobalContext);\n\n  const next = () => {\n    if (index + 1 < templatesArray.length) {\n      setIndex(index + 1);\n    }\n  };\n  const previous = () => {\n    if (index - 1 >= 0) {\n      setIndex(index - 1);\n    }\n  };\n  return (\n    <>\n      <div className=\"flex justify-center\">\n        <h1>Choose Your CV Template</h1>\n      </div>\n      <div className=\"grid grid-cols-12\">\n        <div\n          onClick={() => previous()}\n          className=\"col-span-2 cursor-pointer flex justify-center items-center\"\n        >\n          {\"<\"}\n        </div>\n\n        <div className=\"col-span-8 cursor-pointer hover:bg-gray-300\">\n          <Link to=\"/builder\" onClick={() => updateTempIndex(index)}>\n            {templatesArray[index]}\n          </Link>\n        </div>\n        <div\n          onClick={() => next()}\n          className=\"col-span-2 cursor-pointer flex justify-center items-center\"\n        >\n          {\">\"}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\n\nconst MyModal = ({ ...props }) => {\n\n  return (\n    <Modal show={props.visible} onHide={() => props.onClick()}>\n      <Modal.Header closeButton>{props.Header}</Modal.Header>\n      <Modal.Body>{props.Body}</Modal.Body>\n    </Modal>\n  );\n};\nexport default MyModal;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../../../services/AppContext\";\nimport CommonFuntions from \"../../CommonFunctions\";\n\nconst Configurations = () => {\n  const { data, sectionIndex, updateSettingsModal } = useContext(GlobalContext);\n  const {\n    AddEducation,\n    ModifyText,\n    UpdateFromSection,\n    UpdateToSection,\n    UpdateTextSection,\n    AddExperience,\n    AddLanguage,\n    UpdateLanguage,\n    AddProject,\n    UpdateProjectDescription,\n    UpdateProjectName,\n    DeleteSection,\n    AddContact,\n    UpdateContactTitleSection,\n    UpdateContactDetailsSection,\n  } = CommonFuntions();\n\n  const Header = (\n    <div className=\"flex justify-between gap-x-0.5\">\n      <span> {sectionIndex.toUpperCase().replace(\"_\", \" \")}</span>\n      <span>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-6 w-6 cursor-pointer\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n          onClick={() => updateSettingsModal()}\n        >\n          <path\n            strokeWidth=\"2\"\n            d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"\n          />\n          <path strokeWidth=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n        </svg>\n      </span>\n    </div>\n  );\n\n  const Body = (\n    <div className=\"\">\n      {sectionIndex === \"personal_details\" ? (\n        <div className=\"flex-col\">\n          <div className=\"flex justify-center\">\n            <textarea\n              className={\"flex h-52 w-full \"}\n              onChange={(e) => ModifyText(e)}\n              placeholder=\"Type your profile\"\n              value={data[sectionIndex].text}\n            />\n          </div>\n        </div>\n      ) : sectionIndex === \"education\" ? (\n        <div className=\"flex-col\">\n          <div className=\"flex justify-center\">\n            <button\n              onClick={() => AddEducation()}\n              className=\"rounded h-12 w-full p-2 cursor-pointer bg-indigo-500\"\n            >\n              Add Education\n            </button>\n          </div>\n          <br />\n          <div className=\"flex-wrap justify-center flex items-center\">\n            {data[sectionIndex].sections.map((section: any, index: any) => {\n              return (\n                <div className=\"flex-col w-full gap-y-6 pl-2 pt-5\">\n                  <div className=\"flex justify-center\">\n                    <span>Education {index + 1}</span>\n                  </div>\n                  <div className=\"border-2 p-2 w-full\">\n                    <div className=\"flex-wrap w-full gap-x-3\">\n                      <input\n                        onChange={(e) => UpdateFromSection(e, index)}\n                        className=\"w-1/2 p-2 rounded\"\n                        placeholder=\"from\"\n                        type=\"date\"\n                        value={section.from}\n                      />\n                      <input\n                        className=\"w-1/2 p-2 rounded\"\n                        placeholder=\"To\"\n                        onChange={(e) => UpdateToSection(e, index)}\n                        type=\"date\"\n                        value={section.to}\n                      />\n                    </div>\n                    <br />\n                    <textarea\n                      className=\"rounded w-full p-2\"\n                      placeholder=\"Education\"\n                      onChange={(e) => UpdateTextSection(e, index)}\n                      value={section.text}\n                    />\n                  </div>\n                  <div className=\"flex justify-center\">\n                    <button\n                      onClick={() => DeleteSection(index)}\n                      className=\"p-3 w-full cursor-pointer bg-red-500\"\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      ) : sectionIndex === \"experience\" ? (\n        <div className=\"flex-col\">\n          <div className=\"flex justify-center\">\n            <button\n              onClick={() => AddExperience()}\n              className=\"rounded w-full h-12 p-2 cursor-pointer bg-indigo-500\"\n            >\n              Add Experience\n            </button>\n          </div>\n          <br />\n          <div className=\"flex-wrap justify-center flex items-center\">\n            {data[sectionIndex].sections.map((section: any, index: any) => {\n              return (\n                <div className=\"flex-col gap-y-6 pl-2 pt-5\">\n                  <div className=\"flex justify-center\">\n                    <span>Experience {index + 1}</span>\n                  </div>\n                  <div className=\"border-2 p-2\">\n                    <div className=\"flex-wrap gap-x-3\">\n                      <input\n                        onChange={(e) => UpdateFromSection(e, index)}\n                        className=\"w-1/2 p-2 rounded\"\n                        placeholder=\"from\"\n                        type=\"date\"\n                        value={section.from}\n                      />\n                      <input\n                        className=\"w-1/2 p-2 rounded\"\n                        placeholder=\"To\"\n                        onChange={(e) => UpdateToSection(e, index)}\n                        type=\"date\"\n                        value={section.to}\n                      />\n                    </div>\n                    <br />\n                    <textarea\n                      className=\"rounded w-full p-2\"\n                      placeholder=\"Experience\"\n                      onChange={(e) => UpdateTextSection(e, index)}\n                      value={section.text}\n                    />\n                  </div>\n                  <div className=\"flex justify-center\">\n                    <button\n                      onClick={() => DeleteSection(index)}\n                      className=\"p-3 w-full cursor-pointer bg-red-500\"\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      ) : sectionIndex === \"languages\" ? (\n        <div className=\"flex-col\">\n          <div className=\"flex justify-center\">\n            <button\n              onClick={() => AddLanguage()}\n              className=\"rounded w-full h-12 p-2 cursor-pointer bg-indigo-500\"\n            >\n              Add Language\n            </button>\n          </div>\n          {data[sectionIndex].sections.map((text: any, index: any) => {\n            return (\n              <div key={\"lang\" + index} className=\"flex-col align-middle\">\n                <div className=\"flex items-center\">\n                  <input\n                    onChange={(e) => UpdateLanguage(e, index)}\n                    className=\"p-2 mb-2 mt-2 w-full\"\n                    value={text}\n                    placeholder={\"Language \" + (index + 1)}\n                  />\n                  <div\n                    onClick={() => DeleteSection(index)}\n                    className=\"rounded bg-red-500 cursor-pointer flex justify-center items-center w-10 h-10\"\n                  >\n                    X\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      ) : sectionIndex === \"projects\" ? (\n        <div className=\"flex-col gap-y-2\">\n          <div className=\"flex-col flex justify-center\">\n            <input\n              placeholder=\"Projects Description \"\n              onChange={(e) => ModifyText(e)}\n              className=\"p-2\"\n            />{\" \"}\n            <br />\n            <button\n              onClick={() => AddProject()}\n              className=\"rounded h-12 p-2 cursor-pointer bg-indigo-500\"\n            >\n              Add Project\n            </button>\n          </div>\n          <div className=\"p-3\">\n            {data[sectionIndex].sections.map((section: any, index: any) => {\n              return (\n                <div key={\"project\" + index} className=\"flex-col mt-3\">\n                  <div className=\"flex justify-center\">\n                    <span>Project {index + 1}</span>\n                  </div>\n                  <div className=\"border-2\">\n                    <input\n                      onChange={(e) => UpdateProjectName(e, index)}\n                      placeholder=\"Project Title\"\n                      value={section.projectName}\n                      className=\"p-2 mb-3 w-full\"\n                    ></input>\n                    <textarea\n                      className=\"w-full p-2\"\n                      placeholder={\"Project \" + (index + 1)}\n                      onChange={(e) => UpdateProjectDescription(e, index)}\n                    >\n                      {section.projectDescription}\n                    </textarea>\n                  </div>\n                  <div className=\"flex justify-center\">\n                    <button\n                      onClick={() => DeleteSection(index)}\n                      className=\"p-3 w-full cursor-pointer bg-red-500\"\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      ) : sectionIndex === \"contact\" ? (\n        <div className=\"flex-col\">\n          <div className=\"flex justify-center\">\n            <button\n              onClick={() => AddContact()}\n              className=\"rounded cursor-pointer w-full h-12 p-2 bg-indigo-500\"\n            >\n              Add Contact\n            </button>\n          </div>\n          {data[sectionIndex].sections.map((section: any, index: any) => {\n            return (\n              <div key={\"contact\" + index} className=\"flex-col align-middle\">\n                <div className=\"flex items-center\">\n                  <input\n                    onChange={(e) => UpdateContactTitleSection(e, index)}\n                    className=\"p-2 mb-2 mt-2 w-full\"\n                    value={section.title}\n                    placeholder={\"Contact \" + (index + 1)}\n                  />\n\n                  <input\n                    onChange={(e) => UpdateContactDetailsSection(e, index)}\n                    className=\"p-2 mb-2 mt-2 w-full\"\n                    value={section.details}\n                    placeholder={\"Details\"}\n                  />\n\n                  <div\n                    onClick={() => DeleteSection(index)}\n                    className=\"rounded bg-red-500 flex justify-center cursor-pointer items-center w-10 h-10\"\n                  >\n                    X\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n\n  return { Header, Body } as const;\n};\n\nexport default Configurations;\n","import React, { useContext } from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { GlobalContext } from \"../../../services/AppContext\";\nimport { SketchPicker } from \"react-color\";\n\nconst Settings = () => {\n  const fontSizeArray = [\n    \"text-sm\",\n    \"text-lg\",\n    \"text-2xl\",\n    \"text-3xl\",\n    \"text-4xl\",\n  ];\n  const [visible, isVisible] = useState(false);\n  const { data, updateData, sectionIndex } = useContext(GlobalContext);\n  const tempSettings = {\n    fontSize: \"text-lg\",\n    textPosition: \"justify-start\",\n    textColor: \"#FFFFFF\",\n  };\n  const [settings, setSettings] = useState(tempSettings);\n  useEffect(() => {\n    if (sectionIndex !== \"\") {\n      setSettings(data[sectionIndex].settings);\n    }\n  }, [sectionIndex, data]);\n\n  const increaseFontSize = () => {\n    data[sectionIndex].settings.fontSize =\n      fontSizeArray[fontSizeArray.indexOf(settings.fontSize) + 1];\n    updateData(data);\n  };\n  const decreaseFontSize = () => {\n    data[sectionIndex].settings.fontSize =\n      fontSizeArray[fontSizeArray.indexOf(settings.fontSize) - 1];\n    updateData(data);\n  };\n  const modifyTextPosition = (event: any) => {\n    data[sectionIndex].settings.textPosition = event.target.value;\n    updateData(data);\n  };\n  const changeTextColor = (event: any) => {\n    data[sectionIndex].settings.textColor = event.hex;\n    updateData(data);\n  };\n  const SettingsHeader = (\n    <div>{sectionIndex.toUpperCase().replace(\"_\", \" \") + \" \"} SETTINGS </div>\n  );\n  const SettingsBody = (\n    <div className=\"flex flex-col gap-x-10 \">\n      <div className=\"flex flex-col h-14 justify-center items-center p-4\">\n        <span>Font Size</span>\n        <div className=\"flex w-full gap-x-3 justify-center items-center text-center\">\n          <input\n            className={\n              \"cursor-pointer w-10 text-center \" +\n              (fontSizeArray.indexOf(settings.fontSize) ===\n              fontSizeArray.length - 1\n                ? \"bg-gray-50\"\n                : \"bg-gray-400\")\n            }\n            value=\"+\"\n            onClick={() => increaseFontSize()}\n            disabled={\n              fontSizeArray.indexOf(settings.fontSize) ===\n              fontSizeArray.length - 1\n            }\n            readOnly={true}\n          />\n\n          <div>\n            <input\n              className={\"w-40 text-center \" + settings.fontSize}\n              value=\"Font Size\"\n              readOnly={true}\n            />\n          </div>\n          <input\n            className={\n              \"cursor-pointer w-10 text-center \" +\n              (fontSizeArray.indexOf(settings.fontSize) === 0\n                ? \"bg-gray-50\"\n                : \"bg-gray-400\")\n            }\n            value=\"-\"\n            onClick={() => decreaseFontSize()}\n            disabled={fontSizeArray.indexOf(settings.fontSize) === 0}\n            readOnly={true}\n          />\n        </div>\n      </div>\n      <br/>\n      <div className=\"flex w-full flex-col h-14 justify-center items-center p-4\">\n        <span>Position</span>\n          <select\n            value={settings.textPosition}\n            onChange={(e) => modifyTextPosition(e)}\n          >\n            <option value=\"justify-start\">Left</option>\n            <option value=\"justify-end\">Right</option>\n            <option value=\"justify-center\">Center</option>\n          </select>\n      </div>\n      <br/>\n      <div className=\"flex relative w-full flex-col h-14 justify-center items-center p-4\">\n        <span className=\"cursor-pointer\" onClick={() => isVisible(!visible)}>\n          Choose Color\n        </span>\n        {visible && (\n          <div className=\"absolute z-1 bottom-full top-10\">\n            <SketchPicker\n              color={settings.textColor}\n              onChange={(e: any) => changeTextColor(e)}\n            />\n            ColorPicker : {settings.textColor}\n          </div>\n        )}\n      </div>\n      <div></div>\n    </div>\n  );\n  return { SettingsHeader, SettingsBody } as const;\n};\n\nexport default Settings;\n","import classNames from \"classnames\";\nimport React, { useContext } from \"react\";\nimport { GlobalContext } from \"../../../services/AppContext\";\nimport CommonFuntions from \"../../CommonFunctions\";\n\nconst SideMenu = () => {\n  const { data, updateIndex, sectionIndex } = useContext(GlobalContext);\n\n  const { CheckSections, CheckProjectsStatus, CheckSectionTextStatus } =\n    CommonFuntions();\n\n  const updateTemplateIndex = (condition: boolean, sectionName: string) => {\n    if (condition) {\n      updateIndex(sectionName);\n    }\n  };\n  return (\n    <div className=\"flex-col justify-center items-start p-2 z-0 relative\">\n      <div\n        onClick={() => updateIndex(\"personal_details\")}\n        className={classNames(\"flex-col p-3 cursor-pointer rounded\", {\n          \"hover:bg-gray-200\": sectionIndex !== \"personal_details\",\n          \"bg-gray-200\": sectionIndex === \"personal_details\",\n        })}\n      >\n        <div className={\"flex items-center \"}>\n          <span className=\"\">Personal Profile</span>\n        </div>\n      </div>\n\n      <div\n        onClick={() =>\n          updateTemplateIndex(data.personal_details.text !== \"\", \"education\")\n        }\n        className={classNames(\"flex-col p-3 cursor-pointer rounded\", {\n          \"hover:bg-gray-200\":\n            sectionIndex !== \"education\" && data.personal_details.text !== \"\",\n          \"bg-gray-200\": sectionIndex === \"education\",\n          \"text-gray-500\": data.personal_details.text === \"\",\n        })}\n      >\n        <div className={\"flex items-center \"}>\n          <span className=\"\">Education</span>\n        </div>\n      </div>\n\n      <div\n        onClick={() =>\n          updateTemplateIndex(CheckSections(\"education\"), \"experience\")\n        }\n        className={classNames(\"flex-col p-3 cursor-pointer rounded\", {\n          \"hover:bg-gray-200\":\n            sectionIndex !== \"experience\" && CheckSections(\"education\"),\n          \"bg-gray-200\": sectionIndex === \"experience\",\n          \"text-gray-500\": !CheckSections(\"education\"),\n        })}\n      >\n        <div className={\"flex \"}>\n          <span className=\"\">Experience</span>\n        </div>\n      </div>\n\n      <div\n        onClick={() =>\n          updateTemplateIndex(CheckSections(\"experience\"), \"projects\")\n        }\n        className={classNames(\"flex-col p-3 cursor-pointer rounded\", {\n          \"hover:bg-gray-200\":\n            sectionIndex !== \"projects\" && CheckSections(\"experience\"),\n          \"bg-gray-200\": sectionIndex === \"projects\",\n          \"text-gray-500\": !CheckSections(\"experience\"),\n        })}\n      >\n        <div className={\"flex \"}>\n          <span className=\"\">Projects</span>\n        </div>\n      </div>\n\n      <div\n        onClick={() => updateTemplateIndex(CheckProjectsStatus(), \"languages\")}\n        className={classNames(\"flex-col p-3 cursor-pointer rounded\", {\n          \"hover:bg-gray-200\":\n            sectionIndex !== \"languages\" && CheckProjectsStatus(),\n          \"bg-gray-200\": sectionIndex === \"languages\",\n          \"text-gray-500\": !CheckProjectsStatus(),\n        })}\n      >\n        <div className={\"flex \"}>\n          <span className=\"\">Languages</span>\n        </div>\n      </div>\n\n      <div\n        onClick={() =>\n          updateTemplateIndex(CheckSectionTextStatus(\"languages\"), \"contact\")\n        }\n        className={classNames(\"flex-col p-3 cursor-pointer rounded\", {\n          \"hover:bg-gray-200\":\n            sectionIndex !== \"contact\" && CheckSectionTextStatus(\"languages\"),\n          \"bg-gray-200\": sectionIndex === \"contact\",\n          \"text-gray-500\": !CheckSectionTextStatus(\"languages\"),\n        })}\n      >\n        <div className={\"flex \"}>\n          <span className=\"\">Contact</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SideMenu;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../services/AppContext\";\nimport Builder1 from \"./templates/builder/Builder1\";\nimport Builder2 from \"./templates/builder/Builder2\";\n\nconst Wrapper = ({ ...props }: any) => {\n  const { templateIndex } = useContext(GlobalContext);\n  return templateIndex === 0 ? (\n    <Builder1 debug={true} />\n  ) : templateIndex === 1 ? (\n    <Builder2 debug={true} />\n  ) : (\n    <></>\n  );\n};\n\nexport default Wrapper;\n","import React, { useContext } from \"react\";\nimport Modal from \"./components/Modal\";\nimport Configurations from \"./components/templates/properties/Configurations\";\nimport Settings from \"./components/templates/properties/Settings\";\nimport SideMenu from \"./components/templates/properties/SideMenu\";\nimport Wrapper from \"./components/Wrapper\";\nimport { GlobalContext } from \"./services/AppContext\";\n\nconst Builder = () => {\n  const { Header, Body } = Configurations();\n  const { SettingsHeader, SettingsBody } = Settings();\n  const { updateIndex, sectionIndex, settingsModal, updateSettingsModal } =\n    useContext(GlobalContext);\n\n  const modifyTemplateVisibility = () => {\n    updateIndex(\"\");\n  };\n  const modifySettingsVisibility = () => {\n    updateSettingsModal();\n  };\n  return (\n    <>\n      <div className=\"grid grid-cols-12\">\n        <div className=\"col-span-3\">\n          <div className=\"flex items-center\">\n            <img src=\"logo.png\" className=\"w-1/4 h-1/2\" alt=\"\" />\n            <span>v 1.0.0</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"grid grid-cols-12 h-screen\">\n        <div className=\"bg-indigo-500 col-span-3 h-full\">\n          <SideMenu />\n        </div>\n\n        <div className=\"col-span-9 p-3\">\n          <Wrapper />\n\n          <div className=\"flex items-center\">\n            <Modal\n              Header={Header}\n              Body={Body}\n              visible={sectionIndex !== \"\"}\n              onClick={modifyTemplateVisibility}\n            />\n            <Modal\n              Header={SettingsHeader}\n              Body={SettingsBody}\n              visible={settingsModal}\n              onClick={modifySettingsVisibility}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Builder;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./tailwind.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport GlobalProvider from \"./services/AppContext\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Home from \"./Home\";\nimport Builder from \"./Builder\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nconst customHistory = createBrowserHistory();\n\nReactDOM.render(\n  <BrowserRouter>\n    <GlobalProvider>\n      <Router history={customHistory}>\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/builder\" component={Builder} exact />\n        </Switch>\n      </Router>\n    </GlobalProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}